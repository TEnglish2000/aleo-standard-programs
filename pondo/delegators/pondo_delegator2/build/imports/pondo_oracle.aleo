import credits.aleo;
program pondo_oracle.aleo;

struct committee_state:
    is_open as boolean;
    commission as u8;

struct bond_state:
    validator as address;
    microcredits as u64;


struct validator_datum:
    delegator as address;
    validator as address;
    block_height as u32;
    bonded_microcredits as u64;
    microcredits_yield_per_epoch as u128;
    commission as u8;
    boost as u128;

struct validator_boost:
    epoch as u32;
    boost_amount as u64;


mapping delegator_to_validator:
	key as address.public;
	value as address.public;


mapping validator_data:
	key as address.public;
	value as validator_datum.public;


mapping top_validators:
	key as u8.public;
	value as [address; 10u32].public;


mapping banned_validators:
	key as address.public;
	value as boolean.public;


mapping pondo_tvl:
	key as u8.public;
	value as u64.public;


mapping validator_boosting:
	key as address.public;
	value as validator_boost.public;


mapping control_addresses:
	key as address.public;
	value as boolean.public;


mapping delegator_allocation:
	key as u8.public;
	value as [u128; 10u32].public;


function initialize:
    async initialize into r0;
    output r0 as pondo_oracle.aleo/initialize.future;

finalize initialize:
    set true into control_addresses[aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0];
    set false into control_addresses[pondo_delegator1.aleo];
    set false into control_addresses[pondo_delegator2.aleo];
    set false into control_addresses[pondo_delegator3.aleo];
    set false into control_addresses[pondo_delegator4.aleo];
    set false into control_addresses[pondo_delegator5.aleo];
    cast  3700u128 2600u128 1600u128 1200u128 900u128 900u128 900u128 900u128 900u128 900u128 into r0 as [u128; 10u32];
    set r0 into delegator_allocation[0u8];
    cast  aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r1 as [address; 10u32];
    set r1 into top_validators[0u8];




function add_control_address:
    input r0 as address.public;
    async add_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_control_address.future;

finalize add_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set false into control_addresses[r0];




function remove_control_address:
    input r0 as address.public;
    async remove_control_address r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/remove_control_address.future;

finalize remove_control_address:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    remove control_addresses[r0];




function update_admin:
    input r0 as address.public;
    async update_admin r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_admin.future;

finalize update_admin:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into control_addresses[r0];
    remove control_addresses[r1];




function update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    async update_delegator_allocations r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/update_delegator_allocations.future;

finalize update_delegator_allocations:
    input r0 as [u128; 10u32].public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    set r0 into delegator_allocation[0u8];




function propose_delegator:
    input r0 as address.public;
    assert.neq self.caller self.signer;
    async propose_delegator self.caller r0 into r1;
    output r1 as pondo_oracle.aleo/propose_delegator.future;

finalize propose_delegator:
    input r0 as address.public;
    input r1 as address.public;
    contains banned_validators[r1] into r2;
    assert.eq r2 false;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 false;
    set r1 into delegator_to_validator[r0];




function add_delegator:
    input r0 as address.public;
    async add_delegator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/add_delegator.future;

finalize add_delegator:
    input r0 as address.public;
    input r1 as address.public;
    get control_addresses[r1] into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    assert.eq r3 true;
    get credits.aleo/withdraw[r0] into r4;
    assert.eq r4 r0;
    get delegator_to_validator[r0] into r5;
    get credits.aleo/bonded[r0] into r6;
    assert.eq r6.validator r5;
    contains banned_validators[r5] into r7;
    assert.eq r7 false;
    contains validator_data[r0] into r8;
    assert.eq r8 false;
    get credits.aleo/committee[r5] into r9;
    assert.eq r9.is_open true;
    lt r9.commission 50u8 into r10;
    assert.eq r10 true;
    cast r0 r5 block.height r6.microcredits 0u128 r9.commission 0u128 into r11 as validator_datum;
    set r11 into validator_data[r0];








function update_data:
    input r0 as address.public;
    async update_data r0 into r1;
    output r1 as pondo_oracle.aleo/update_data.future;

finalize update_data:
    input r0 as address.public;
    get validator_data[r0] into r1;
    contains banned_validators[r1.validator] into r2;
    assert.eq r2 false;
    rem block.height 120_960u32 into r3;
    gte r3 103_680u32 into r4;
    assert.eq r4 true;
    sub block.height r1.block_height into r5;
    gt r5 103_680u32 into r6;
    assert.eq r6 true;
    get credits.aleo/committee[r1.validator] into r7;
    lt r7.commission 50u8 into r8;
    assert.eq r8 true;
    assert.eq r7.is_open true;
    get credits.aleo/bonded[r0] into r9;
    div block.height 120_960u32 into r10;
    cast r9.microcredits into r11 as u128;
    cast r1.bonded_microcredits into r12 as u128;
    sub r11 r12 into r13;
    mul r13 10_000_000_000u128 into r14;
    cast r1.bonded_microcredits into r15 as u128;
    div r14 r15 into r16;
    cast 120_960u32 into r17 as u128;
    mul r16 r17 into r18;
    cast r5 into r19 as u128;
    div r18 r19 into r20;
    cast 0u32 0u64 into r21 as validator_boost;
    get.or_use validator_boosting[r1.validator] r21 into r22;
    is.eq r22.epoch r10 into r23;
    cast r22.boost_amount into r24 as u128;
    ternary r23 r24 0u128 into r25;
    get.or_use pondo_tvl[0u8] 10_000_000_000_000_000u64 into r26;
    cast r26 into r27 as u128;
    mul r25 10_000_000_000u128 into r28;
    cast r27 into r29 as u128;
    div r28 r29 into r30;
    div r1.block_height 120_960u32 into r31;
    add r31 1u32 into r32;
    is.eq r32 r10 into r33;
    add r20 r30 into r34;
    ternary r33 r34 0u128 into r35;
    cast r0 r1.validator block.height r9.microcredits r35 r7.commission r25 into r36 as validator_datum;
    get top_validators[0u8] into r37;
    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r38 as validator_datum;
    get.or_use validator_data[r37[0u32]] r38 into r39;
    get.or_use validator_data[r37[1u32]] r38 into r40;
    get.or_use validator_data[r37[2u32]] r38 into r41;
    get.or_use validator_data[r37[3u32]] r38 into r42;
    get.or_use validator_data[r37[4u32]] r38 into r43;
    get.or_use validator_data[r37[5u32]] r38 into r44;
    get.or_use validator_data[r37[6u32]] r38 into r45;
    get.or_use validator_data[r37[7u32]] r38 into r46;
    get.or_use validator_data[r37[8u32]] r38 into r47;
    get.or_use validator_data[r37[9u32]] r38 into r48;
    mul r10 120_960u32 into r49;
    get delegator_allocation[0u8] into r50;
    lt r39.block_height r49 into r51;
    lt r36.block_height r49 into r52;
    is.eq r39.microcredits_yield_per_epoch 0u128 into r53;
    is.eq r36.microcredits_yield_per_epoch 0u128 into r54;
    mul r36.boost 10_000u128 into r55;
    div r55 r50[0u32] into r56;
    add r36.microcredits_yield_per_epoch r56 into r57;
    mul r39.boost 10_000u128 into r58;
    div r58 r50[0u32] into r59;
    add r39.microcredits_yield_per_epoch r59 into r60;
    is.eq r36.validator r39.validator into r61;
    gt r57 r60 into r62;
    lt r57 r60 into r63;
    ternary r61 r62 r63 into r64;
    ternary r64 r39.delegator r36.delegator into r65;
    ternary r64 r39.validator r36.validator into r66;
    ternary r64 r39.block_height r36.block_height into r67;
    ternary r64 r39.bonded_microcredits r36.bonded_microcredits into r68;
    ternary r64 r39.microcredits_yield_per_epoch r36.microcredits_yield_per_epoch into r69;
    ternary r64 r39.commission r36.commission into r70;
    ternary r64 r39.boost r36.boost into r71;
    cast r65 r66 r67 r68 r69 r70 r71 into r72 as validator_datum;
    ternary r64 r36.delegator r39.delegator into r73;
    ternary r64 r36.validator r39.validator into r74;
    ternary r64 r36.block_height r39.block_height into r75;
    ternary r64 r36.bonded_microcredits r39.bonded_microcredits into r76;
    ternary r64 r36.microcredits_yield_per_epoch r39.microcredits_yield_per_epoch into r77;
    ternary r64 r36.commission r39.commission into r78;
    ternary r64 r36.boost r39.boost into r79;
    cast r73 r74 r75 r76 r77 r78 r79 into r80 as validator_datum;
    ternary r54 r39.delegator r72.delegator into r81;
    ternary r54 r39.validator r72.validator into r82;
    ternary r54 r39.block_height r72.block_height into r83;
    ternary r54 r39.bonded_microcredits r72.bonded_microcredits into r84;
    ternary r54 r39.microcredits_yield_per_epoch r72.microcredits_yield_per_epoch into r85;
    ternary r54 r39.commission r72.commission into r86;
    ternary r54 r39.boost r72.boost into r87;
    cast r81 r82 r83 r84 r85 r86 r87 into r88 as validator_datum;
    ternary r54 r36.delegator r80.delegator into r89;
    ternary r54 r36.validator r80.validator into r90;
    ternary r54 r36.block_height r80.block_height into r91;
    ternary r54 r36.bonded_microcredits r80.bonded_microcredits into r92;
    ternary r54 r36.microcredits_yield_per_epoch r80.microcredits_yield_per_epoch into r93;
    ternary r54 r36.commission r80.commission into r94;
    ternary r54 r36.boost r80.boost into r95;
    cast r89 r90 r91 r92 r93 r94 r95 into r96 as validator_datum;
    ternary r53 r36.delegator r88.delegator into r97;
    ternary r53 r36.validator r88.validator into r98;
    ternary r53 r36.block_height r88.block_height into r99;
    ternary r53 r36.bonded_microcredits r88.bonded_microcredits into r100;
    ternary r53 r36.microcredits_yield_per_epoch r88.microcredits_yield_per_epoch into r101;
    ternary r53 r36.commission r88.commission into r102;
    ternary r53 r36.boost r88.boost into r103;
    cast r97 r98 r99 r100 r101 r102 r103 into r104 as validator_datum;
    ternary r53 r39.delegator r96.delegator into r105;
    ternary r53 r39.validator r96.validator into r106;
    ternary r53 r39.block_height r96.block_height into r107;
    ternary r53 r39.bonded_microcredits r96.bonded_microcredits into r108;
    ternary r53 r39.microcredits_yield_per_epoch r96.microcredits_yield_per_epoch into r109;
    ternary r53 r39.commission r96.commission into r110;
    ternary r53 r39.boost r96.boost into r111;
    cast r105 r106 r107 r108 r109 r110 r111 into r112 as validator_datum;
    ternary r52 r39.delegator r104.delegator into r113;
    ternary r52 r39.validator r104.validator into r114;
    ternary r52 r39.block_height r104.block_height into r115;
    ternary r52 r39.bonded_microcredits r104.bonded_microcredits into r116;
    ternary r52 r39.microcredits_yield_per_epoch r104.microcredits_yield_per_epoch into r117;
    ternary r52 r39.commission r104.commission into r118;
    ternary r52 r39.boost r104.boost into r119;
    cast r113 r114 r115 r116 r117 r118 r119 into r120 as validator_datum;
    ternary r52 r36.delegator r112.delegator into r121;
    ternary r52 r36.validator r112.validator into r122;
    ternary r52 r36.block_height r112.block_height into r123;
    ternary r52 r36.bonded_microcredits r112.bonded_microcredits into r124;
    ternary r52 r36.microcredits_yield_per_epoch r112.microcredits_yield_per_epoch into r125;
    ternary r52 r36.commission r112.commission into r126;
    ternary r52 r36.boost r112.boost into r127;
    cast r121 r122 r123 r124 r125 r126 r127 into r128 as validator_datum;
    ternary r51 r36.delegator r120.delegator into r129;
    ternary r51 r36.validator r120.validator into r130;
    ternary r51 r36.block_height r120.block_height into r131;
    ternary r51 r36.bonded_microcredits r120.bonded_microcredits into r132;
    ternary r51 r36.microcredits_yield_per_epoch r120.microcredits_yield_per_epoch into r133;
    ternary r51 r36.commission r120.commission into r134;
    ternary r51 r36.boost r120.boost into r135;
    cast r129 r130 r131 r132 r133 r134 r135 into r136 as validator_datum;
    ternary r51 r39.delegator r128.delegator into r137;
    ternary r51 r39.validator r128.validator into r138;
    ternary r51 r39.block_height r128.block_height into r139;
    ternary r51 r39.bonded_microcredits r128.bonded_microcredits into r140;
    ternary r51 r39.microcredits_yield_per_epoch r128.microcredits_yield_per_epoch into r141;
    ternary r51 r39.commission r128.commission into r142;
    ternary r51 r39.boost r128.boost into r143;
    cast r137 r138 r139 r140 r141 r142 r143 into r144 as validator_datum;
    lt r40.block_height r49 into r145;
    lt r144.block_height r49 into r146;
    is.eq r40.microcredits_yield_per_epoch 0u128 into r147;
    is.eq r144.microcredits_yield_per_epoch 0u128 into r148;
    mul r144.boost 10_000u128 into r149;
    div r149 r50[1u32] into r150;
    add r144.microcredits_yield_per_epoch r150 into r151;
    mul r40.boost 10_000u128 into r152;
    div r152 r50[1u32] into r153;
    add r40.microcredits_yield_per_epoch r153 into r154;
    is.eq r144.validator r40.validator into r155;
    gt r151 r154 into r156;
    lt r151 r154 into r157;
    ternary r155 r156 r157 into r158;
    ternary r158 r40.delegator r144.delegator into r159;
    ternary r158 r40.validator r144.validator into r160;
    ternary r158 r40.block_height r144.block_height into r161;
    ternary r158 r40.bonded_microcredits r144.bonded_microcredits into r162;
    ternary r158 r40.microcredits_yield_per_epoch r144.microcredits_yield_per_epoch into r163;
    ternary r158 r40.commission r144.commission into r164;
    ternary r158 r40.boost r144.boost into r165;
    cast r159 r160 r161 r162 r163 r164 r165 into r166 as validator_datum;
    ternary r158 r144.delegator r40.delegator into r167;
    ternary r158 r144.validator r40.validator into r168;
    ternary r158 r144.block_height r40.block_height into r169;
    ternary r158 r144.bonded_microcredits r40.bonded_microcredits into r170;
    ternary r158 r144.microcredits_yield_per_epoch r40.microcredits_yield_per_epoch into r171;
    ternary r158 r144.commission r40.commission into r172;
    ternary r158 r144.boost r40.boost into r173;
    cast r167 r168 r169 r170 r171 r172 r173 into r174 as validator_datum;
    ternary r148 r40.delegator r166.delegator into r175;
    ternary r148 r40.validator r166.validator into r176;
    ternary r148 r40.block_height r166.block_height into r177;
    ternary r148 r40.bonded_microcredits r166.bonded_microcredits into r178;
    ternary r148 r40.microcredits_yield_per_epoch r166.microcredits_yield_per_epoch into r179;
    ternary r148 r40.commission r166.commission into r180;
    ternary r148 r40.boost r166.boost into r181;
    cast r175 r176 r177 r178 r179 r180 r181 into r182 as validator_datum;
    ternary r148 r144.delegator r174.delegator into r183;
    ternary r148 r144.validator r174.validator into r184;
    ternary r148 r144.block_height r174.block_height into r185;
    ternary r148 r144.bonded_microcredits r174.bonded_microcredits into r186;
    ternary r148 r144.microcredits_yield_per_epoch r174.microcredits_yield_per_epoch into r187;
    ternary r148 r144.commission r174.commission into r188;
    ternary r148 r144.boost r174.boost into r189;
    cast r183 r184 r185 r186 r187 r188 r189 into r190 as validator_datum;
    ternary r147 r144.delegator r182.delegator into r191;
    ternary r147 r144.validator r182.validator into r192;
    ternary r147 r144.block_height r182.block_height into r193;
    ternary r147 r144.bonded_microcredits r182.bonded_microcredits into r194;
    ternary r147 r144.microcredits_yield_per_epoch r182.microcredits_yield_per_epoch into r195;
    ternary r147 r144.commission r182.commission into r196;
    ternary r147 r144.boost r182.boost into r197;
    cast r191 r192 r193 r194 r195 r196 r197 into r198 as validator_datum;
    ternary r147 r40.delegator r190.delegator into r199;
    ternary r147 r40.validator r190.validator into r200;
    ternary r147 r40.block_height r190.block_height into r201;
    ternary r147 r40.bonded_microcredits r190.bonded_microcredits into r202;
    ternary r147 r40.microcredits_yield_per_epoch r190.microcredits_yield_per_epoch into r203;
    ternary r147 r40.commission r190.commission into r204;
    ternary r147 r40.boost r190.boost into r205;
    cast r199 r200 r201 r202 r203 r204 r205 into r206 as validator_datum;
    ternary r146 r40.delegator r198.delegator into r207;
    ternary r146 r40.validator r198.validator into r208;
    ternary r146 r40.block_height r198.block_height into r209;
    ternary r146 r40.bonded_microcredits r198.bonded_microcredits into r210;
    ternary r146 r40.microcredits_yield_per_epoch r198.microcredits_yield_per_epoch into r211;
    ternary r146 r40.commission r198.commission into r212;
    ternary r146 r40.boost r198.boost into r213;
    cast r207 r208 r209 r210 r211 r212 r213 into r214 as validator_datum;
    ternary r146 r144.delegator r206.delegator into r215;
    ternary r146 r144.validator r206.validator into r216;
    ternary r146 r144.block_height r206.block_height into r217;
    ternary r146 r144.bonded_microcredits r206.bonded_microcredits into r218;
    ternary r146 r144.microcredits_yield_per_epoch r206.microcredits_yield_per_epoch into r219;
    ternary r146 r144.commission r206.commission into r220;
    ternary r146 r144.boost r206.boost into r221;
    cast r215 r216 r217 r218 r219 r220 r221 into r222 as validator_datum;
    ternary r145 r144.delegator r214.delegator into r223;
    ternary r145 r144.validator r214.validator into r224;
    ternary r145 r144.block_height r214.block_height into r225;
    ternary r145 r144.bonded_microcredits r214.bonded_microcredits into r226;
    ternary r145 r144.microcredits_yield_per_epoch r214.microcredits_yield_per_epoch into r227;
    ternary r145 r144.commission r214.commission into r228;
    ternary r145 r144.boost r214.boost into r229;
    cast r223 r224 r225 r226 r227 r228 r229 into r230 as validator_datum;
    ternary r145 r40.delegator r222.delegator into r231;
    ternary r145 r40.validator r222.validator into r232;
    ternary r145 r40.block_height r222.block_height into r233;
    ternary r145 r40.bonded_microcredits r222.bonded_microcredits into r234;
    ternary r145 r40.microcredits_yield_per_epoch r222.microcredits_yield_per_epoch into r235;
    ternary r145 r40.commission r222.commission into r236;
    ternary r145 r40.boost r222.boost into r237;
    cast r231 r232 r233 r234 r235 r236 r237 into r238 as validator_datum;
    lt r41.block_height r49 into r239;
    lt r238.block_height r49 into r240;
    is.eq r41.microcredits_yield_per_epoch 0u128 into r241;
    is.eq r238.microcredits_yield_per_epoch 0u128 into r242;
    mul r238.boost 10_000u128 into r243;
    div r243 r50[2u32] into r244;
    add r238.microcredits_yield_per_epoch r244 into r245;
    mul r41.boost 10_000u128 into r246;
    div r246 r50[2u32] into r247;
    add r41.microcredits_yield_per_epoch r247 into r248;
    is.eq r238.validator r41.validator into r249;
    gt r245 r248 into r250;
    lt r245 r248 into r251;
    ternary r249 r250 r251 into r252;
    ternary r252 r41.delegator r238.delegator into r253;
    ternary r252 r41.validator r238.validator into r254;
    ternary r252 r41.block_height r238.block_height into r255;
    ternary r252 r41.bonded_microcredits r238.bonded_microcredits into r256;
    ternary r252 r41.microcredits_yield_per_epoch r238.microcredits_yield_per_epoch into r257;
    ternary r252 r41.commission r238.commission into r258;
    ternary r252 r41.boost r238.boost into r259;
    cast r253 r254 r255 r256 r257 r258 r259 into r260 as validator_datum;
    ternary r252 r238.delegator r41.delegator into r261;
    ternary r252 r238.validator r41.validator into r262;
    ternary r252 r238.block_height r41.block_height into r263;
    ternary r252 r238.bonded_microcredits r41.bonded_microcredits into r264;
    ternary r252 r238.microcredits_yield_per_epoch r41.microcredits_yield_per_epoch into r265;
    ternary r252 r238.commission r41.commission into r266;
    ternary r252 r238.boost r41.boost into r267;
    cast r261 r262 r263 r264 r265 r266 r267 into r268 as validator_datum;
    ternary r242 r41.delegator r260.delegator into r269;
    ternary r242 r41.validator r260.validator into r270;
    ternary r242 r41.block_height r260.block_height into r271;
    ternary r242 r41.bonded_microcredits r260.bonded_microcredits into r272;
    ternary r242 r41.microcredits_yield_per_epoch r260.microcredits_yield_per_epoch into r273;
    ternary r242 r41.commission r260.commission into r274;
    ternary r242 r41.boost r260.boost into r275;
    cast r269 r270 r271 r272 r273 r274 r275 into r276 as validator_datum;
    ternary r242 r238.delegator r268.delegator into r277;
    ternary r242 r238.validator r268.validator into r278;
    ternary r242 r238.block_height r268.block_height into r279;
    ternary r242 r238.bonded_microcredits r268.bonded_microcredits into r280;
    ternary r242 r238.microcredits_yield_per_epoch r268.microcredits_yield_per_epoch into r281;
    ternary r242 r238.commission r268.commission into r282;
    ternary r242 r238.boost r268.boost into r283;
    cast r277 r278 r279 r280 r281 r282 r283 into r284 as validator_datum;
    ternary r241 r238.delegator r276.delegator into r285;
    ternary r241 r238.validator r276.validator into r286;
    ternary r241 r238.block_height r276.block_height into r287;
    ternary r241 r238.bonded_microcredits r276.bonded_microcredits into r288;
    ternary r241 r238.microcredits_yield_per_epoch r276.microcredits_yield_per_epoch into r289;
    ternary r241 r238.commission r276.commission into r290;
    ternary r241 r238.boost r276.boost into r291;
    cast r285 r286 r287 r288 r289 r290 r291 into r292 as validator_datum;
    ternary r241 r41.delegator r284.delegator into r293;
    ternary r241 r41.validator r284.validator into r294;
    ternary r241 r41.block_height r284.block_height into r295;
    ternary r241 r41.bonded_microcredits r284.bonded_microcredits into r296;
    ternary r241 r41.microcredits_yield_per_epoch r284.microcredits_yield_per_epoch into r297;
    ternary r241 r41.commission r284.commission into r298;
    ternary r241 r41.boost r284.boost into r299;
    cast r293 r294 r295 r296 r297 r298 r299 into r300 as validator_datum;
    ternary r240 r41.delegator r292.delegator into r301;
    ternary r240 r41.validator r292.validator into r302;
    ternary r240 r41.block_height r292.block_height into r303;
    ternary r240 r41.bonded_microcredits r292.bonded_microcredits into r304;
    ternary r240 r41.microcredits_yield_per_epoch r292.microcredits_yield_per_epoch into r305;
    ternary r240 r41.commission r292.commission into r306;
    ternary r240 r41.boost r292.boost into r307;
    cast r301 r302 r303 r304 r305 r306 r307 into r308 as validator_datum;
    ternary r240 r238.delegator r300.delegator into r309;
    ternary r240 r238.validator r300.validator into r310;
    ternary r240 r238.block_height r300.block_height into r311;
    ternary r240 r238.bonded_microcredits r300.bonded_microcredits into r312;
    ternary r240 r238.microcredits_yield_per_epoch r300.microcredits_yield_per_epoch into r313;
    ternary r240 r238.commission r300.commission into r314;
    ternary r240 r238.boost r300.boost into r315;
    cast r309 r310 r311 r312 r313 r314 r315 into r316 as validator_datum;
    ternary r239 r238.delegator r308.delegator into r317;
    ternary r239 r238.validator r308.validator into r318;
    ternary r239 r238.block_height r308.block_height into r319;
    ternary r239 r238.bonded_microcredits r308.bonded_microcredits into r320;
    ternary r239 r238.microcredits_yield_per_epoch r308.microcredits_yield_per_epoch into r321;
    ternary r239 r238.commission r308.commission into r322;
    ternary r239 r238.boost r308.boost into r323;
    cast r317 r318 r319 r320 r321 r322 r323 into r324 as validator_datum;
    ternary r239 r41.delegator r316.delegator into r325;
    ternary r239 r41.validator r316.validator into r326;
    ternary r239 r41.block_height r316.block_height into r327;
    ternary r239 r41.bonded_microcredits r316.bonded_microcredits into r328;
    ternary r239 r41.microcredits_yield_per_epoch r316.microcredits_yield_per_epoch into r329;
    ternary r239 r41.commission r316.commission into r330;
    ternary r239 r41.boost r316.boost into r331;
    cast r325 r326 r327 r328 r329 r330 r331 into r332 as validator_datum;
    lt r42.block_height r49 into r333;
    lt r332.block_height r49 into r334;
    is.eq r42.microcredits_yield_per_epoch 0u128 into r335;
    is.eq r332.microcredits_yield_per_epoch 0u128 into r336;
    mul r332.boost 10_000u128 into r337;
    div r337 r50[3u32] into r338;
    add r332.microcredits_yield_per_epoch r338 into r339;
    mul r42.boost 10_000u128 into r340;
    div r340 r50[3u32] into r341;
    add r42.microcredits_yield_per_epoch r341 into r342;
    is.eq r332.validator r42.validator into r343;
    gt r339 r342 into r344;
    lt r339 r342 into r345;
    ternary r343 r344 r345 into r346;
    ternary r346 r42.delegator r332.delegator into r347;
    ternary r346 r42.validator r332.validator into r348;
    ternary r346 r42.block_height r332.block_height into r349;
    ternary r346 r42.bonded_microcredits r332.bonded_microcredits into r350;
    ternary r346 r42.microcredits_yield_per_epoch r332.microcredits_yield_per_epoch into r351;
    ternary r346 r42.commission r332.commission into r352;
    ternary r346 r42.boost r332.boost into r353;
    cast r347 r348 r349 r350 r351 r352 r353 into r354 as validator_datum;
    ternary r346 r332.delegator r42.delegator into r355;
    ternary r346 r332.validator r42.validator into r356;
    ternary r346 r332.block_height r42.block_height into r357;
    ternary r346 r332.bonded_microcredits r42.bonded_microcredits into r358;
    ternary r346 r332.microcredits_yield_per_epoch r42.microcredits_yield_per_epoch into r359;
    ternary r346 r332.commission r42.commission into r360;
    ternary r346 r332.boost r42.boost into r361;
    cast r355 r356 r357 r358 r359 r360 r361 into r362 as validator_datum;
    ternary r336 r42.delegator r354.delegator into r363;
    ternary r336 r42.validator r354.validator into r364;
    ternary r336 r42.block_height r354.block_height into r365;
    ternary r336 r42.bonded_microcredits r354.bonded_microcredits into r366;
    ternary r336 r42.microcredits_yield_per_epoch r354.microcredits_yield_per_epoch into r367;
    ternary r336 r42.commission r354.commission into r368;
    ternary r336 r42.boost r354.boost into r369;
    cast r363 r364 r365 r366 r367 r368 r369 into r370 as validator_datum;
    ternary r336 r332.delegator r362.delegator into r371;
    ternary r336 r332.validator r362.validator into r372;
    ternary r336 r332.block_height r362.block_height into r373;
    ternary r336 r332.bonded_microcredits r362.bonded_microcredits into r374;
    ternary r336 r332.microcredits_yield_per_epoch r362.microcredits_yield_per_epoch into r375;
    ternary r336 r332.commission r362.commission into r376;
    ternary r336 r332.boost r362.boost into r377;
    cast r371 r372 r373 r374 r375 r376 r377 into r378 as validator_datum;
    ternary r335 r332.delegator r370.delegator into r379;
    ternary r335 r332.validator r370.validator into r380;
    ternary r335 r332.block_height r370.block_height into r381;
    ternary r335 r332.bonded_microcredits r370.bonded_microcredits into r382;
    ternary r335 r332.microcredits_yield_per_epoch r370.microcredits_yield_per_epoch into r383;
    ternary r335 r332.commission r370.commission into r384;
    ternary r335 r332.boost r370.boost into r385;
    cast r379 r380 r381 r382 r383 r384 r385 into r386 as validator_datum;
    ternary r335 r42.delegator r378.delegator into r387;
    ternary r335 r42.validator r378.validator into r388;
    ternary r335 r42.block_height r378.block_height into r389;
    ternary r335 r42.bonded_microcredits r378.bonded_microcredits into r390;
    ternary r335 r42.microcredits_yield_per_epoch r378.microcredits_yield_per_epoch into r391;
    ternary r335 r42.commission r378.commission into r392;
    ternary r335 r42.boost r378.boost into r393;
    cast r387 r388 r389 r390 r391 r392 r393 into r394 as validator_datum;
    ternary r334 r42.delegator r386.delegator into r395;
    ternary r334 r42.validator r386.validator into r396;
    ternary r334 r42.block_height r386.block_height into r397;
    ternary r334 r42.bonded_microcredits r386.bonded_microcredits into r398;
    ternary r334 r42.microcredits_yield_per_epoch r386.microcredits_yield_per_epoch into r399;
    ternary r334 r42.commission r386.commission into r400;
    ternary r334 r42.boost r386.boost into r401;
    cast r395 r396 r397 r398 r399 r400 r401 into r402 as validator_datum;
    ternary r334 r332.delegator r394.delegator into r403;
    ternary r334 r332.validator r394.validator into r404;
    ternary r334 r332.block_height r394.block_height into r405;
    ternary r334 r332.bonded_microcredits r394.bonded_microcredits into r406;
    ternary r334 r332.microcredits_yield_per_epoch r394.microcredits_yield_per_epoch into r407;
    ternary r334 r332.commission r394.commission into r408;
    ternary r334 r332.boost r394.boost into r409;
    cast r403 r404 r405 r406 r407 r408 r409 into r410 as validator_datum;
    ternary r333 r332.delegator r402.delegator into r411;
    ternary r333 r332.validator r402.validator into r412;
    ternary r333 r332.block_height r402.block_height into r413;
    ternary r333 r332.bonded_microcredits r402.bonded_microcredits into r414;
    ternary r333 r332.microcredits_yield_per_epoch r402.microcredits_yield_per_epoch into r415;
    ternary r333 r332.commission r402.commission into r416;
    ternary r333 r332.boost r402.boost into r417;
    cast r411 r412 r413 r414 r415 r416 r417 into r418 as validator_datum;
    ternary r333 r42.delegator r410.delegator into r419;
    ternary r333 r42.validator r410.validator into r420;
    ternary r333 r42.block_height r410.block_height into r421;
    ternary r333 r42.bonded_microcredits r410.bonded_microcredits into r422;
    ternary r333 r42.microcredits_yield_per_epoch r410.microcredits_yield_per_epoch into r423;
    ternary r333 r42.commission r410.commission into r424;
    ternary r333 r42.boost r410.boost into r425;
    cast r419 r420 r421 r422 r423 r424 r425 into r426 as validator_datum;
    lt r43.block_height r49 into r427;
    lt r426.block_height r49 into r428;
    is.eq r43.microcredits_yield_per_epoch 0u128 into r429;
    is.eq r426.microcredits_yield_per_epoch 0u128 into r430;
    mul r426.boost 10_000u128 into r431;
    div r431 r50[4u32] into r432;
    add r426.microcredits_yield_per_epoch r432 into r433;
    mul r43.boost 10_000u128 into r434;
    div r434 r50[4u32] into r435;
    add r43.microcredits_yield_per_epoch r435 into r436;
    is.eq r426.validator r43.validator into r437;
    gt r433 r436 into r438;
    lt r433 r436 into r439;
    ternary r437 r438 r439 into r440;
    ternary r440 r43.delegator r426.delegator into r441;
    ternary r440 r43.validator r426.validator into r442;
    ternary r440 r43.block_height r426.block_height into r443;
    ternary r440 r43.bonded_microcredits r426.bonded_microcredits into r444;
    ternary r440 r43.microcredits_yield_per_epoch r426.microcredits_yield_per_epoch into r445;
    ternary r440 r43.commission r426.commission into r446;
    ternary r440 r43.boost r426.boost into r447;
    cast r441 r442 r443 r444 r445 r446 r447 into r448 as validator_datum;
    ternary r440 r426.delegator r43.delegator into r449;
    ternary r440 r426.validator r43.validator into r450;
    ternary r440 r426.block_height r43.block_height into r451;
    ternary r440 r426.bonded_microcredits r43.bonded_microcredits into r452;
    ternary r440 r426.microcredits_yield_per_epoch r43.microcredits_yield_per_epoch into r453;
    ternary r440 r426.commission r43.commission into r454;
    ternary r440 r426.boost r43.boost into r455;
    cast r449 r450 r451 r452 r453 r454 r455 into r456 as validator_datum;
    ternary r430 r43.delegator r448.delegator into r457;
    ternary r430 r43.validator r448.validator into r458;
    ternary r430 r43.block_height r448.block_height into r459;
    ternary r430 r43.bonded_microcredits r448.bonded_microcredits into r460;
    ternary r430 r43.microcredits_yield_per_epoch r448.microcredits_yield_per_epoch into r461;
    ternary r430 r43.commission r448.commission into r462;
    ternary r430 r43.boost r448.boost into r463;
    cast r457 r458 r459 r460 r461 r462 r463 into r464 as validator_datum;
    ternary r430 r426.delegator r456.delegator into r465;
    ternary r430 r426.validator r456.validator into r466;
    ternary r430 r426.block_height r456.block_height into r467;
    ternary r430 r426.bonded_microcredits r456.bonded_microcredits into r468;
    ternary r430 r426.microcredits_yield_per_epoch r456.microcredits_yield_per_epoch into r469;
    ternary r430 r426.commission r456.commission into r470;
    ternary r430 r426.boost r456.boost into r471;
    cast r465 r466 r467 r468 r469 r470 r471 into r472 as validator_datum;
    ternary r429 r426.delegator r464.delegator into r473;
    ternary r429 r426.validator r464.validator into r474;
    ternary r429 r426.block_height r464.block_height into r475;
    ternary r429 r426.bonded_microcredits r464.bonded_microcredits into r476;
    ternary r429 r426.microcredits_yield_per_epoch r464.microcredits_yield_per_epoch into r477;
    ternary r429 r426.commission r464.commission into r478;
    ternary r429 r426.boost r464.boost into r479;
    cast r473 r474 r475 r476 r477 r478 r479 into r480 as validator_datum;
    ternary r429 r43.delegator r472.delegator into r481;
    ternary r429 r43.validator r472.validator into r482;
    ternary r429 r43.block_height r472.block_height into r483;
    ternary r429 r43.bonded_microcredits r472.bonded_microcredits into r484;
    ternary r429 r43.microcredits_yield_per_epoch r472.microcredits_yield_per_epoch into r485;
    ternary r429 r43.commission r472.commission into r486;
    ternary r429 r43.boost r472.boost into r487;
    cast r481 r482 r483 r484 r485 r486 r487 into r488 as validator_datum;
    ternary r428 r43.delegator r480.delegator into r489;
    ternary r428 r43.validator r480.validator into r490;
    ternary r428 r43.block_height r480.block_height into r491;
    ternary r428 r43.bonded_microcredits r480.bonded_microcredits into r492;
    ternary r428 r43.microcredits_yield_per_epoch r480.microcredits_yield_per_epoch into r493;
    ternary r428 r43.commission r480.commission into r494;
    ternary r428 r43.boost r480.boost into r495;
    cast r489 r490 r491 r492 r493 r494 r495 into r496 as validator_datum;
    ternary r428 r426.delegator r488.delegator into r497;
    ternary r428 r426.validator r488.validator into r498;
    ternary r428 r426.block_height r488.block_height into r499;
    ternary r428 r426.bonded_microcredits r488.bonded_microcredits into r500;
    ternary r428 r426.microcredits_yield_per_epoch r488.microcredits_yield_per_epoch into r501;
    ternary r428 r426.commission r488.commission into r502;
    ternary r428 r426.boost r488.boost into r503;
    cast r497 r498 r499 r500 r501 r502 r503 into r504 as validator_datum;
    ternary r427 r426.delegator r496.delegator into r505;
    ternary r427 r426.validator r496.validator into r506;
    ternary r427 r426.block_height r496.block_height into r507;
    ternary r427 r426.bonded_microcredits r496.bonded_microcredits into r508;
    ternary r427 r426.microcredits_yield_per_epoch r496.microcredits_yield_per_epoch into r509;
    ternary r427 r426.commission r496.commission into r510;
    ternary r427 r426.boost r496.boost into r511;
    cast r505 r506 r507 r508 r509 r510 r511 into r512 as validator_datum;
    ternary r427 r43.delegator r504.delegator into r513;
    ternary r427 r43.validator r504.validator into r514;
    ternary r427 r43.block_height r504.block_height into r515;
    ternary r427 r43.bonded_microcredits r504.bonded_microcredits into r516;
    ternary r427 r43.microcredits_yield_per_epoch r504.microcredits_yield_per_epoch into r517;
    ternary r427 r43.commission r504.commission into r518;
    ternary r427 r43.boost r504.boost into r519;
    cast r513 r514 r515 r516 r517 r518 r519 into r520 as validator_datum;
    lt r44.block_height r49 into r521;
    lt r520.block_height r49 into r522;
    is.eq r44.microcredits_yield_per_epoch 0u128 into r523;
    is.eq r520.microcredits_yield_per_epoch 0u128 into r524;
    mul r520.boost 10_000u128 into r525;
    div r525 r50[5u32] into r526;
    add r520.microcredits_yield_per_epoch r526 into r527;
    mul r44.boost 10_000u128 into r528;
    div r528 r50[5u32] into r529;
    add r44.microcredits_yield_per_epoch r529 into r530;
    is.eq r520.validator r44.validator into r531;
    gt r527 r530 into r532;
    lt r527 r530 into r533;
    ternary r531 r532 r533 into r534;
    ternary r534 r44.delegator r520.delegator into r535;
    ternary r534 r44.validator r520.validator into r536;
    ternary r534 r44.block_height r520.block_height into r537;
    ternary r534 r44.bonded_microcredits r520.bonded_microcredits into r538;
    ternary r534 r44.microcredits_yield_per_epoch r520.microcredits_yield_per_epoch into r539;
    ternary r534 r44.commission r520.commission into r540;
    ternary r534 r44.boost r520.boost into r541;
    cast r535 r536 r537 r538 r539 r540 r541 into r542 as validator_datum;
    ternary r534 r520.delegator r44.delegator into r543;
    ternary r534 r520.validator r44.validator into r544;
    ternary r534 r520.block_height r44.block_height into r545;
    ternary r534 r520.bonded_microcredits r44.bonded_microcredits into r546;
    ternary r534 r520.microcredits_yield_per_epoch r44.microcredits_yield_per_epoch into r547;
    ternary r534 r520.commission r44.commission into r548;
    ternary r534 r520.boost r44.boost into r549;
    cast r543 r544 r545 r546 r547 r548 r549 into r550 as validator_datum;
    ternary r524 r44.delegator r542.delegator into r551;
    ternary r524 r44.validator r542.validator into r552;
    ternary r524 r44.block_height r542.block_height into r553;
    ternary r524 r44.bonded_microcredits r542.bonded_microcredits into r554;
    ternary r524 r44.microcredits_yield_per_epoch r542.microcredits_yield_per_epoch into r555;
    ternary r524 r44.commission r542.commission into r556;
    ternary r524 r44.boost r542.boost into r557;
    cast r551 r552 r553 r554 r555 r556 r557 into r558 as validator_datum;
    ternary r524 r520.delegator r550.delegator into r559;
    ternary r524 r520.validator r550.validator into r560;
    ternary r524 r520.block_height r550.block_height into r561;
    ternary r524 r520.bonded_microcredits r550.bonded_microcredits into r562;
    ternary r524 r520.microcredits_yield_per_epoch r550.microcredits_yield_per_epoch into r563;
    ternary r524 r520.commission r550.commission into r564;
    ternary r524 r520.boost r550.boost into r565;
    cast r559 r560 r561 r562 r563 r564 r565 into r566 as validator_datum;
    ternary r523 r520.delegator r558.delegator into r567;
    ternary r523 r520.validator r558.validator into r568;
    ternary r523 r520.block_height r558.block_height into r569;
    ternary r523 r520.bonded_microcredits r558.bonded_microcredits into r570;
    ternary r523 r520.microcredits_yield_per_epoch r558.microcredits_yield_per_epoch into r571;
    ternary r523 r520.commission r558.commission into r572;
    ternary r523 r520.boost r558.boost into r573;
    cast r567 r568 r569 r570 r571 r572 r573 into r574 as validator_datum;
    ternary r523 r44.delegator r566.delegator into r575;
    ternary r523 r44.validator r566.validator into r576;
    ternary r523 r44.block_height r566.block_height into r577;
    ternary r523 r44.bonded_microcredits r566.bonded_microcredits into r578;
    ternary r523 r44.microcredits_yield_per_epoch r566.microcredits_yield_per_epoch into r579;
    ternary r523 r44.commission r566.commission into r580;
    ternary r523 r44.boost r566.boost into r581;
    cast r575 r576 r577 r578 r579 r580 r581 into r582 as validator_datum;
    ternary r522 r44.delegator r574.delegator into r583;
    ternary r522 r44.validator r574.validator into r584;
    ternary r522 r44.block_height r574.block_height into r585;
    ternary r522 r44.bonded_microcredits r574.bonded_microcredits into r586;
    ternary r522 r44.microcredits_yield_per_epoch r574.microcredits_yield_per_epoch into r587;
    ternary r522 r44.commission r574.commission into r588;
    ternary r522 r44.boost r574.boost into r589;
    cast r583 r584 r585 r586 r587 r588 r589 into r590 as validator_datum;
    ternary r522 r520.delegator r582.delegator into r591;
    ternary r522 r520.validator r582.validator into r592;
    ternary r522 r520.block_height r582.block_height into r593;
    ternary r522 r520.bonded_microcredits r582.bonded_microcredits into r594;
    ternary r522 r520.microcredits_yield_per_epoch r582.microcredits_yield_per_epoch into r595;
    ternary r522 r520.commission r582.commission into r596;
    ternary r522 r520.boost r582.boost into r597;
    cast r591 r592 r593 r594 r595 r596 r597 into r598 as validator_datum;
    ternary r521 r520.delegator r590.delegator into r599;
    ternary r521 r520.validator r590.validator into r600;
    ternary r521 r520.block_height r590.block_height into r601;
    ternary r521 r520.bonded_microcredits r590.bonded_microcredits into r602;
    ternary r521 r520.microcredits_yield_per_epoch r590.microcredits_yield_per_epoch into r603;
    ternary r521 r520.commission r590.commission into r604;
    ternary r521 r520.boost r590.boost into r605;
    cast r599 r600 r601 r602 r603 r604 r605 into r606 as validator_datum;
    ternary r521 r44.delegator r598.delegator into r607;
    ternary r521 r44.validator r598.validator into r608;
    ternary r521 r44.block_height r598.block_height into r609;
    ternary r521 r44.bonded_microcredits r598.bonded_microcredits into r610;
    ternary r521 r44.microcredits_yield_per_epoch r598.microcredits_yield_per_epoch into r611;
    ternary r521 r44.commission r598.commission into r612;
    ternary r521 r44.boost r598.boost into r613;
    cast r607 r608 r609 r610 r611 r612 r613 into r614 as validator_datum;
    lt r45.block_height r49 into r615;
    lt r614.block_height r49 into r616;
    is.eq r45.microcredits_yield_per_epoch 0u128 into r617;
    is.eq r614.microcredits_yield_per_epoch 0u128 into r618;
    mul r614.boost 10_000u128 into r619;
    div r619 r50[6u32] into r620;
    add r614.microcredits_yield_per_epoch r620 into r621;
    mul r45.boost 10_000u128 into r622;
    div r622 r50[6u32] into r623;
    add r45.microcredits_yield_per_epoch r623 into r624;
    is.eq r614.validator r45.validator into r625;
    gt r621 r624 into r626;
    lt r621 r624 into r627;
    ternary r625 r626 r627 into r628;
    ternary r628 r45.delegator r614.delegator into r629;
    ternary r628 r45.validator r614.validator into r630;
    ternary r628 r45.block_height r614.block_height into r631;
    ternary r628 r45.bonded_microcredits r614.bonded_microcredits into r632;
    ternary r628 r45.microcredits_yield_per_epoch r614.microcredits_yield_per_epoch into r633;
    ternary r628 r45.commission r614.commission into r634;
    ternary r628 r45.boost r614.boost into r635;
    cast r629 r630 r631 r632 r633 r634 r635 into r636 as validator_datum;
    ternary r628 r614.delegator r45.delegator into r637;
    ternary r628 r614.validator r45.validator into r638;
    ternary r628 r614.block_height r45.block_height into r639;
    ternary r628 r614.bonded_microcredits r45.bonded_microcredits into r640;
    ternary r628 r614.microcredits_yield_per_epoch r45.microcredits_yield_per_epoch into r641;
    ternary r628 r614.commission r45.commission into r642;
    ternary r628 r614.boost r45.boost into r643;
    cast r637 r638 r639 r640 r641 r642 r643 into r644 as validator_datum;
    ternary r618 r45.delegator r636.delegator into r645;
    ternary r618 r45.validator r636.validator into r646;
    ternary r618 r45.block_height r636.block_height into r647;
    ternary r618 r45.bonded_microcredits r636.bonded_microcredits into r648;
    ternary r618 r45.microcredits_yield_per_epoch r636.microcredits_yield_per_epoch into r649;
    ternary r618 r45.commission r636.commission into r650;
    ternary r618 r45.boost r636.boost into r651;
    cast r645 r646 r647 r648 r649 r650 r651 into r652 as validator_datum;
    ternary r618 r614.delegator r644.delegator into r653;
    ternary r618 r614.validator r644.validator into r654;
    ternary r618 r614.block_height r644.block_height into r655;
    ternary r618 r614.bonded_microcredits r644.bonded_microcredits into r656;
    ternary r618 r614.microcredits_yield_per_epoch r644.microcredits_yield_per_epoch into r657;
    ternary r618 r614.commission r644.commission into r658;
    ternary r618 r614.boost r644.boost into r659;
    cast r653 r654 r655 r656 r657 r658 r659 into r660 as validator_datum;
    ternary r617 r614.delegator r652.delegator into r661;
    ternary r617 r614.validator r652.validator into r662;
    ternary r617 r614.block_height r652.block_height into r663;
    ternary r617 r614.bonded_microcredits r652.bonded_microcredits into r664;
    ternary r617 r614.microcredits_yield_per_epoch r652.microcredits_yield_per_epoch into r665;
    ternary r617 r614.commission r652.commission into r666;
    ternary r617 r614.boost r652.boost into r667;
    cast r661 r662 r663 r664 r665 r666 r667 into r668 as validator_datum;
    ternary r617 r45.delegator r660.delegator into r669;
    ternary r617 r45.validator r660.validator into r670;
    ternary r617 r45.block_height r660.block_height into r671;
    ternary r617 r45.bonded_microcredits r660.bonded_microcredits into r672;
    ternary r617 r45.microcredits_yield_per_epoch r660.microcredits_yield_per_epoch into r673;
    ternary r617 r45.commission r660.commission into r674;
    ternary r617 r45.boost r660.boost into r675;
    cast r669 r670 r671 r672 r673 r674 r675 into r676 as validator_datum;
    ternary r616 r45.delegator r668.delegator into r677;
    ternary r616 r45.validator r668.validator into r678;
    ternary r616 r45.block_height r668.block_height into r679;
    ternary r616 r45.bonded_microcredits r668.bonded_microcredits into r680;
    ternary r616 r45.microcredits_yield_per_epoch r668.microcredits_yield_per_epoch into r681;
    ternary r616 r45.commission r668.commission into r682;
    ternary r616 r45.boost r668.boost into r683;
    cast r677 r678 r679 r680 r681 r682 r683 into r684 as validator_datum;
    ternary r616 r614.delegator r676.delegator into r685;
    ternary r616 r614.validator r676.validator into r686;
    ternary r616 r614.block_height r676.block_height into r687;
    ternary r616 r614.bonded_microcredits r676.bonded_microcredits into r688;
    ternary r616 r614.microcredits_yield_per_epoch r676.microcredits_yield_per_epoch into r689;
    ternary r616 r614.commission r676.commission into r690;
    ternary r616 r614.boost r676.boost into r691;
    cast r685 r686 r687 r688 r689 r690 r691 into r692 as validator_datum;
    ternary r615 r614.delegator r684.delegator into r693;
    ternary r615 r614.validator r684.validator into r694;
    ternary r615 r614.block_height r684.block_height into r695;
    ternary r615 r614.bonded_microcredits r684.bonded_microcredits into r696;
    ternary r615 r614.microcredits_yield_per_epoch r684.microcredits_yield_per_epoch into r697;
    ternary r615 r614.commission r684.commission into r698;
    ternary r615 r614.boost r684.boost into r699;
    cast r693 r694 r695 r696 r697 r698 r699 into r700 as validator_datum;
    ternary r615 r45.delegator r692.delegator into r701;
    ternary r615 r45.validator r692.validator into r702;
    ternary r615 r45.block_height r692.block_height into r703;
    ternary r615 r45.bonded_microcredits r692.bonded_microcredits into r704;
    ternary r615 r45.microcredits_yield_per_epoch r692.microcredits_yield_per_epoch into r705;
    ternary r615 r45.commission r692.commission into r706;
    ternary r615 r45.boost r692.boost into r707;
    cast r701 r702 r703 r704 r705 r706 r707 into r708 as validator_datum;
    lt r46.block_height r49 into r709;
    lt r708.block_height r49 into r710;
    is.eq r46.microcredits_yield_per_epoch 0u128 into r711;
    is.eq r708.microcredits_yield_per_epoch 0u128 into r712;
    mul r708.boost 10_000u128 into r713;
    div r713 r50[7u32] into r714;
    add r708.microcredits_yield_per_epoch r714 into r715;
    mul r46.boost 10_000u128 into r716;
    div r716 r50[7u32] into r717;
    add r46.microcredits_yield_per_epoch r717 into r718;
    is.eq r708.validator r46.validator into r719;
    gt r715 r718 into r720;
    lt r715 r718 into r721;
    ternary r719 r720 r721 into r722;
    ternary r722 r46.delegator r708.delegator into r723;
    ternary r722 r46.validator r708.validator into r724;
    ternary r722 r46.block_height r708.block_height into r725;
    ternary r722 r46.bonded_microcredits r708.bonded_microcredits into r726;
    ternary r722 r46.microcredits_yield_per_epoch r708.microcredits_yield_per_epoch into r727;
    ternary r722 r46.commission r708.commission into r728;
    ternary r722 r46.boost r708.boost into r729;
    cast r723 r724 r725 r726 r727 r728 r729 into r730 as validator_datum;
    ternary r722 r708.delegator r46.delegator into r731;
    ternary r722 r708.validator r46.validator into r732;
    ternary r722 r708.block_height r46.block_height into r733;
    ternary r722 r708.bonded_microcredits r46.bonded_microcredits into r734;
    ternary r722 r708.microcredits_yield_per_epoch r46.microcredits_yield_per_epoch into r735;
    ternary r722 r708.commission r46.commission into r736;
    ternary r722 r708.boost r46.boost into r737;
    cast r731 r732 r733 r734 r735 r736 r737 into r738 as validator_datum;
    ternary r712 r46.delegator r730.delegator into r739;
    ternary r712 r46.validator r730.validator into r740;
    ternary r712 r46.block_height r730.block_height into r741;
    ternary r712 r46.bonded_microcredits r730.bonded_microcredits into r742;
    ternary r712 r46.microcredits_yield_per_epoch r730.microcredits_yield_per_epoch into r743;
    ternary r712 r46.commission r730.commission into r744;
    ternary r712 r46.boost r730.boost into r745;
    cast r739 r740 r741 r742 r743 r744 r745 into r746 as validator_datum;
    ternary r712 r708.delegator r738.delegator into r747;
    ternary r712 r708.validator r738.validator into r748;
    ternary r712 r708.block_height r738.block_height into r749;
    ternary r712 r708.bonded_microcredits r738.bonded_microcredits into r750;
    ternary r712 r708.microcredits_yield_per_epoch r738.microcredits_yield_per_epoch into r751;
    ternary r712 r708.commission r738.commission into r752;
    ternary r712 r708.boost r738.boost into r753;
    cast r747 r748 r749 r750 r751 r752 r753 into r754 as validator_datum;
    ternary r711 r708.delegator r746.delegator into r755;
    ternary r711 r708.validator r746.validator into r756;
    ternary r711 r708.block_height r746.block_height into r757;
    ternary r711 r708.bonded_microcredits r746.bonded_microcredits into r758;
    ternary r711 r708.microcredits_yield_per_epoch r746.microcredits_yield_per_epoch into r759;
    ternary r711 r708.commission r746.commission into r760;
    ternary r711 r708.boost r746.boost into r761;
    cast r755 r756 r757 r758 r759 r760 r761 into r762 as validator_datum;
    ternary r711 r46.delegator r754.delegator into r763;
    ternary r711 r46.validator r754.validator into r764;
    ternary r711 r46.block_height r754.block_height into r765;
    ternary r711 r46.bonded_microcredits r754.bonded_microcredits into r766;
    ternary r711 r46.microcredits_yield_per_epoch r754.microcredits_yield_per_epoch into r767;
    ternary r711 r46.commission r754.commission into r768;
    ternary r711 r46.boost r754.boost into r769;
    cast r763 r764 r765 r766 r767 r768 r769 into r770 as validator_datum;
    ternary r710 r46.delegator r762.delegator into r771;
    ternary r710 r46.validator r762.validator into r772;
    ternary r710 r46.block_height r762.block_height into r773;
    ternary r710 r46.bonded_microcredits r762.bonded_microcredits into r774;
    ternary r710 r46.microcredits_yield_per_epoch r762.microcredits_yield_per_epoch into r775;
    ternary r710 r46.commission r762.commission into r776;
    ternary r710 r46.boost r762.boost into r777;
    cast r771 r772 r773 r774 r775 r776 r777 into r778 as validator_datum;
    ternary r710 r708.delegator r770.delegator into r779;
    ternary r710 r708.validator r770.validator into r780;
    ternary r710 r708.block_height r770.block_height into r781;
    ternary r710 r708.bonded_microcredits r770.bonded_microcredits into r782;
    ternary r710 r708.microcredits_yield_per_epoch r770.microcredits_yield_per_epoch into r783;
    ternary r710 r708.commission r770.commission into r784;
    ternary r710 r708.boost r770.boost into r785;
    cast r779 r780 r781 r782 r783 r784 r785 into r786 as validator_datum;
    ternary r709 r708.delegator r778.delegator into r787;
    ternary r709 r708.validator r778.validator into r788;
    ternary r709 r708.block_height r778.block_height into r789;
    ternary r709 r708.bonded_microcredits r778.bonded_microcredits into r790;
    ternary r709 r708.microcredits_yield_per_epoch r778.microcredits_yield_per_epoch into r791;
    ternary r709 r708.commission r778.commission into r792;
    ternary r709 r708.boost r778.boost into r793;
    cast r787 r788 r789 r790 r791 r792 r793 into r794 as validator_datum;
    ternary r709 r46.delegator r786.delegator into r795;
    ternary r709 r46.validator r786.validator into r796;
    ternary r709 r46.block_height r786.block_height into r797;
    ternary r709 r46.bonded_microcredits r786.bonded_microcredits into r798;
    ternary r709 r46.microcredits_yield_per_epoch r786.microcredits_yield_per_epoch into r799;
    ternary r709 r46.commission r786.commission into r800;
    ternary r709 r46.boost r786.boost into r801;
    cast r795 r796 r797 r798 r799 r800 r801 into r802 as validator_datum;
    lt r47.block_height r49 into r803;
    lt r802.block_height r49 into r804;
    is.eq r47.microcredits_yield_per_epoch 0u128 into r805;
    is.eq r802.microcredits_yield_per_epoch 0u128 into r806;
    mul r802.boost 10_000u128 into r807;
    div r807 r50[8u32] into r808;
    add r802.microcredits_yield_per_epoch r808 into r809;
    mul r47.boost 10_000u128 into r810;
    div r810 r50[8u32] into r811;
    add r47.microcredits_yield_per_epoch r811 into r812;
    is.eq r802.validator r47.validator into r813;
    gt r809 r812 into r814;
    lt r809 r812 into r815;
    ternary r813 r814 r815 into r816;
    ternary r816 r47.delegator r802.delegator into r817;
    ternary r816 r47.validator r802.validator into r818;
    ternary r816 r47.block_height r802.block_height into r819;
    ternary r816 r47.bonded_microcredits r802.bonded_microcredits into r820;
    ternary r816 r47.microcredits_yield_per_epoch r802.microcredits_yield_per_epoch into r821;
    ternary r816 r47.commission r802.commission into r822;
    ternary r816 r47.boost r802.boost into r823;
    cast r817 r818 r819 r820 r821 r822 r823 into r824 as validator_datum;
    ternary r816 r802.delegator r47.delegator into r825;
    ternary r816 r802.validator r47.validator into r826;
    ternary r816 r802.block_height r47.block_height into r827;
    ternary r816 r802.bonded_microcredits r47.bonded_microcredits into r828;
    ternary r816 r802.microcredits_yield_per_epoch r47.microcredits_yield_per_epoch into r829;
    ternary r816 r802.commission r47.commission into r830;
    ternary r816 r802.boost r47.boost into r831;
    cast r825 r826 r827 r828 r829 r830 r831 into r832 as validator_datum;
    ternary r806 r47.delegator r824.delegator into r833;
    ternary r806 r47.validator r824.validator into r834;
    ternary r806 r47.block_height r824.block_height into r835;
    ternary r806 r47.bonded_microcredits r824.bonded_microcredits into r836;
    ternary r806 r47.microcredits_yield_per_epoch r824.microcredits_yield_per_epoch into r837;
    ternary r806 r47.commission r824.commission into r838;
    ternary r806 r47.boost r824.boost into r839;
    cast r833 r834 r835 r836 r837 r838 r839 into r840 as validator_datum;
    ternary r806 r802.delegator r832.delegator into r841;
    ternary r806 r802.validator r832.validator into r842;
    ternary r806 r802.block_height r832.block_height into r843;
    ternary r806 r802.bonded_microcredits r832.bonded_microcredits into r844;
    ternary r806 r802.microcredits_yield_per_epoch r832.microcredits_yield_per_epoch into r845;
    ternary r806 r802.commission r832.commission into r846;
    ternary r806 r802.boost r832.boost into r847;
    cast r841 r842 r843 r844 r845 r846 r847 into r848 as validator_datum;
    ternary r805 r802.delegator r840.delegator into r849;
    ternary r805 r802.validator r840.validator into r850;
    ternary r805 r802.block_height r840.block_height into r851;
    ternary r805 r802.bonded_microcredits r840.bonded_microcredits into r852;
    ternary r805 r802.microcredits_yield_per_epoch r840.microcredits_yield_per_epoch into r853;
    ternary r805 r802.commission r840.commission into r854;
    ternary r805 r802.boost r840.boost into r855;
    cast r849 r850 r851 r852 r853 r854 r855 into r856 as validator_datum;
    ternary r805 r47.delegator r848.delegator into r857;
    ternary r805 r47.validator r848.validator into r858;
    ternary r805 r47.block_height r848.block_height into r859;
    ternary r805 r47.bonded_microcredits r848.bonded_microcredits into r860;
    ternary r805 r47.microcredits_yield_per_epoch r848.microcredits_yield_per_epoch into r861;
    ternary r805 r47.commission r848.commission into r862;
    ternary r805 r47.boost r848.boost into r863;
    cast r857 r858 r859 r860 r861 r862 r863 into r864 as validator_datum;
    ternary r804 r47.delegator r856.delegator into r865;
    ternary r804 r47.validator r856.validator into r866;
    ternary r804 r47.block_height r856.block_height into r867;
    ternary r804 r47.bonded_microcredits r856.bonded_microcredits into r868;
    ternary r804 r47.microcredits_yield_per_epoch r856.microcredits_yield_per_epoch into r869;
    ternary r804 r47.commission r856.commission into r870;
    ternary r804 r47.boost r856.boost into r871;
    cast r865 r866 r867 r868 r869 r870 r871 into r872 as validator_datum;
    ternary r804 r802.delegator r864.delegator into r873;
    ternary r804 r802.validator r864.validator into r874;
    ternary r804 r802.block_height r864.block_height into r875;
    ternary r804 r802.bonded_microcredits r864.bonded_microcredits into r876;
    ternary r804 r802.microcredits_yield_per_epoch r864.microcredits_yield_per_epoch into r877;
    ternary r804 r802.commission r864.commission into r878;
    ternary r804 r802.boost r864.boost into r879;
    cast r873 r874 r875 r876 r877 r878 r879 into r880 as validator_datum;
    ternary r803 r802.delegator r872.delegator into r881;
    ternary r803 r802.validator r872.validator into r882;
    ternary r803 r802.block_height r872.block_height into r883;
    ternary r803 r802.bonded_microcredits r872.bonded_microcredits into r884;
    ternary r803 r802.microcredits_yield_per_epoch r872.microcredits_yield_per_epoch into r885;
    ternary r803 r802.commission r872.commission into r886;
    ternary r803 r802.boost r872.boost into r887;
    cast r881 r882 r883 r884 r885 r886 r887 into r888 as validator_datum;
    ternary r803 r47.delegator r880.delegator into r889;
    ternary r803 r47.validator r880.validator into r890;
    ternary r803 r47.block_height r880.block_height into r891;
    ternary r803 r47.bonded_microcredits r880.bonded_microcredits into r892;
    ternary r803 r47.microcredits_yield_per_epoch r880.microcredits_yield_per_epoch into r893;
    ternary r803 r47.commission r880.commission into r894;
    ternary r803 r47.boost r880.boost into r895;
    cast r889 r890 r891 r892 r893 r894 r895 into r896 as validator_datum;
    lt r48.block_height r49 into r897;
    lt r896.block_height r49 into r898;
    is.eq r48.microcredits_yield_per_epoch 0u128 into r899;
    is.eq r896.microcredits_yield_per_epoch 0u128 into r900;
    mul r896.boost 10_000u128 into r901;
    div r901 r50[9u32] into r902;
    add r896.microcredits_yield_per_epoch r902 into r903;
    mul r48.boost 10_000u128 into r904;
    div r904 r50[9u32] into r905;
    add r48.microcredits_yield_per_epoch r905 into r906;
    is.eq r896.validator r48.validator into r907;
    gt r903 r906 into r908;
    lt r903 r906 into r909;
    ternary r907 r908 r909 into r910;
    ternary r910 r48.delegator r896.delegator into r911;
    ternary r910 r48.validator r896.validator into r912;
    ternary r910 r48.block_height r896.block_height into r913;
    ternary r910 r48.bonded_microcredits r896.bonded_microcredits into r914;
    ternary r910 r48.microcredits_yield_per_epoch r896.microcredits_yield_per_epoch into r915;
    ternary r910 r48.commission r896.commission into r916;
    ternary r910 r48.boost r896.boost into r917;
    cast r911 r912 r913 r914 r915 r916 r917 into r918 as validator_datum;
    ternary r910 r896.delegator r48.delegator into r919;
    ternary r910 r896.validator r48.validator into r920;
    ternary r910 r896.block_height r48.block_height into r921;
    ternary r910 r896.bonded_microcredits r48.bonded_microcredits into r922;
    ternary r910 r896.microcredits_yield_per_epoch r48.microcredits_yield_per_epoch into r923;
    ternary r910 r896.commission r48.commission into r924;
    ternary r910 r896.boost r48.boost into r925;
    cast r919 r920 r921 r922 r923 r924 r925 into r926 as validator_datum;
    ternary r900 r48.delegator r918.delegator into r927;
    ternary r900 r48.validator r918.validator into r928;
    ternary r900 r48.block_height r918.block_height into r929;
    ternary r900 r48.bonded_microcredits r918.bonded_microcredits into r930;
    ternary r900 r48.microcredits_yield_per_epoch r918.microcredits_yield_per_epoch into r931;
    ternary r900 r48.commission r918.commission into r932;
    ternary r900 r48.boost r918.boost into r933;
    cast r927 r928 r929 r930 r931 r932 r933 into r934 as validator_datum;
    ternary r900 r896.delegator r926.delegator into r935;
    ternary r900 r896.validator r926.validator into r936;
    ternary r900 r896.block_height r926.block_height into r937;
    ternary r900 r896.bonded_microcredits r926.bonded_microcredits into r938;
    ternary r900 r896.microcredits_yield_per_epoch r926.microcredits_yield_per_epoch into r939;
    ternary r900 r896.commission r926.commission into r940;
    ternary r900 r896.boost r926.boost into r941;
    cast r935 r936 r937 r938 r939 r940 r941 into r942 as validator_datum;
    ternary r899 r896.delegator r934.delegator into r943;
    ternary r899 r896.validator r934.validator into r944;
    ternary r899 r896.block_height r934.block_height into r945;
    ternary r899 r896.bonded_microcredits r934.bonded_microcredits into r946;
    ternary r899 r896.microcredits_yield_per_epoch r934.microcredits_yield_per_epoch into r947;
    ternary r899 r896.commission r934.commission into r948;
    ternary r899 r896.boost r934.boost into r949;
    cast r943 r944 r945 r946 r947 r948 r949 into r950 as validator_datum;
    ternary r899 r48.delegator r942.delegator into r951;
    ternary r899 r48.validator r942.validator into r952;
    ternary r899 r48.block_height r942.block_height into r953;
    ternary r899 r48.bonded_microcredits r942.bonded_microcredits into r954;
    ternary r899 r48.microcredits_yield_per_epoch r942.microcredits_yield_per_epoch into r955;
    ternary r899 r48.commission r942.commission into r956;
    ternary r899 r48.boost r942.boost into r957;
    cast r951 r952 r953 r954 r955 r956 r957 into r958 as validator_datum;
    ternary r898 r48.delegator r950.delegator into r959;
    ternary r898 r48.validator r950.validator into r960;
    ternary r898 r48.block_height r950.block_height into r961;
    ternary r898 r48.bonded_microcredits r950.bonded_microcredits into r962;
    ternary r898 r48.microcredits_yield_per_epoch r950.microcredits_yield_per_epoch into r963;
    ternary r898 r48.commission r950.commission into r964;
    ternary r898 r48.boost r950.boost into r965;
    cast r959 r960 r961 r962 r963 r964 r965 into r966 as validator_datum;
    ternary r898 r896.delegator r958.delegator into r967;
    ternary r898 r896.validator r958.validator into r968;
    ternary r898 r896.block_height r958.block_height into r969;
    ternary r898 r896.bonded_microcredits r958.bonded_microcredits into r970;
    ternary r898 r896.microcredits_yield_per_epoch r958.microcredits_yield_per_epoch into r971;
    ternary r898 r896.commission r958.commission into r972;
    ternary r898 r896.boost r958.boost into r973;
    cast r967 r968 r969 r970 r971 r972 r973 into r974 as validator_datum;
    ternary r897 r896.delegator r966.delegator into r975;
    ternary r897 r896.validator r966.validator into r976;
    ternary r897 r896.block_height r966.block_height into r977;
    ternary r897 r896.bonded_microcredits r966.bonded_microcredits into r978;
    ternary r897 r896.microcredits_yield_per_epoch r966.microcredits_yield_per_epoch into r979;
    ternary r897 r896.commission r966.commission into r980;
    ternary r897 r896.boost r966.boost into r981;
    cast r975 r976 r977 r978 r979 r980 r981 into r982 as validator_datum;
    ternary r897 r48.delegator r974.delegator into r983;
    ternary r897 r48.validator r974.validator into r984;
    ternary r897 r48.block_height r974.block_height into r985;
    ternary r897 r48.bonded_microcredits r974.bonded_microcredits into r986;
    ternary r897 r48.microcredits_yield_per_epoch r974.microcredits_yield_per_epoch into r987;
    ternary r897 r48.commission r974.commission into r988;
    ternary r897 r48.boost r974.boost into r989;
    cast r983 r984 r985 r986 r987 r988 r989 into r990 as validator_datum;
    cast  r136 r230 r324 r418 r512 r606 r700 r794 r888 r982 r990 into r991 as [validator_datum; 11u32];
    is.eq r991[0u32].delegator r36.delegator into r992;
    is.eq r991[0u32].validator r36.validator into r993;
    or r992 r993 into r994;
    cast 0u8 into r995 as i8;
    add 0u8 1u8 into r996;
    ternary r994 r995 11i8 into r997;
    ternary r994 r996 0u8 into r998;
    is.eq r991[1u32].delegator r36.delegator into r999;
    is.eq r991[1u32].validator r36.validator into r1000;
    or r999 r1000 into r1001;
    cast 1u8 into r1002 as i8;
    add r998 1u8 into r1003;
    ternary r1001 r1002 r997 into r1004;
    ternary r1001 r1003 r998 into r1005;
    is.eq r991[2u32].delegator r36.delegator into r1006;
    is.eq r991[2u32].validator r36.validator into r1007;
    or r1006 r1007 into r1008;
    cast 2u8 into r1009 as i8;
    add r1005 1u8 into r1010;
    ternary r1008 r1009 r1004 into r1011;
    ternary r1008 r1010 r1005 into r1012;
    is.eq r991[3u32].delegator r36.delegator into r1013;
    is.eq r991[3u32].validator r36.validator into r1014;
    or r1013 r1014 into r1015;
    cast 3u8 into r1016 as i8;
    add r1012 1u8 into r1017;
    ternary r1015 r1016 r1011 into r1018;
    ternary r1015 r1017 r1012 into r1019;
    is.eq r991[4u32].delegator r36.delegator into r1020;
    is.eq r991[4u32].validator r36.validator into r1021;
    or r1020 r1021 into r1022;
    cast 4u8 into r1023 as i8;
    add r1019 1u8 into r1024;
    ternary r1022 r1023 r1018 into r1025;
    ternary r1022 r1024 r1019 into r1026;
    is.eq r991[5u32].delegator r36.delegator into r1027;
    is.eq r991[5u32].validator r36.validator into r1028;
    or r1027 r1028 into r1029;
    cast 5u8 into r1030 as i8;
    add r1026 1u8 into r1031;
    ternary r1029 r1030 r1025 into r1032;
    ternary r1029 r1031 r1026 into r1033;
    is.eq r991[6u32].delegator r36.delegator into r1034;
    is.eq r991[6u32].validator r36.validator into r1035;
    or r1034 r1035 into r1036;
    cast 6u8 into r1037 as i8;
    add r1033 1u8 into r1038;
    ternary r1036 r1037 r1032 into r1039;
    ternary r1036 r1038 r1033 into r1040;
    is.eq r991[7u32].delegator r36.delegator into r1041;
    is.eq r991[7u32].validator r36.validator into r1042;
    or r1041 r1042 into r1043;
    cast 7u8 into r1044 as i8;
    add r1040 1u8 into r1045;
    ternary r1043 r1044 r1039 into r1046;
    ternary r1043 r1045 r1040 into r1047;
    is.eq r991[8u32].delegator r36.delegator into r1048;
    is.eq r991[8u32].validator r36.validator into r1049;
    or r1048 r1049 into r1050;
    cast 8u8 into r1051 as i8;
    add r1047 1u8 into r1052;
    ternary r1050 r1051 r1046 into r1053;
    ternary r1050 r1052 r1047 into r1054;
    is.eq r991[9u32].delegator r36.delegator into r1055;
    is.eq r991[9u32].validator r36.validator into r1056;
    or r1055 r1056 into r1057;
    cast 9u8 into r1058 as i8;
    add r1054 1u8 into r1059;
    ternary r1057 r1058 r1053 into r1060;
    ternary r1057 r1059 r1054 into r1061;
    gt r1061 1u8 into r1062;
    ternary r1062 r1060 11i8 into r1063;
    lt r1063 2i8 into r1064;
    ternary r1064 r991[2u32].delegator r991[1u32].delegator into r1065;
    lt r1063 3i8 into r1066;
    ternary r1066 r991[3u32].delegator r991[2u32].delegator into r1067;
    lt r1063 4i8 into r1068;
    ternary r1068 r991[4u32].delegator r991[3u32].delegator into r1069;
    lt r1063 5i8 into r1070;
    ternary r1070 r991[5u32].delegator r991[4u32].delegator into r1071;
    lt r1063 6i8 into r1072;
    ternary r1072 r991[6u32].delegator r991[5u32].delegator into r1073;
    lt r1063 7i8 into r1074;
    ternary r1074 r991[7u32].delegator r991[6u32].delegator into r1075;
    lt r1063 8i8 into r1076;
    ternary r1076 r991[8u32].delegator r991[7u32].delegator into r1077;
    lt r1063 9i8 into r1078;
    ternary r1078 r991[9u32].delegator r991[8u32].delegator into r1079;
    lt r1063 10i8 into r1080;
    ternary r1080 r991[10u32].delegator r991[9u32].delegator into r1081;
    cast  r991[0u32].delegator r1065 r1067 r1069 r1071 r1073 r1075 r1077 r1079 r1081 into r1082 as [address; 10u32];
    set r1082 into top_validators[0u8];
    set r36 into validator_data[r0];






function remove_delegator:
    async remove_delegator self.caller into r0;
    output r0 as pondo_oracle.aleo/remove_delegator.future;

finalize remove_delegator:
    input r0 as address.public;
    rem block.height 120_960u32 into r1;
    lt r1 103_680u32 into r2;
    assert.eq r2 true;
    contains delegator_to_validator[r0] into r3;
    branch.eq r3 false to end_then_0_0;
    remove delegator_to_validator[r0];
    branch.eq true true to end_otherwise_0_1;
    position end_then_0_0;
    position end_otherwise_0_1;
    contains validator_data[r0] into r4;
    branch.eq r4 false to end_then_0_2;
    remove validator_data[r0];
    branch.eq true true to end_otherwise_0_3;
    position end_then_0_2;
    position end_otherwise_0_3;
    get top_validators[0u8] into r5;
    is.eq r5[0u32] r0 into r6;
    ternary r6 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[0u32] into r7;
    is.eq r5[1u32] r0 into r8;
    ternary r8 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[1u32] into r9;
    is.eq r5[2u32] r0 into r10;
    ternary r10 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[2u32] into r11;
    is.eq r5[3u32] r0 into r12;
    ternary r12 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[3u32] into r13;
    is.eq r5[4u32] r0 into r14;
    ternary r14 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[4u32] into r15;
    is.eq r5[5u32] r0 into r16;
    ternary r16 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[5u32] into r17;
    is.eq r5[6u32] r0 into r18;
    ternary r18 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[6u32] into r19;
    is.eq r5[7u32] r0 into r20;
    ternary r20 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[7u32] into r21;
    is.eq r5[8u32] r0 into r22;
    ternary r22 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[8u32] into r23;
    is.eq r5[9u32] r0 into r24;
    ternary r24 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[9u32] into r25;
    is.eq r7 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r26;
    ternary r26 r9 r7 into r27;
    ternary r26 r7 r9 into r28;
    is.eq r28 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r29;
    ternary r29 r11 r28 into r30;
    ternary r29 r28 r11 into r31;
    is.eq r31 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r32;
    ternary r32 r13 r31 into r33;
    ternary r32 r31 r13 into r34;
    is.eq r34 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r35;
    ternary r35 r15 r34 into r36;
    ternary r35 r34 r15 into r37;
    is.eq r37 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r38;
    ternary r38 r17 r37 into r39;
    ternary r38 r37 r17 into r40;
    is.eq r40 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r41;
    ternary r41 r19 r40 into r42;
    ternary r41 r40 r19 into r43;
    is.eq r43 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r44;
    ternary r44 r21 r43 into r45;
    ternary r44 r43 r21 into r46;
    is.eq r46 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r47;
    ternary r47 r23 r46 into r48;
    ternary r47 r46 r23 into r49;
    is.eq r49 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r50;
    ternary r50 r25 r49 into r51;
    ternary r50 r49 r25 into r52;
    cast  r27 r30 r33 r36 r39 r42 r45 r48 r51 r52 into r53 as [address; 10u32];
    set r53 into top_validators[0u8];




function pondo_ban_validator:
    input r0 as address.public;
    assert.neq r0 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc;
    async pondo_ban_validator r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/pondo_ban_validator.future;

finalize pondo_ban_validator:
    input r0 as address.public;
    input r1 as address.public;
    contains control_addresses[r1] into r2;
    assert.eq r2 true;
    set true into banned_validators[r0];




function ban_validator:
    input r0 as address.public;
    async ban_validator r0 into r1;
    output r1 as pondo_oracle.aleo/ban_validator.future;

finalize ban_validator:
    input r0 as address.public;
    get delegator_to_validator[r0] into r1;
    rem block.height 120_960u32 into r2;
    gte r2 103_680u32 into r3;
    assert.eq r3 true;
    add 50u8 1u8 into r4;
    cast false r4 into r5 as committee_state;
    get.or_use credits.aleo/committee[r1] r5 into r6;
    not r6.is_open into r7;
    gt r6.commission 50u8 into r8;
    or r7 r8 into r9;
    assert.eq r9 true;
    set true into banned_validators[r1];




function set_pondo_tvl:
    input r0 as u64.public;
    assert.eq self.caller pondo_core_protocol.aleo;
    async set_pondo_tvl r0 into r1;
    output r1 as pondo_oracle.aleo/set_pondo_tvl.future;

finalize set_pondo_tvl:
    input r0 as u64.public;
    set r0 into pondo_tvl[0u8];




function ban_self:
    input r0 as address.private;
    async ban_self r0 self.caller into r1;
    output r1 as pondo_oracle.aleo/ban_self.future;

finalize ban_self:
    input r0 as address.public;
    input r1 as address.public;
    get credits.aleo/withdraw[r0] into r2;
    assert.eq r2 r1;
    contains credits.aleo/committee[r0] into r3;
    assert.eq r3 true;
    set true into banned_validators[r0];




function boost_validator:
    input r0 as address.public;
    input r1 as u64.public;
    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r1 into r2;
    async boost_validator r2 r0 r1 into r3;
    output r3 as pondo_oracle.aleo/boost_validator.future;

finalize boost_validator:
    input r0 as credits.aleo/transfer_public_as_signer.future;
    input r1 as address.public;
    input r2 as u64.public;
    await r0;
    div block.height 120_960u32 into r3;
    rem block.height 120_960u32 into r4;
    gte r4 103_680u32 into r5;
    not r5 into r6;
    assert.eq r6 true;
    cast 0u32 0u64 into r7 as validator_boost;
    get.or_use validator_boosting[r1] r7 into r8;
    is.eq r8.epoch r3 into r9;
    add r8.boost_amount r2 into r10;
    ternary r9 r10 r2 into r11;
    cast r3 r11 into r12 as validator_boost;
    set r12 into validator_boosting[r1];

