===================================================================
--- pondo_staked_aleo_token.aleo	
+++ paleo_token.aleo	
@@ -1,7 +1,7 @@
 import credits.aleo;
-import multi_token_support_program.aleo;
+import token_registry.aleo;
+program paleo_token.aleo;
 
-program pondo_staked_aleo_token.aleo;
 
 struct TokenMetadata:
     token_id as field;
@@ -18,15 +18,19 @@
     account as address;
     token_id as field;
 
+
+
+
 function register_token:
-    assert.eq self.caller pondo_core_protocol.aleo ;
-    call multi_token_support_program.aleo/register_token 1751493913335802797273486270793650302076377624243810059080883537084141842600field 1631421259099656974472467909989204u128 482131854671u128 6u8 10000000000000000u128 false pondo_staked_aleo_token.aleo into r0;
-    call multi_token_support_program.aleo/set_role 1751493913335802797273486270793650302076377624243810059080883537084141842600field pondo_core_protocol.aleo 3u8 into r1;
+    assert.eq self.caller pondo_protocol.aleo;
+    call token_registry.aleo/register_token 1751493913335802797273486270793650302076377624243810059080883537084141842600field 1631421259099656974472467909989204u128 482131854671u128 6u8 10_000_000_000_000_000u128 false paleo_token.aleo into r0;
+    call token_registry.aleo/set_role 1751493913335802797273486270793650302076377624243810059080883537084141842600field pondo_protocol.aleo 3u8 into r1;
     async register_token r0 r1 into r2;
-    output r2 as pondo_staked_aleo_token.aleo/register_token.future;
+    output r2 as paleo_token.aleo/register_token.future;
 
 finalize register_token:
-    input r0 as multi_token_support_program.aleo/register_token.future;
-    input r1 as multi_token_support_program.aleo/set_role.future;
+    input r0 as token_registry.aleo/register_token.future;
+    input r1 as token_registry.aleo/set_role.future;
     await r0;
     await r1;
+
