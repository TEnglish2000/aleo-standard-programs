/*** GENERATED FILE - DO NOT EDIT ***/
/*** This is generated by the copyFiles.js script ***/

export const pondoPrograms = [
  "credits.aleo",
  "multi_token_support_program_v1.aleo",
  "pondo_oracle.aleo",
  "pondo_staked_aleo_token.aleo",
  "pondo_token.aleo",
  "pondo_delegator1.aleo",
  "pondo_delegator2.aleo",
  "pondo_delegator3.aleo",
  "pondo_delegator4.aleo",
  "pondo_delegator5.aleo",
  "pondo_core_protocol.aleo",
  "reference_delegator.aleo"
];

export const pondoDependencyTree: { [key: string]: string[] } = {
  "multi_token_support_program_v1.aleo": [
    "credits.aleo"
  ],
  "pondo_core_protocol.aleo": [
    "credits.aleo",
    "multi_token_support_program_v1.aleo",
    "pondo_oracle.aleo",
    "pondo_staked_aleo_token.aleo",
    "pondo_token.aleo",
    "pondo_delegator1.aleo",
    "pondo_delegator2.aleo",
    "pondo_delegator3.aleo",
    "pondo_delegator4.aleo",
    "pondo_delegator5.aleo"
  ],
  "pondo_oracle.aleo": [
    "credits.aleo"
  ],
  "pondo_staked_aleo_token.aleo": [
    "credits.aleo",
    "multi_token_support_program_v1.aleo"
  ],
  "pondo_token.aleo": [
    "credits.aleo",
    "multi_token_support_program_v1.aleo"
  ],
  "reference_delegator.aleo": [
    "credits.aleo",
    "pondo_oracle.aleo"
  ],
  "pondo_delegator1.aleo": [
    "credits.aleo",
    "pondo_oracle.aleo"
  ],
  "pondo_delegator2.aleo": [
    "credits.aleo",
    "pondo_oracle.aleo"
  ],
  "pondo_delegator3.aleo": [
    "credits.aleo",
    "pondo_oracle.aleo"
  ],
  "pondo_delegator4.aleo": [
    "credits.aleo",
    "pondo_oracle.aleo"
  ],
  "pondo_delegator5.aleo": [
    "credits.aleo",
    "pondo_oracle.aleo"
  ]
};

export const pondoProgramToCode: { [key: string]: string } = {
  "multi_token_support_program_v1.aleo": "import credits.aleo;\nprogram multi_token_support_program_v1.aleo;\n\n\nrecord Token:\n    owner as address.private;\n    amount as u128.private;\n    token_id as field.private;\n    external_authorization_required as boolean.private;\n    authorized_until as u32.private;\n\nstruct TokenMetadata:\n    token_id as field;\n    name as u128;\n    symbol as u128;\n    decimals as u8;\n    supply as u128;\n    max_supply as u128;\n    admin as address;\n    external_authorization_required as boolean;\n    external_authorization_party as address;\n\nstruct TokenOwner:\n    account as address;\n    token_id as field;\n\nstruct Balance:\n    token_id as field;\n    account as address;\n    balance as u128;\n    authorized_until as u32;\n\nstruct Allowance:\n    account as address;\n    spender as address;\n    token_id as field;\n\n\nmapping registered_tokens:\n\tkey as field.public;\n\tvalue as TokenMetadata.public;\n\n\nmapping balances:\n\tkey as field.public;\n\tvalue as Balance.public;\n\n\nmapping authorized_balances:\n\tkey as field.public;\n\tvalue as Balance.public;\n\n\nmapping allowances:\n\tkey as field.public;\n\tvalue as u128.public;\n\n\nfunction transfer_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    async transfer_public r0 r1 r2 self.caller into r3;\n    output r3 as multi_token_support_program_v1.aleo/transfer_public.future;\n\nfinalize transfer_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as address.public;\n    cast r3 r0 into r4 as TokenOwner;\n    hash.bhp256 r4 into r5 as field;\n    get authorized_balances[r5] into r6;\n    sub r6.balance r2 into r7;\n    cast r0 r3 r7 r6.authorized_until into r8 as Balance;\n    set r8 into authorized_balances[r5];\n    cast r1 r0 into r9 as TokenOwner;\n    hash.bhp256 r9 into r10 as field;\n    get registered_tokens[r0] into r11;\n    ternary r11.external_authorization_required 0u32 4294967295u32 into r12;\n    cast r0 r1 0u128 r12 into r13 as Balance;\n    get.or_use balances[r10] r13 into r14;\n    get.or_use authorized_balances[r10] r13 into r15;\n    ternary r11.external_authorization_required r14.token_id r15.token_id into r16;\n    ternary r11.external_authorization_required r14.account r15.account into r17;\n    ternary r11.external_authorization_required r14.balance r15.balance into r18;\n    ternary r11.external_authorization_required r14.authorized_until r15.authorized_until into r19;\n    cast r16 r17 r18 r19 into r20 as Balance;\n    add r20.balance r2 into r21;\n    cast r0 r1 r21 r6.authorized_until into r22 as Balance;\n    branch.eq r11.external_authorization_required false to end_then_0_0;\n    set r22 into balances[r10];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    set r22 into authorized_balances[r10];\n    position end_otherwise_0_1;\n\n\n\n\nfunction transfer_public_as_signer:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    async transfer_public_as_signer r0 r1 r2 self.signer into r3;\n    output r3 as multi_token_support_program_v1.aleo/transfer_public_as_signer.future;\n\nfinalize transfer_public_as_signer:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as address.public;\n    cast r3 r0 into r4 as TokenOwner;\n    hash.bhp256 r4 into r5 as field;\n    get authorized_balances[r5] into r6;\n    sub r6.balance r2 into r7;\n    cast r0 r3 r7 r6.authorized_until into r8 as Balance;\n    set r8 into authorized_balances[r5];\n    cast r1 r0 into r9 as TokenOwner;\n    hash.bhp256 r9 into r10 as field;\n    get registered_tokens[r0] into r11;\n    ternary r11.external_authorization_required 0u32 4294967295u32 into r12;\n    cast r0 r1 0u128 r12 into r13 as Balance;\n    get.or_use balances[r10] r13 into r14;\n    get.or_use authorized_balances[r10] r13 into r15;\n    ternary r11.external_authorization_required r14.token_id r15.token_id into r16;\n    ternary r11.external_authorization_required r14.account r15.account into r17;\n    ternary r11.external_authorization_required r14.balance r15.balance into r18;\n    ternary r11.external_authorization_required r14.authorized_until r15.authorized_until into r19;\n    cast r16 r17 r18 r19 into r20 as Balance;\n    add r20.balance r2 into r21;\n    cast r0 r1 r21 r6.authorized_until into r22 as Balance;\n    branch.eq r11.external_authorization_required false to end_then_0_2;\n    set r22 into balances[r10];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    set r22 into authorized_balances[r10];\n    position end_otherwise_0_3;\n\n\n\n\nfunction transfer_private:\n    input r0 as address.private;\n    input r1 as u128.private;\n    input r2 as Token.record;\n    sub r2.amount r1 into r3;\n    cast r2.owner r3 r2.token_id r2.external_authorization_required r2.authorized_until into r4 as Token.record;\n    ternary r2.external_authorization_required 0u32 4294967295u32 into r5;\n    cast r0 r1 r2.token_id r2.external_authorization_required r5 into r6 as Token.record;\n    async transfer_private r2.external_authorization_required r2.authorized_until into r7;\n    output r4 as Token.record;\n    output r6 as Token.record;\n    output r7 as multi_token_support_program_v1.aleo/transfer_private.future;\n\nfinalize transfer_private:\n    input r0 as boolean.public;\n    input r1 as u32.public;\n    lte block.height r1 into r2;\n    not r0 into r3;\n    or r2 r3 into r4;\n    assert.eq r4 true;\n\n\n\n\nfunction transfer_private_to_public:\n    input r0 as address.public;\n    input r1 as u128.public;\n    input r2 as Token.record;\n    sub r2.amount r1 into r3;\n    cast r2.owner r3 r2.token_id r2.external_authorization_required r2.authorized_until into r4 as Token.record;\n    async transfer_private_to_public r2.token_id r0 r1 into r5;\n    output r4 as Token.record;\n    output r5 as multi_token_support_program_v1.aleo/transfer_private_to_public.future;\n\nfinalize transfer_private_to_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    cast r1 r0 into r3 as TokenOwner;\n    hash.bhp256 r3 into r4 as field;\n    get registered_tokens[r0] into r5;\n    ternary r5.external_authorization_required 0u32 4294967295u32 into r6;\n    cast r0 r1 0u128 r6 into r7 as Balance;\n    get.or_use balances[r4] r7 into r8;\n    get.or_use authorized_balances[r4] r7 into r9;\n    ternary r5.external_authorization_required r8.token_id r9.token_id into r10;\n    ternary r5.external_authorization_required r8.account r9.account into r11;\n    ternary r5.external_authorization_required r8.balance r9.balance into r12;\n    ternary r5.external_authorization_required r8.authorized_until r9.authorized_until into r13;\n    cast r10 r11 r12 r13 into r14 as Balance;\n    add r14.balance r2 into r15;\n    cast r0 r1 r15 r14.authorized_until into r16 as Balance;\n    branch.eq r5.external_authorization_required false to end_then_0_4;\n    set r16 into balances[r4];\n    branch.eq true true to end_otherwise_0_5;\n    position end_then_0_4;\n    set r16 into authorized_balances[r4];\n    position end_otherwise_0_5;\n\n\n\n\nfunction transfer_public_to_private:\n    input r0 as field.public;\n    input r1 as address.private;\n    input r2 as u128.public;\n    input r3 as boolean.public;\n    ternary r3 0u32 4294967295u32 into r4;\n    cast r1 r2 r0 r3 r4 into r5 as Token.record;\n    async transfer_public_to_private r0 r2 self.caller r3 into r6;\n    output r5 as Token.record;\n    output r6 as multi_token_support_program_v1.aleo/transfer_public_to_private.future;\n\nfinalize transfer_public_to_private:\n    input r0 as field.public;\n    input r1 as u128.public;\n    input r2 as address.public;\n    input r3 as boolean.public;\n    get registered_tokens[r0] into r4;\n    assert.eq r4.external_authorization_required r3;\n    cast r2 r0 into r5 as TokenOwner;\n    hash.bhp256 r5 into r6 as field;\n    get authorized_balances[r6] into r7;\n    sub r7.balance r1 into r8;\n    cast r0 r2 r8 r7.authorized_until into r9 as Balance;\n    set r9 into authorized_balances[r6];\n\n\n\n\nfunction initialize:\n    async initialize into r0;\n    output r0 as multi_token_support_program_v1.aleo/initialize.future;\n\nfinalize initialize:\n    cast 3443843282313283355522573239085696902919850365217539366784739393210722344986field 1095517519u128 1095517519u128 6u8 1_500_000_000_000_000u128 1_500_000_000_000_000u128 multi_token_support_program_v1.aleo false multi_token_support_program_v1.aleo into r0 as TokenMetadata;\n    set r0 into registered_tokens[3443843282313283355522573239085696902919850365217539366784739393210722344986field];\n\n\n\n\nfunction register_token:\n    input r0 as field.public;\n    input r1 as u128.public;\n    input r2 as u128.public;\n    input r3 as u8.public;\n    input r4 as u128.public;\n    input r5 as boolean.public;\n    input r6 as address.public;\n    is.neq r0 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r7;\n    assert.eq r7 true;\n    cast r0 r1 r2 r3 0u128 r4 self.caller r5 r6 into r8 as TokenMetadata;\n    async register_token r8 into r9;\n    output r9 as multi_token_support_program_v1.aleo/register_token.future;\n\nfinalize register_token:\n    input r0 as TokenMetadata.public;\n    contains registered_tokens[r0.token_id] into r1;\n    assert.eq r1 false;\n    set r0 into registered_tokens[r0.token_id];\n\n\n\n\nfunction update_token_management:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as address.public;\n    is.neq r0 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r3;\n    assert.eq r3 true;\n    async update_token_management r0 r1 r2 self.caller into r4;\n    output r4 as multi_token_support_program_v1.aleo/update_token_management.future;\n\nfinalize update_token_management:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as address.public;\n    input r3 as address.public;\n    get registered_tokens[r0] into r4;\n    assert.eq r3 r4.admin;\n    cast r0 r4.name r4.symbol r4.decimals r4.supply r4.max_supply r1 r4.external_authorization_required r2 into r5 as TokenMetadata;\n\n\n\n\nfunction mint_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as u32.public;\n    is.neq r0 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r4;\n    assert.eq r4 true;\n    async mint_public r0 r1 r2 r3 self.caller into r5;\n    output r5 as multi_token_support_program_v1.aleo/mint_public.future;\n\nfinalize mint_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as u32.public;\n    input r4 as address.public;\n    get registered_tokens[r0] into r5;\n    assert.eq r5.admin r4;\n    add r5.supply r2 into r6;\n    lte r6 r5.max_supply into r7;\n    assert.eq r7 true;\n    cast r1 r0 into r8 as TokenOwner;\n    hash.bhp256 r8 into r9 as field;\n    cast r0 r1 0u128 r3 into r10 as Balance;\n    get.or_use balances[r9] r10 into r11;\n    get.or_use authorized_balances[r9] r10 into r12;\n    ternary r5.external_authorization_required r11.token_id r12.token_id into r13;\n    ternary r5.external_authorization_required r11.account r12.account into r14;\n    ternary r5.external_authorization_required r11.balance r12.balance into r15;\n    ternary r5.external_authorization_required r11.authorized_until r12.authorized_until into r16;\n    cast r13 r14 r15 r16 into r17 as Balance;\n    add r17.balance r2 into r18;\n    cast r0 r1 r18 r17.authorized_until into r19 as Balance;\n    branch.eq r5.external_authorization_required false to end_then_0_6;\n    set r19 into balances[r9];\n    branch.eq true true to end_otherwise_0_7;\n    position end_then_0_6;\n    set r19 into authorized_balances[r9];\n    position end_otherwise_0_7;\n    cast r0 r5.name r5.symbol r5.decimals r6 r5.max_supply r5.admin r5.external_authorization_required r5.external_authorization_party into r20 as TokenMetadata;\n    set r20 into registered_tokens[r0];\n\n\n\n\nfunction mint_private:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as boolean.public;\n    input r4 as u32.public;\n    is.neq r0 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r5;\n    assert.eq r5 true;\n    cast r1 r2 r0 r3 r4 into r6 as Token.record;\n    async mint_private r0 r1 r2 r3 r4 self.caller into r7;\n    output r6 as Token.record;\n    output r7 as multi_token_support_program_v1.aleo/mint_private.future;\n\nfinalize mint_private:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as boolean.public;\n    input r4 as u32.public;\n    input r5 as address.public;\n    get registered_tokens[r0] into r6;\n    assert.eq r6.admin r5;\n    add r6.supply r2 into r7;\n    lte r7 r6.max_supply into r8;\n    assert.eq r8 true;\n    assert.eq r6.external_authorization_required r3;\n    cast r0 r6.name r6.symbol r6.decimals r7 r6.max_supply r6.admin r6.external_authorization_required r6.external_authorization_party into r9 as TokenMetadata;\n    set r9 into registered_tokens[r0];\n\n\n\n\nfunction burn_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    is.neq r0 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r3;\n    assert.eq r3 true;\n    cast r1 r0 into r4 as TokenOwner;\n    async burn_public r4 r2 self.caller into r5;\n    output r5 as multi_token_support_program_v1.aleo/burn_public.future;\n\nfinalize burn_public:\n    input r0 as TokenOwner.public;\n    input r1 as u128.public;\n    input r2 as address.public;\n    get registered_tokens[r0.token_id] into r3;\n    assert.eq r3.admin r2;\n    sub r3.supply r1 into r4;\n    cast r0.token_id r0.account 0u128 0u32 into r5 as Balance;\n    hash.bhp256 r0 into r6 as field;\n    get.or_use balances[r6] r5 into r7;\n    cast r7.balance into r8 as i128;\n    cast r1 into r9 as i128;\n    sub r8 r9 into r10;\n    gte r10 0i128 into r11;\n    cast r10 into r12 as u128;\n    ternary r11 r12 0u128 into r13;\n    cast r0.token_id r0.account r13 r7.authorized_until into r14 as Balance;\n    set r14 into balances[r6];\n    lt r10 0i128 into r15;\n    branch.eq r15 false to end_then_0_8;\n    sub r1 r7.balance into r16;\n    get authorized_balances[r6] into r17;\n    sub r17.balance r16 into r18;\n    cast r0.token_id r0.account r18 r17.authorized_until into r19 as Balance;\n    set r19 into authorized_balances[r6];\n    branch.eq true true to end_otherwise_0_9;\n    position end_then_0_8;\n    position end_otherwise_0_9;\n    cast r0.token_id r3.name r3.symbol r3.decimals r4 r3.max_supply r3.admin r3.external_authorization_required r3.external_authorization_party into r20 as TokenMetadata;\n    set r20 into registered_tokens[r0.token_id];\n\n\n\n\nfunction burn_private:\n    input r0 as Token.record;\n    input r1 as u128.public;\n    is.neq r0.token_id 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r2;\n    assert.eq r2 true;\n    sub r0.amount r1 into r3;\n    cast r0.owner r3 r0.token_id r0.external_authorization_required r0.authorized_until into r4 as Token.record;\n    async burn_private r0.token_id r1 self.caller into r5;\n    output r4 as Token.record;\n    output r5 as multi_token_support_program_v1.aleo/burn_private.future;\n\nfinalize burn_private:\n    input r0 as field.public;\n    input r1 as u128.public;\n    input r2 as address.public;\n    get registered_tokens[r0] into r3;\n    assert.eq r3.admin r2;\n    sub r3.supply r1 into r4;\n    cast r0 r3.name r3.symbol r3.decimals r4 r3.max_supply r3.admin r3.external_authorization_required r3.external_authorization_party into r5 as TokenMetadata;\n    set r5 into registered_tokens[r0];\n\n\n\n\nfunction prehook_public:\n    input r0 as TokenOwner.public;\n    input r1 as u128.public;\n    input r2 as u32.public;\n    async prehook_public r0 r1 r2 self.caller into r3;\n    output r3 as multi_token_support_program_v1.aleo/prehook_public.future;\n\nfinalize prehook_public:\n    input r0 as TokenOwner.public;\n    input r1 as u128.public;\n    input r2 as u32.public;\n    input r3 as address.public;\n    get registered_tokens[r0.token_id] into r4;\n    is.eq r3 r4.external_authorization_party into r5;\n    assert.eq r5 true;\n    hash.bhp256 r0 into r6 as field;\n    get balances[r6] into r7;\n    sub r7.balance r1 into r8;\n    cast r0.token_id r0.account r8 r7.authorized_until into r9 as Balance;\n    set r9 into balances[r6];\n    cast r0.token_id r0.account 0u128 r2 into r10 as Balance;\n    get.or_use authorized_balances[r6] r10 into r11;\n    add r11.balance r1 into r12;\n    cast r0.token_id r0.account r12 r2 into r13 as Balance;\n    set r13 into authorized_balances[r6];\n\n\n\n\nfunction prehook_private:\n    input r0 as Token.record;\n    input r1 as u128.private;\n    input r2 as u32.private;\n    sub r0.amount r1 into r3;\n    cast r0.owner r3 r0.token_id r0.external_authorization_required r0.authorized_until into r4 as Token.record;\n    cast r0.owner r1 r0.token_id r0.external_authorization_required r2 into r5 as Token.record;\n    async prehook_private r0.token_id self.caller into r6;\n    output r4 as Token.record;\n    output r5 as Token.record;\n    output r6 as multi_token_support_program_v1.aleo/prehook_private.future;\n\nfinalize prehook_private:\n    input r0 as field.public;\n    input r1 as address.public;\n    get registered_tokens[r0] into r2;\n    is.eq r1 r2.external_authorization_party into r3;\n    assert.eq r3 true;\n\n\n\n\nfunction approve_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    async approve_public r0 r1 r2 self.caller into r3;\n    output r3 as multi_token_support_program_v1.aleo/approve_public.future;\n\nfinalize approve_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as address.public;\n    cast r3 r0 into r4 as TokenOwner;\n    hash.bhp256 r3 into r5 as field;\n    contains balances[r5] into r6;\n    contains authorized_balances[r5] into r7;\n    or r6 r7 into r8;\n    assert.eq r8 true;\n    cast r3 r1 r0 into r9 as Allowance;\n    hash.bhp256 r9 into r10 as field;\n    get.or_use allowances[r10] 0u128 into r11;\n    add r11 r2 into r12;\n    set r12 into allowances[r10];\n\n\n\n\nfunction unapprove_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    async unapprove_public r0 r1 r2 self.caller into r3;\n    output r3 as multi_token_support_program_v1.aleo/unapprove_public.future;\n\nfinalize unapprove_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as address.public;\n    cast r3 r1 r0 into r4 as Allowance;\n    hash.bhp256 r4 into r5 as field;\n    get allowances[r5] into r6;\n    gte r6 r2 into r7;\n    assert.eq r7 true;\n    sub r6 r2 into r8;\n    set r8 into allowances[r5];\n\n\n\n\nfunction transfer_from_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as address.public;\n    input r3 as u128.public;\n    async transfer_from_public r0 r1 r2 r3 self.caller into r4;\n    output r4 as multi_token_support_program_v1.aleo/transfer_from_public.future;\n\nfinalize transfer_from_public:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as address.public;\n    input r3 as u128.public;\n    input r4 as address.public;\n    cast r1 r4 r0 into r5 as Allowance;\n    hash.bhp256 r5 into r6 as field;\n    get allowances[r6] into r7;\n    gte r7 r3 into r8;\n    assert.eq r8 true;\n    sub r7 r3 into r9;\n    set r9 into allowances[r6];\n    cast r1 r0 into r10 as TokenOwner;\n    hash.bhp256 r1 into r11 as field;\n    get authorized_balances[r11] into r12;\n    assert.eq r1 r12.account;\n    gte r12.balance r3 into r13;\n    assert.eq r13 true;\n    sub r12.balance r3 into r14;\n    cast r0 r1 r14 r12.authorized_until into r15 as Balance;\n    set r15 into authorized_balances[r11];\n    cast r2 r0 into r16 as TokenOwner;\n    hash.bhp256 r16 into r17 as field;\n    get registered_tokens[r0] into r18;\n    ternary r18.external_authorization_required 0u32 4294967295u32 into r19;\n    cast r0 r2 0u128 r19 into r20 as Balance;\n    get.or_use balances[r17] r20 into r21;\n    get.or_use authorized_balances[r17] r20 into r22;\n    ternary r18.external_authorization_required r21.token_id r22.token_id into r23;\n    ternary r18.external_authorization_required r21.account r22.account into r24;\n    ternary r18.external_authorization_required r21.balance r22.balance into r25;\n    ternary r18.external_authorization_required r21.authorized_until r22.authorized_until into r26;\n    cast r23 r24 r25 r26 into r27 as Balance;\n    add r27.balance r3 into r28;\n    cast r0 r2 r28 r12.authorized_until into r29 as Balance;\n    branch.eq r18.external_authorization_required false to end_then_0_10;\n    set r29 into balances[r17];\n    branch.eq true true to end_otherwise_0_11;\n    position end_then_0_10;\n    set r29 into authorized_balances[r17];\n    position end_otherwise_0_11;\n\n\n\n\nfunction transfer_from_public_to_private:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as address.private;\n    input r3 as u128.public;\n    input r4 as boolean.public;\n    ternary r4 0u32 4294967295u32 into r5;\n    cast r2 r3 r0 r4 r5 into r6 as Token.record;\n    async transfer_from_public_to_private r0 r1 r3 self.caller r4 into r7;\n    output r6 as Token.record;\n    output r7 as multi_token_support_program_v1.aleo/transfer_from_public_to_private.future;\n\nfinalize transfer_from_public_to_private:\n    input r0 as field.public;\n    input r1 as address.public;\n    input r2 as u128.public;\n    input r3 as address.public;\n    input r4 as boolean.public;\n    get registered_tokens[r0] into r5;\n    assert.eq r5.external_authorization_required r4;\n    cast r1 r3 r0 into r6 as Allowance;\n    hash.bhp256 r6 into r7 as field;\n    get allowances[r7] into r8;\n    gte r8 r2 into r9;\n    assert.eq r9 true;\n    sub r8 r2 into r10;\n    set r10 into allowances[r7];\n    cast r1 r0 into r11 as TokenOwner;\n    hash.bhp256 r1 into r12 as field;\n    get authorized_balances[r12] into r13;\n    assert.eq r1 r13.account;\n    gte r13.balance r2 into r14;\n    assert.eq r14 true;\n    sub r13.balance r2 into r15;\n    cast r0 r1 r15 r13.authorized_until into r16 as Balance;\n    set r16 into authorized_balances[r12];\n\n\n\n\nfunction deposit_credits_public:\n    input r0 as u64.public;\n    call credits.aleo/transfer_public_as_signer multi_token_support_program_v1.aleo r0 into r1;\n    cast r0 into r2 as u128;\n    async deposit_credits_public r1 r2 self.caller into r3;\n    output r3 as multi_token_support_program_v1.aleo/deposit_credits_public.future;\n\nfinalize deposit_credits_public:\n    input r0 as credits.aleo/transfer_public_as_signer.future;\n    input r1 as u128.public;\n    input r2 as address.public;\n    await r0;\n    cast r2 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r3 as TokenOwner;\n    hash.bhp256 r3 into r4 as field;\n    cast 3443843282313283355522573239085696902919850365217539366784739393210722344986field r2 0u128 4294967295u32 into r5 as Balance;\n    get.or_use authorized_balances[r4] r5 into r6;\n    add r6.balance r1 into r7;\n    cast 3443843282313283355522573239085696902919850365217539366784739393210722344986field r2 r7 r6.authorized_until into r8 as Balance;\n    set r8 into authorized_balances[r4];\n\n\n\n\nfunction deposit_credits_private:\n    input r0 as credits.aleo/credits.record;\n    input r1 as u64.private;\n    call credits.aleo/transfer_private_to_public r0 multi_token_support_program_v1.aleo r1 into r2 r3;\n    cast r1 into r4 as u128;\n    cast r0.owner r4 3443843282313283355522573239085696902919850365217539366784739393210722344986field false 4294967295u32 into r5 as Token.record;\n    async deposit_credits_private r3 into r6;\n    output r2 as credits.aleo/credits.record;\n    output r5 as Token.record;\n    output r6 as multi_token_support_program_v1.aleo/deposit_credits_private.future;\n\nfinalize deposit_credits_private:\n    input r0 as credits.aleo/transfer_private_to_public.future;\n    await r0;\n\n\n\n\nfunction withdraw_credits_public:\n    input r0 as u64.private;\n    call credits.aleo/transfer_public self.caller r0 into r1;\n    cast r0 into r2 as u128;\n    async withdraw_credits_public r1 r2 self.caller into r3;\n    output r3 as multi_token_support_program_v1.aleo/withdraw_credits_public.future;\n\nfinalize withdraw_credits_public:\n    input r0 as credits.aleo/transfer_public.future;\n    input r1 as u128.public;\n    input r2 as address.public;\n    await r0;\n    cast r2 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r3 as TokenOwner;\n    hash.bhp256 r3 into r4 as field;\n    get authorized_balances[r4] into r5;\n    sub r5.balance r1 into r6;\n    cast 3443843282313283355522573239085696902919850365217539366784739393210722344986field r2 r6 r5.authorized_until into r7 as Balance;\n    set r7 into authorized_balances[r4];\n\n\n\n\nfunction withdraw_credits_private:\n    input r0 as Token.record;\n    input r1 as u64.private;\n    is.eq r0.token_id 3443843282313283355522573239085696902919850365217539366784739393210722344986field into r2;\n    assert.eq r2 true;\n    call credits.aleo/transfer_public_to_private r0.owner r1 into r3 r4;\n    cast r1 into r5 as u128;\n    sub r0.amount r5 into r6;\n    cast r0.owner r6 r0.token_id r0.external_authorization_required r0.authorized_until into r7 as Token.record;\n    async withdraw_credits_private r4 into r8;\n    output r7 as Token.record;\n    output r3 as credits.aleo/credits.record;\n    output r8 as multi_token_support_program_v1.aleo/withdraw_credits_private.future;\n\nfinalize withdraw_credits_private:\n    input r0 as credits.aleo/transfer_public_to_private.future;\n    await r0;\n\n",
  "pondo_core_protocol.aleo": "import credits.aleo;\nimport multi_token_support_program_v1.aleo;\nimport pondo_oracle.aleo;\nimport pondo_staked_aleo_token.aleo;\nimport pondo_token.aleo;\nimport pondo_delegator1.aleo;\nimport pondo_delegator2.aleo;\nimport pondo_delegator3.aleo;\nimport pondo_delegator4.aleo;\nimport pondo_delegator5.aleo;\nprogram pondo_core_protocol.aleo;\n\nstruct bond_state:\n    validator as address;\n    microcredits as u64;\n\nstruct unbond_state:\n    microcredits as u64;\n    height as u32;\n\n\nstruct TokenMetadata:\n    token_id as field;\n    name as u128;\n    symbol as u128;\n    decimals as u8;\n    supply as u128;\n    max_supply as u128;\n    admin as address;\n    external_authorization_required as boolean;\n    external_authorization_party as address;\n\nstruct TokenOwner:\n    account as address;\n    token_id as field;\n\n\nstruct validator_datum:\n    delegator as address;\n    validator as address;\n    block_height as u32;\n    bonded_microcredits as u64;\n    microcredits_yield_per_epoch as u128;\n    commission as u8;\n    boost as u128;\n\nstruct validator_state:\n    validator as address;\n    commission as u8;\n\nstruct withdrawal_state:\n    microcredits as u64;\n    claim_block as u32;\n\n\nmapping validator_set:\n\tkey as u8.public;\n\tvalue as [validator_state; 5u32].public;\n\n\nmapping protocol_state:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nmapping balances:\n\tkey as u8.public;\n\tvalue as u64.public;\n\n\nmapping owed_commission:\n\tkey as u8.public;\n\tvalue as u64.public;\n\n\nmapping last_rebalance_epoch:\n\tkey as u8.public;\n\tvalue as u32.public;\n\n\nmapping withdrawals:\n\tkey as address.public;\n\tvalue as withdrawal_state.public;\n\n\nmapping withdrawal_batches:\n\tkey as u32.public;\n\tvalue as u64.public;\n\n\nfunction initialize:\n    input r0 as u64.private;\n    gte r0 100u64 into r1;\n    assert.eq r1 true;\n    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r0 into r2;\n    call pondo_staked_aleo_token.aleo/register_token into r3;\n    call pondo_staked_aleo_token.aleo/mint_public r0 self.signer into r4;\n    call pondo_token.aleo/initialize_token into r5;\n    call pondo_delegator1.aleo/initialize into r6;\n    call pondo_delegator2.aleo/initialize into r7;\n    call pondo_delegator3.aleo/initialize into r8;\n    call pondo_delegator4.aleo/initialize into r9;\n    call pondo_delegator5.aleo/initialize into r10;\n    async initialize r2 r3 r4 r5 r6 r7 r8 r9 r10 into r11;\n    output r11 as pondo_core_protocol.aleo/initialize.future;\n\nfinalize initialize:\n    input r0 as credits.aleo/transfer_public_as_signer.future;\n    input r1 as pondo_staked_aleo_token.aleo/register_token.future;\n    input r2 as pondo_staked_aleo_token.aleo/mint_public.future;\n    input r3 as pondo_token.aleo/initialize_token.future;\n    input r4 as pondo_delegator1.aleo/initialize.future;\n    input r5 as pondo_delegator2.aleo/initialize.future;\n    input r6 as pondo_delegator3.aleo/initialize.future;\n    input r7 as pondo_delegator4.aleo/initialize.future;\n    input r8 as pondo_delegator5.aleo/initialize.future;\n    await r0;\n    await r1;\n    await r2;\n    await r3;\n    await r4;\n    await r5;\n    await r6;\n    await r7;\n    await r8;\n    set 0u64 into balances[0u8];\n    set 0u64 into balances[1u8];\n    set 0u64 into balances[2u8];\n    set 0u64 into owed_commission[0u8];\n    set 0u8 into protocol_state[0u8];\n    cast  aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r9 as [address; 10u32];\n    get.or_use pondo_oracle.aleo/top_validators[0u8] r9 into r10;\n    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r11 as validator_datum;\n    get.or_use pondo_oracle.aleo/validator_data[r10[0u32]] r11 into r12;\n    get.or_use pondo_oracle.aleo/validator_data[r10[1u32]] r11 into r13;\n    get.or_use pondo_oracle.aleo/validator_data[r10[2u32]] r11 into r14;\n    get.or_use pondo_oracle.aleo/validator_data[r10[3u32]] r11 into r15;\n    get.or_use pondo_oracle.aleo/validator_data[r10[4u32]] r11 into r16;\n    cast r10[0u32] r12.commission into r17 as validator_state;\n    cast r10[1u32] r13.commission into r18 as validator_state;\n    cast r10[2u32] r14.commission into r19 as validator_state;\n    cast r10[3u32] r15.commission into r20 as validator_state;\n    cast r10[4u32] r16.commission into r21 as validator_state;\n    cast  r17 r18 r19 r20 r21 into r22 as [validator_state; 5u32];\n    set r22 into validator_set[1u8];\n\n\n\n\n\n\n\n\nfunction deposit_public_as_signer:\n    input r0 as u64.public;\n    input r1 as u64.public;\n    input r2 as address.public;\n    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r0 into r3;\n    call pondo_staked_aleo_token.aleo/mint_public r1 self.signer into r4;\n    async deposit_public_as_signer r3 r4 r0 r1 into r5;\n    output r5 as pondo_core_protocol.aleo/deposit_public_as_signer.future;\n\nfinalize deposit_public_as_signer:\n    input r0 as credits.aleo/transfer_public_as_signer.future;\n    input r1 as pondo_staked_aleo_token.aleo/mint_public.future;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    await r0;\n    await r1;\n    cast pondo_core_protocol.aleo 0u64 into r4 as bond_state;\n    get.or_use credits.aleo/bonded[pondo_delegator1.aleo] r4 into r5;\n    get.or_use credits.aleo/bonded[pondo_delegator2.aleo] r4 into r6;\n    get.or_use credits.aleo/bonded[pondo_delegator3.aleo] r4 into r7;\n    get.or_use credits.aleo/bonded[pondo_delegator4.aleo] r4 into r8;\n    get.or_use credits.aleo/bonded[pondo_delegator5.aleo] r4 into r9;\n    cast 0u64 0u32 into r10 as unbond_state;\n    get.or_use credits.aleo/unbonding[pondo_delegator1.aleo] r10 into r11;\n    get.or_use credits.aleo/unbonding[pondo_delegator2.aleo] r10 into r12;\n    get.or_use credits.aleo/unbonding[pondo_delegator3.aleo] r10 into r13;\n    get.or_use credits.aleo/unbonding[pondo_delegator4.aleo] r10 into r14;\n    get.or_use credits.aleo/unbonding[pondo_delegator5.aleo] r10 into r15;\n    get.or_use credits.aleo/account[pondo_delegator1.aleo] 0u64 into r16;\n    get.or_use credits.aleo/account[pondo_delegator2.aleo] 0u64 into r17;\n    get.or_use credits.aleo/account[pondo_delegator3.aleo] 0u64 into r18;\n    get.or_use credits.aleo/account[pondo_delegator4.aleo] 0u64 into r19;\n    get.or_use credits.aleo/account[pondo_delegator5.aleo] 0u64 into r20;\n    add r5.microcredits r6.microcredits into r21;\n    add r21 r7.microcredits into r22;\n    add r22 r8.microcredits into r23;\n    add r23 r9.microcredits into r24;\n    add r16 r17 into r25;\n    add r25 r18 into r26;\n    add r26 r19 into r27;\n    add r27 r20 into r28;\n    add r11.microcredits r12.microcredits into r29;\n    add r29 r13.microcredits into r30;\n    add r30 r14.microcredits into r31;\n    add r31 r15.microcredits into r32;\n    get balances[1u8] into r33;\n    cast r24 into r34 as i64;\n    cast r28 into r35 as i64;\n    add r34 r35 into r36;\n    cast r32 into r37 as i64;\n    add r36 r37 into r38;\n    cast r33 into r39 as i64;\n    sub r38 r39 into r40;\n    get balances[0u8] into r41;\n    get owed_commission[0u8] into r42;\n    get multi_token_support_program_v1.aleo/registered_tokens[1751493913335802797273486270793650302076377624243810059080883537084141842600field] into r43;\n    cast r42 into r44 as u128;\n    add r43.supply r44 into r45;\n    cast r3 into r46 as u128;\n    sub r45 r46 into r47;\n    cast r41 into r48 as i64;\n    gt r40 r48 into r49;\n    cast r41 into r50 as i64;\n    sub r40 r50 into r51;\n    ternary r49 r51 0i64 into r52;\n    cast r52 into r53 as u128;\n    mul r53 1000u128 into r54;\n    div r54 10_000u128 into r55;\n    cast r55 into r56 as u64;\n    cast r52 into r57 as u64;\n    sub r57 r56 into r58;\n    add r41 r58 into r59;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r60;\n    get balances[2u8] into r61;\n    get protocol_state[0u8] into r62;\n    is.eq r62 0u8 into r63;\n    sub r60 r2 into r64;\n    sub r64 r61 into r65;\n    sub r60 r59 into r66;\n    sub r66 r2 into r67;\n    sub r67 r61 into r68;\n    ternary r63 r65 r68 into r69;\n    cast r59 into r70 as u128;\n    cast r69 into r71 as u128;\n    cast r56 into r72 as u128;\n    add r70 r71 into r73;\n    add r73 r72 into r74;\n    mul r47 r74 into r75;\n    div r75 r73 into r76;\n    sub r76 r47 into r77;\n    cast r77 into r78 as u64;\n    add r42 r78 into r79;\n    set r79 into owed_commission[0u8];\n    cast r78 into r80 as u128;\n    add r47 r80 into r81;\n    add r59 r56 into r82;\n    set r82 into balances[0u8];\n    cast r82 into r83 as u128;\n    cast r69 into r84 as u128;\n    cast r2 into r85 as u128;\n    add r83 r84 into r86;\n    add r86 r85 into r87;\n    mul r81 r87 into r88;\n    div r88 r86 into r89;\n    sub r89 r81 into r90;\n    cast r90 into r91 as u64;\n    gte r91 1u64 into r92;\n    assert.eq r92 true;\n    gte r91 r3 into r93;\n    assert.eq r93 true;\n\n\n\n\nfunction deposit_public:\n    input r0 as u64.public;\n    input r1 as u64.public;\n    input r2 as address.public;\n    cast r0 into r3 as u128;\n    call multi_token_support_program_v1.aleo/transfer_from_public 3443843282313283355522573239085696902919850365217539366784739393210722344986field self.caller pondo_core_protocol.aleo r3 into r4;\n    call pondo_staked_aleo_token.aleo/mint_public r1 self.caller into r5;\n    async deposit_public r4 r5 r0 r1 into r6;\n    output r6 as pondo_core_protocol.aleo/deposit_public.future;\n\nfinalize deposit_public:\n    input r0 as multi_token_support_program_v1.aleo/transfer_from_public.future;\n    input r1 as pondo_staked_aleo_token.aleo/mint_public.future;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    await r0;\n    await r1;\n    cast pondo_core_protocol.aleo 0u64 into r4 as bond_state;\n    get.or_use credits.aleo/bonded[pondo_delegator1.aleo] r4 into r5;\n    get.or_use credits.aleo/bonded[pondo_delegator2.aleo] r4 into r6;\n    get.or_use credits.aleo/bonded[pondo_delegator3.aleo] r4 into r7;\n    get.or_use credits.aleo/bonded[pondo_delegator4.aleo] r4 into r8;\n    get.or_use credits.aleo/bonded[pondo_delegator5.aleo] r4 into r9;\n    cast 0u64 0u32 into r10 as unbond_state;\n    get.or_use credits.aleo/unbonding[pondo_delegator1.aleo] r10 into r11;\n    get.or_use credits.aleo/unbonding[pondo_delegator2.aleo] r10 into r12;\n    get.or_use credits.aleo/unbonding[pondo_delegator3.aleo] r10 into r13;\n    get.or_use credits.aleo/unbonding[pondo_delegator4.aleo] r10 into r14;\n    get.or_use credits.aleo/unbonding[pondo_delegator5.aleo] r10 into r15;\n    get.or_use credits.aleo/account[pondo_delegator1.aleo] 0u64 into r16;\n    get.or_use credits.aleo/account[pondo_delegator2.aleo] 0u64 into r17;\n    get.or_use credits.aleo/account[pondo_delegator3.aleo] 0u64 into r18;\n    get.or_use credits.aleo/account[pondo_delegator4.aleo] 0u64 into r19;\n    get.or_use credits.aleo/account[pondo_delegator5.aleo] 0u64 into r20;\n    add r5.microcredits r6.microcredits into r21;\n    add r21 r7.microcredits into r22;\n    add r22 r8.microcredits into r23;\n    add r23 r9.microcredits into r24;\n    add r16 r17 into r25;\n    add r25 r18 into r26;\n    add r26 r19 into r27;\n    add r27 r20 into r28;\n    add r11.microcredits r12.microcredits into r29;\n    add r29 r13.microcredits into r30;\n    add r30 r14.microcredits into r31;\n    add r31 r15.microcredits into r32;\n    get balances[1u8] into r33;\n    cast r24 into r34 as i64;\n    cast r28 into r35 as i64;\n    add r34 r35 into r36;\n    cast r32 into r37 as i64;\n    add r36 r37 into r38;\n    cast r33 into r39 as i64;\n    sub r38 r39 into r40;\n    get balances[0u8] into r41;\n    get owed_commission[0u8] into r42;\n    get multi_token_support_program_v1.aleo/registered_tokens[1751493913335802797273486270793650302076377624243810059080883537084141842600field] into r43;\n    cast r42 into r44 as u128;\n    add r43.supply r44 into r45;\n    cast r3 into r46 as u128;\n    sub r45 r46 into r47;\n    cast r41 into r48 as i64;\n    gt r40 r48 into r49;\n    cast r41 into r50 as i64;\n    sub r40 r50 into r51;\n    ternary r49 r51 0i64 into r52;\n    cast r52 into r53 as u128;\n    mul r53 1000u128 into r54;\n    div r54 10_000u128 into r55;\n    cast r55 into r56 as u64;\n    cast r52 into r57 as u64;\n    sub r57 r56 into r58;\n    add r41 r58 into r59;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r60;\n    get balances[2u8] into r61;\n    get protocol_state[0u8] into r62;\n    is.eq r62 0u8 into r63;\n    sub r60 r2 into r64;\n    sub r64 r61 into r65;\n    sub r60 r59 into r66;\n    sub r66 r2 into r67;\n    sub r67 r61 into r68;\n    ternary r63 r65 r68 into r69;\n    cast r59 into r70 as u128;\n    cast r69 into r71 as u128;\n    cast r56 into r72 as u128;\n    add r70 r71 into r73;\n    add r73 r72 into r74;\n    mul r47 r74 into r75;\n    div r75 r73 into r76;\n    sub r76 r47 into r77;\n    cast r77 into r78 as u64;\n    add r42 r78 into r79;\n    set r79 into owed_commission[0u8];\n    cast r78 into r80 as u128;\n    add r47 r80 into r81;\n    add r59 r56 into r82;\n    set r82 into balances[0u8];\n    cast r82 into r83 as u128;\n    cast r69 into r84 as u128;\n    cast r2 into r85 as u128;\n    add r83 r84 into r86;\n    add r86 r85 into r87;\n    mul r81 r87 into r88;\n    div r88 r86 into r89;\n    sub r89 r81 into r90;\n    cast r90 into r91 as u64;\n    gte r91 1u64 into r92;\n    assert.eq r92 true;\n    gte r91 r3 into r93;\n    assert.eq r93 true;\n\n\n\n\n\n\nfunction distribute_deposits:\n    input r0 as [address; 5u32].public;\n    input r1 as [u64; 5u32].public;\n    call credits.aleo/transfer_public pondo_delegator1.aleo r1[0u32] into r2;\n    call credits.aleo/transfer_public pondo_delegator2.aleo r1[1u32] into r3;\n    call credits.aleo/transfer_public pondo_delegator3.aleo r1[2u32] into r4;\n    call credits.aleo/transfer_public pondo_delegator4.aleo r1[3u32] into r5;\n    call credits.aleo/transfer_public pondo_delegator5.aleo r1[4u32] into r6;\n    async distribute_deposits r2 r3 r4 r5 r6 r0 r1 into r7;\n    output r7 as pondo_core_protocol.aleo/distribute_deposits.future;\n\nfinalize distribute_deposits:\n    input r0 as credits.aleo/transfer_public.future;\n    input r1 as credits.aleo/transfer_public.future;\n    input r2 as credits.aleo/transfer_public.future;\n    input r3 as credits.aleo/transfer_public.future;\n    input r4 as credits.aleo/transfer_public.future;\n    input r5 as [address; 5u32].public;\n    input r6 as [u64; 5u32].public;\n    await r0;\n    await r1;\n    await r2;\n    await r3;\n    await r4;\n    get balances[0u8] into r7;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r8;\n    get balances[2u8] into r9;\n    sub r8 r9 into r10;\n    cast r7 into r11 as u128;\n    mul r11 250u128 into r12;\n    div r12 10_000u128 into r13;\n    cast 250_000_000_000u64 into r14 as u128;\n    gt r13 r14 into r15;\n    cast r13 into r16 as u64;\n    ternary r15 250_000_000_000u64 r16 into r17;\n    gte r10 r17 into r18;\n    assert.eq r18 true;\n    get pondo_delegator1.aleo/state_mapping[0u8] into r19;\n    get pondo_delegator2.aleo/state_mapping[0u8] into r20;\n    get pondo_delegator3.aleo/state_mapping[0u8] into r21;\n    get pondo_delegator4.aleo/state_mapping[0u8] into r22;\n    get pondo_delegator5.aleo/state_mapping[0u8] into r23;\n    is.eq r19 0u8 into r24;\n    is.eq r19 1u8 into r25;\n    or r24 r25 into r26;\n    assert.eq r26 true;\n    is.eq r20 0u8 into r27;\n    is.eq r20 1u8 into r28;\n    or r27 r28 into r29;\n    assert.eq r29 true;\n    is.eq r21 0u8 into r30;\n    is.eq r21 1u8 into r31;\n    or r30 r31 into r32;\n    assert.eq r32 true;\n    is.eq r22 0u8 into r33;\n    is.eq r22 1u8 into r34;\n    or r33 r34 into r35;\n    assert.eq r35 true;\n    is.eq r23 0u8 into r36;\n    is.eq r23 1u8 into r37;\n    or r36 r37 into r38;\n    assert.eq r38 true;\n\n\n\n\n\n\nfunction instant_withdraw_public:\n    input r0 as u64.public;\n    input r1 as u64.public;\n    call pondo_staked_aleo_token.aleo/burn_public r0 self.caller into r2;\n    call credits.aleo/transfer_public self.caller r1 into r3;\n    async instant_withdraw_public r2 r3 r0 r1 self.caller into r4;\n    output r4 as pondo_core_protocol.aleo/instant_withdraw_public.future;\n\nfinalize instant_withdraw_public:\n    input r0 as pondo_staked_aleo_token.aleo/burn_public.future;\n    input r1 as credits.aleo/transfer_public.future;\n    input r2 as u64.public;\n    input r3 as u64.public;\n    input r4 as address.public;\n    await r0;\n    await r1;\n    get protocol_state[0u8] into r5;\n    is.eq r5 0u8 into r6;\n    assert.eq r6 true;\n    contains withdrawals[r4] into r7;\n    not r7 into r8;\n    assert.eq r8 true;\n    cast pondo_core_protocol.aleo 0u64 into r9 as bond_state;\n    get.or_use credits.aleo/bonded[pondo_delegator1.aleo] r9 into r10;\n    get.or_use credits.aleo/bonded[pondo_delegator2.aleo] r9 into r11;\n    get.or_use credits.aleo/bonded[pondo_delegator3.aleo] r9 into r12;\n    get.or_use credits.aleo/bonded[pondo_delegator4.aleo] r9 into r13;\n    get.or_use credits.aleo/bonded[pondo_delegator5.aleo] r9 into r14;\n    cast 0u64 0u32 into r15 as unbond_state;\n    get.or_use credits.aleo/unbonding[pondo_delegator1.aleo] r15 into r16;\n    get.or_use credits.aleo/unbonding[pondo_delegator2.aleo] r15 into r17;\n    get.or_use credits.aleo/unbonding[pondo_delegator3.aleo] r15 into r18;\n    get.or_use credits.aleo/unbonding[pondo_delegator4.aleo] r15 into r19;\n    get.or_use credits.aleo/unbonding[pondo_delegator5.aleo] r15 into r20;\n    get.or_use credits.aleo/account[pondo_delegator1.aleo] 0u64 into r21;\n    get.or_use credits.aleo/account[pondo_delegator2.aleo] 0u64 into r22;\n    get.or_use credits.aleo/account[pondo_delegator3.aleo] 0u64 into r23;\n    get.or_use credits.aleo/account[pondo_delegator4.aleo] 0u64 into r24;\n    get.or_use credits.aleo/account[pondo_delegator5.aleo] 0u64 into r25;\n    add r10.microcredits r11.microcredits into r26;\n    add r26 r12.microcredits into r27;\n    add r27 r13.microcredits into r28;\n    add r28 r14.microcredits into r29;\n    add r21 r22 into r30;\n    add r30 r23 into r31;\n    add r31 r24 into r32;\n    add r32 r25 into r33;\n    add r16.microcredits r17.microcredits into r34;\n    add r34 r18.microcredits into r35;\n    add r35 r19.microcredits into r36;\n    add r36 r20.microcredits into r37;\n    get balances[1u8] into r38;\n    cast r29 into r39 as i64;\n    cast r33 into r40 as i64;\n    add r39 r40 into r41;\n    cast r37 into r42 as i64;\n    add r41 r42 into r43;\n    cast r38 into r44 as i64;\n    sub r43 r44 into r45;\n    get balances[0u8] into r46;\n    get owed_commission[0u8] into r47;\n    get multi_token_support_program_v1.aleo/registered_tokens[1751493913335802797273486270793650302076377624243810059080883537084141842600field] into r48;\n    cast r47 into r49 as u128;\n    add r48.supply r49 into r50;\n    cast r2 into r51 as u128;\n    add r50 r51 into r52;\n    cast r46 into r53 as i64;\n    gt r45 r53 into r54;\n    cast r46 into r55 as i64;\n    sub r45 r55 into r56;\n    ternary r54 r56 0i64 into r57;\n    cast r57 into r58 as u128;\n    mul r58 1000u128 into r59;\n    div r59 10_000u128 into r60;\n    cast r60 into r61 as u64;\n    cast r57 into r62 as u64;\n    sub r62 r61 into r63;\n    add r46 r63 into r64;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r65;\n    get balances[2u8] into r66;\n    sub r65 r66 into r67;\n    add r67 r3 into r68;\n    cast r64 into r69 as u128;\n    cast r68 into r70 as u128;\n    cast r61 into r71 as u128;\n    add r69 r70 into r72;\n    add r72 r71 into r73;\n    mul r52 r73 into r74;\n    div r74 r72 into r75;\n    sub r75 r52 into r76;\n    cast r76 into r77 as u64;\n    add r47 r77 into r78;\n    cast r77 into r79 as u128;\n    add r52 r79 into r80;\n    add r64 r61 into r81;\n    cast r81 into r82 as u128;\n    cast r68 into r83 as u128;\n    add r82 r83 into r84;\n    cast r2 into r85 as u128;\n    mul r85 025u128 into r86;\n    div r86 10_000u128 into r87;\n    cast r87 into r88 as u64;\n    sub r2 r88 into r89;\n    cast r89 into r90 as u128;\n    cast r84 into r91 as u128;\n    mul r90 r91 into r92;\n    cast r80 into r93 as u128;\n    div r92 r93 into r94;\n    cast r94 into r95 as u64;\n    lte r3 r95 into r96;\n    assert.eq r96 true;\n    add r78 r88 into r97;\n    set r97 into owed_commission[0u8];\n\n\n\n\n\n\nfunction withdraw_public:\n    input r0 as u64.public;\n    call pondo_staked_aleo_token.aleo/burn_public r0 self.caller into r1;\n    async withdraw_public r1 r0 self.caller into r2;\n    output r2 as pondo_core_protocol.aleo/withdraw_public.future;\n\nfinalize withdraw_public:\n    input r0 as pondo_staked_aleo_token.aleo/burn_public.future;\n    input r1 as u64.public;\n    input r2 as address.public;\n    await r0;\n    contains withdrawals[r2] into r3;\n    not r3 into r4;\n    assert.eq r4 true;\n    cast pondo_core_protocol.aleo 0u64 into r5 as bond_state;\n    get.or_use credits.aleo/bonded[pondo_delegator1.aleo] r5 into r6;\n    get.or_use credits.aleo/bonded[pondo_delegator2.aleo] r5 into r7;\n    get.or_use credits.aleo/bonded[pondo_delegator3.aleo] r5 into r8;\n    get.or_use credits.aleo/bonded[pondo_delegator4.aleo] r5 into r9;\n    get.or_use credits.aleo/bonded[pondo_delegator5.aleo] r5 into r10;\n    cast 0u64 0u32 into r11 as unbond_state;\n    get.or_use credits.aleo/unbonding[pondo_delegator1.aleo] r11 into r12;\n    get.or_use credits.aleo/unbonding[pondo_delegator2.aleo] r11 into r13;\n    get.or_use credits.aleo/unbonding[pondo_delegator3.aleo] r11 into r14;\n    get.or_use credits.aleo/unbonding[pondo_delegator4.aleo] r11 into r15;\n    get.or_use credits.aleo/unbonding[pondo_delegator5.aleo] r11 into r16;\n    get.or_use credits.aleo/account[pondo_delegator1.aleo] 0u64 into r17;\n    get.or_use credits.aleo/account[pondo_delegator2.aleo] 0u64 into r18;\n    get.or_use credits.aleo/account[pondo_delegator3.aleo] 0u64 into r19;\n    get.or_use credits.aleo/account[pondo_delegator4.aleo] 0u64 into r20;\n    get.or_use credits.aleo/account[pondo_delegator5.aleo] 0u64 into r21;\n    add r6.microcredits r7.microcredits into r22;\n    add r22 r8.microcredits into r23;\n    add r23 r9.microcredits into r24;\n    add r24 r10.microcredits into r25;\n    add r17 r18 into r26;\n    add r26 r19 into r27;\n    add r27 r20 into r28;\n    add r28 r21 into r29;\n    add r12.microcredits r13.microcredits into r30;\n    add r30 r14.microcredits into r31;\n    add r31 r15.microcredits into r32;\n    add r32 r16.microcredits into r33;\n    get balances[1u8] into r34;\n    cast r25 into r35 as i64;\n    cast r29 into r36 as i64;\n    add r35 r36 into r37;\n    cast r33 into r38 as i64;\n    add r37 r38 into r39;\n    cast r34 into r40 as i64;\n    sub r39 r40 into r41;\n    get balances[0u8] into r42;\n    get owed_commission[0u8] into r43;\n    get multi_token_support_program_v1.aleo/registered_tokens[1751493913335802797273486270793650302076377624243810059080883537084141842600field] into r44;\n    cast r43 into r45 as u128;\n    add r44.supply r45 into r46;\n    cast r1 into r47 as u128;\n    add r46 r47 into r48;\n    cast r42 into r49 as i64;\n    gt r41 r49 into r50;\n    cast r42 into r51 as i64;\n    sub r41 r51 into r52;\n    ternary r50 r52 0i64 into r53;\n    cast r53 into r54 as u128;\n    mul r54 1000u128 into r55;\n    div r55 10_000u128 into r56;\n    cast r56 into r57 as u64;\n    cast r53 into r58 as u64;\n    sub r58 r57 into r59;\n    add r42 r59 into r60;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r61;\n    get balances[2u8] into r62;\n    get protocol_state[0u8] into r63;\n    is.eq r63 0u8 into r64;\n    sub r61 r62 into r65;\n    sub r61 r60 into r66;\n    sub r66 r62 into r67;\n    ternary r64 r65 r67 into r68;\n    cast r60 into r69 as u128;\n    cast r68 into r70 as u128;\n    cast r57 into r71 as u128;\n    add r69 r70 into r72;\n    add r72 r71 into r73;\n    mul r48 r73 into r74;\n    div r74 r72 into r75;\n    sub r75 r48 into r76;\n    cast r76 into r77 as u64;\n    add r43 r77 into r78;\n    set r78 into owed_commission[0u8];\n    cast r77 into r79 as u128;\n    add r48 r79 into r80;\n    add r60 r57 into r81;\n    cast r81 into r82 as u128;\n    cast r68 into r83 as u128;\n    add r82 r83 into r84;\n    cast r1 into r85 as u128;\n    cast r84 into r86 as u128;\n    mul r85 r86 into r87;\n    cast r80 into r88 as u128;\n    div r87 r88 into r89;\n    cast r89 into r90 as u64;\n    add r34 r90 into r91;\n    set r91 into balances[1u8];\n    sub r81 r90 into r92;\n    set r92 into balances[0u8];\n    add block.height 43_200u32 into r93;\n    div r93 120_960u32 into r94;\n    add r94 1u32 into r95;\n    mul r95 120_960u32 into r96;\n    add r96 17_280u32 into r97;\n    add r97 1u32 into r98;\n    cast r90 r98 into r99 as withdrawal_state;\n    set r99 into withdrawals[r2];\n    get.or_use withdrawal_batches[r94] 0u64 into r100;\n    add r100 r90 into r101;\n    set r101 into withdrawal_batches[r94];\n\n\n\n\nfunction claim_withdrawal_public:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/transfer_public r0 r1 into r2;\n    async claim_withdrawal_public r2 r0 r1 into r3;\n    output r3 as pondo_core_protocol.aleo/claim_withdrawal_public.future;\n\nfinalize claim_withdrawal_public:\n    input r0 as credits.aleo/transfer_public.future;\n    input r1 as address.public;\n    input r2 as u64.public;\n    await r0;\n    get withdrawals[r1] into r3;\n    lt r3.claim_block block.height into r4;\n    assert.eq r4 true;\n    is.eq r3.microcredits r2 into r5;\n    branch.eq r5 false to end_then_0_0;\n    remove withdrawals[r1];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    sub r3.microcredits r2 into r6;\n    cast r6 r3.claim_block into r7 as withdrawal_state;\n    set r7 into withdrawals[r1];\n    position end_otherwise_0_1;\n    get balances[2u8] into r8;\n    sub r8 r2 into r9;\n    set r9 into balances[2u8];\n\n\n\n\nfunction prep_rebalance:\n    call pondo_delegator1.aleo/set_state into r0;\n    call pondo_delegator2.aleo/set_state into r1;\n    call pondo_delegator3.aleo/set_state into r2;\n    call pondo_delegator4.aleo/set_state into r3;\n    call pondo_delegator5.aleo/set_state into r4;\n    async prep_rebalance r0 r1 r2 r3 r4 into r5;\n    output r5 as pondo_core_protocol.aleo/prep_rebalance.future;\n\nfinalize prep_rebalance:\n    input r0 as pondo_delegator1.aleo/set_state.future;\n    input r1 as pondo_delegator2.aleo/set_state.future;\n    input r2 as pondo_delegator3.aleo/set_state.future;\n    input r3 as pondo_delegator4.aleo/set_state.future;\n    input r4 as pondo_delegator5.aleo/set_state.future;\n    await r0;\n    await r1;\n    await r2;\n    await r3;\n    await r4;\n    div block.height 120_960u32 into r5;\n    get.or_use last_rebalance_epoch[0u8] 4294967295u32 into r6;\n    gt r5 r6 into r7;\n    assert.eq r7 true;\n    rem block.height 120_960u32 into r8;\n    lt r8 17_280u32 into r9;\n    is.eq r6 4294967295u32 into r10;\n    or r9 r10 into r11;\n    assert.eq r11 true;\n    cast  aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r12 as [address; 10u32];\n    get.or_use pondo_oracle.aleo/top_validators[0u8] r12 into r13;\n    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r14 as validator_datum;\n    get.or_use pondo_oracle.aleo/validator_data[r13[0u32]] r14 into r15;\n    get.or_use pondo_oracle.aleo/validator_data[r13[1u32]] r14 into r16;\n    get.or_use pondo_oracle.aleo/validator_data[r13[2u32]] r14 into r17;\n    get.or_use pondo_oracle.aleo/validator_data[r13[3u32]] r14 into r18;\n    get.or_use pondo_oracle.aleo/validator_data[r13[4u32]] r14 into r19;\n    cast r13[0u32] r15.commission into r20 as validator_state;\n    cast r13[1u32] r16.commission into r21 as validator_state;\n    cast r13[2u32] r17.commission into r22 as validator_state;\n    cast r13[3u32] r18.commission into r23 as validator_state;\n    cast r13[4u32] r19.commission into r24 as validator_state;\n    cast  r20 r21 r22 r23 r24 into r25 as [validator_state; 5u32];\n    set r25 into validator_set[1u8];\n\n\n\n\nfunction rebalance_retrieve_credits:\n    input r0 as [u64; 5u32].public;\n    input r1 as u64.public;\n    call pondo_delegator1.aleo/transfer_to_core_protocol r0[0u32] into r2;\n    call pondo_delegator2.aleo/transfer_to_core_protocol r0[1u32] into r3;\n    call pondo_delegator3.aleo/transfer_to_core_protocol r0[2u32] into r4;\n    call pondo_delegator4.aleo/transfer_to_core_protocol r0[3u32] into r5;\n    call pondo_delegator5.aleo/transfer_to_core_protocol r0[4u32] into r6;\n    call pondo_staked_aleo_token.aleo/mint_public r1 pondo_token.aleo into r7;\n    async rebalance_retrieve_credits r2 r3 r4 r5 r6 r7 r0 r1 into r8;\n    output r8 as pondo_core_protocol.aleo/rebalance_retrieve_credits.future;\n\nfinalize rebalance_retrieve_credits:\n    input r0 as pondo_delegator1.aleo/transfer_to_core_protocol.future;\n    input r1 as pondo_delegator2.aleo/transfer_to_core_protocol.future;\n    input r2 as pondo_delegator3.aleo/transfer_to_core_protocol.future;\n    input r3 as pondo_delegator4.aleo/transfer_to_core_protocol.future;\n    input r4 as pondo_delegator5.aleo/transfer_to_core_protocol.future;\n    input r5 as pondo_staked_aleo_token.aleo/mint_public.future;\n    input r6 as [u64; 5u32].public;\n    input r7 as u64.public;\n    await r0;\n    await r1;\n    await r2;\n    await r3;\n    await r4;\n    await r5;\n    add r6[0u32] r6[1u32] into r8;\n    add r8 r6[2u32] into r9;\n    add r9 r6[3u32] into r10;\n    add r10 r6[4u32] into r11;\n    get balances[0u8] into r12;\n    get owed_commission[0u8] into r13;\n    get multi_token_support_program_v1.aleo/registered_tokens[1751493913335802797273486270793650302076377624243810059080883537084141842600field] into r14;\n    cast r13 into r15 as u128;\n    add r14.supply r15 into r16;\n    cast r7 into r17 as u128;\n    sub r16 r17 into r18;\n    gt r11 r12 into r19;\n    cast r11 into r20 as i64;\n    cast r12 into r21 as i64;\n    sub r20 r21 into r22;\n    ternary r19 r22 0i64 into r23;\n    cast r23 into r24 as u128;\n    mul r24 1000u128 into r25;\n    div r25 10_000u128 into r26;\n    cast r26 into r27 as u64;\n    cast r23 into r28 as u64;\n    sub r28 r27 into r29;\n    add r12 r29 into r30;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r31;\n    get balances[2u8] into r32;\n    sub r31 r11 into r33;\n    sub r33 r32 into r34;\n    cast r30 into r35 as u128;\n    cast r34 into r36 as u128;\n    cast r27 into r37 as u128;\n    add r35 r36 into r38;\n    add r38 r37 into r39;\n    mul r18 r39 into r40;\n    div r40 r38 into r41;\n    sub r41 r18 into r42;\n    cast r42 into r43 as u64;\n    add r13 r43 into r44;\n    sub r44 r7 into r45;\n    set r45 into owed_commission[0u8];\n    add r30 r27 into r46;\n    set r46 into balances[0u8];\n    div block.height 120_960u32 into r47;\n    sub r47 1u32 into r48;\n    get.or_use withdrawal_batches[r48] 0u64 into r49;\n    add r32 r49 into r50;\n    set r50 into balances[2u8];\n    get balances[1u8] into r51;\n    sub r51 r49 into r52;\n    set r52 into balances[1u8];\n    set 1u8 into protocol_state[0u8];\n\n\n\n\nfunction rebalance_redistribute:\n    input r0 as [validator_state; 5u32].public;\n    input r1 as [u64; 5u32].public;\n    call credits.aleo/transfer_public pondo_delegator1.aleo r1[0u32] into r2;\n    call credits.aleo/transfer_public pondo_delegator2.aleo r1[1u32] into r3;\n    call credits.aleo/transfer_public pondo_delegator3.aleo r1[2u32] into r4;\n    call credits.aleo/transfer_public pondo_delegator4.aleo r1[3u32] into r5;\n    call credits.aleo/transfer_public pondo_delegator5.aleo r1[4u32] into r6;\n    call pondo_delegator1.aleo/set_validator r0[0u32].validator r0[0u32].commission into r7;\n    call pondo_delegator2.aleo/set_validator r0[1u32].validator r0[1u32].commission into r8;\n    call pondo_delegator3.aleo/set_validator r0[2u32].validator r0[2u32].commission into r9;\n    call pondo_delegator4.aleo/set_validator r0[3u32].validator r0[3u32].commission into r10;\n    call pondo_delegator5.aleo/set_validator r0[4u32].validator r0[4u32].commission into r11;\n    async rebalance_redistribute r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r0 r1 into r12;\n    output r12 as pondo_core_protocol.aleo/rebalance_redistribute.future;\n\nfinalize rebalance_redistribute:\n    input r0 as credits.aleo/transfer_public.future;\n    input r1 as credits.aleo/transfer_public.future;\n    input r2 as credits.aleo/transfer_public.future;\n    input r3 as credits.aleo/transfer_public.future;\n    input r4 as credits.aleo/transfer_public.future;\n    input r5 as pondo_delegator1.aleo/set_validator.future;\n    input r6 as pondo_delegator2.aleo/set_validator.future;\n    input r7 as pondo_delegator3.aleo/set_validator.future;\n    input r8 as pondo_delegator4.aleo/set_validator.future;\n    input r9 as pondo_delegator5.aleo/set_validator.future;\n    input r10 as [validator_state; 5u32].public;\n    input r11 as [u64; 5u32].public;\n    await r0;\n    await r1;\n    await r2;\n    await r3;\n    await r4;\n    await r5;\n    await r6;\n    await r7;\n    await r8;\n    await r9;\n    get validator_set[1u8] into r12;\n    set r12 into validator_set[0u8];\n    remove validator_set[1u8];\n    is.eq r10[0u32] r12[0u32] into r13;\n    assert.eq r13 true;\n    is.eq r10[1u32] r12[1u32] into r14;\n    assert.eq r14 true;\n    is.eq r10[2u32] r12[2u32] into r15;\n    assert.eq r15 true;\n    is.eq r10[3u32] r12[3u32] into r16;\n    assert.eq r16 true;\n    is.eq r10[4u32] r12[4u32] into r17;\n    assert.eq r17 true;\n    cast  3700u128 2600u128 1600u128 1200u128 900u128 900u128 900u128 900u128 900u128 900u128 into r18 as [u128; 10u32];\n    get.or_use pondo_oracle.aleo/delegator_allocation[0u8] r18 into r19;\n    add r11[0u32] r11[1u32] into r20;\n    add r20 r11[2u32] into r21;\n    add r21 r11[3u32] into r22;\n    add r22 r11[4u32] into r23;\n    cast r23 into r24 as u128;\n    cast r11[0u32] into r25 as u128;\n    mul r25 10_000u128 into r26;\n    div r26 r24 into r27;\n    cast r11[1u32] into r28 as u128;\n    mul r28 10_000u128 into r29;\n    div r29 r24 into r30;\n    cast r11[2u32] into r31 as u128;\n    mul r31 10_000u128 into r32;\n    div r32 r24 into r33;\n    cast r11[3u32] into r34 as u128;\n    mul r34 10_000u128 into r35;\n    div r35 r24 into r36;\n    cast r11[4u32] into r37 as u128;\n    mul r37 10_000u128 into r38;\n    div r38 r24 into r39;\n    is.eq r27 r19[0u32] into r40;\n    assert.eq r40 true;\n    is.eq r30 r19[1u32] into r41;\n    assert.eq r41 true;\n    is.eq r33 r19[2u32] into r42;\n    assert.eq r42 true;\n    is.eq r36 r19[3u32] into r43;\n    assert.eq r43 true;\n    is.eq r39 r19[4u32] into r44;\n    assert.eq r44 true;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r45;\n    get balances[2u8] into r46;\n    sub r45 r46 into r47;\n    mul r24 250u128 into r48;\n    div r48 10_000u128 into r49;\n    cast 250_000_000_000u64 into r50 as u128;\n    gt r49 r50 into r51;\n    cast r49 into r52 as u64;\n    ternary r51 250_000_000_000u64 r52 into r53;\n    gte r47 r53 into r54;\n    assert.eq r54 true;\n    div block.height 120_960u32 into r55;\n    set r55 into last_rebalance_epoch[0u8];\n    set 0u8 into protocol_state[0u8];\n\n\n\n\nfunction set_oracle_tvl:\n    input r0 as u64.public;\n    call pondo_oracle.aleo/set_pondo_tvl r0 into r1;\n    async set_oracle_tvl r1 r0 into r2;\n    output r2 as pondo_core_protocol.aleo/set_oracle_tvl.future;\n\nfinalize set_oracle_tvl:\n    input r0 as pondo_oracle.aleo/set_pondo_tvl.future;\n    input r1 as u64.public;\n    await r0;\n    get.or_use credits.aleo/account[pondo_delegator1.aleo] 0u64 into r2;\n    get.or_use credits.aleo/account[pondo_delegator2.aleo] 0u64 into r3;\n    get.or_use credits.aleo/account[pondo_delegator3.aleo] 0u64 into r4;\n    get.or_use credits.aleo/account[pondo_delegator4.aleo] 0u64 into r5;\n    get.or_use credits.aleo/account[pondo_delegator5.aleo] 0u64 into r6;\n    cast pondo_core_protocol.aleo 0u64 into r7 as bond_state;\n    get.or_use credits.aleo/bonded[pondo_delegator1.aleo] r7 into r8;\n    get.or_use credits.aleo/bonded[pondo_delegator2.aleo] r7 into r9;\n    get.or_use credits.aleo/bonded[pondo_delegator3.aleo] r7 into r10;\n    get.or_use credits.aleo/bonded[pondo_delegator4.aleo] r7 into r11;\n    get.or_use credits.aleo/bonded[pondo_delegator5.aleo] r7 into r12;\n    cast 0u64 0u32 into r13 as unbond_state;\n    get.or_use credits.aleo/unbonding[pondo_delegator1.aleo] r13 into r14;\n    get.or_use credits.aleo/unbonding[pondo_delegator2.aleo] r13 into r15;\n    get.or_use credits.aleo/unbonding[pondo_delegator3.aleo] r13 into r16;\n    get.or_use credits.aleo/unbonding[pondo_delegator4.aleo] r13 into r17;\n    get.or_use credits.aleo/unbonding[pondo_delegator5.aleo] r13 into r18;\n    get.or_use credits.aleo/account[pondo_core_protocol.aleo] 0u64 into r19;\n    add r2 r3 into r20;\n    add r20 r4 into r21;\n    add r21 r5 into r22;\n    add r22 r6 into r23;\n    add r23 r8.microcredits into r24;\n    add r24 r9.microcredits into r25;\n    add r25 r10.microcredits into r26;\n    add r26 r11.microcredits into r27;\n    add r27 r12.microcredits into r28;\n    add r28 r19 into r29;\n    add r29 r14.microcredits into r30;\n    add r30 r15.microcredits into r31;\n    add r31 r16.microcredits into r32;\n    add r32 r17.microcredits into r33;\n    add r33 r18.microcredits into r34;\n    mul r1 98u64 into r35;\n    div r35 100u64 into r36;\n    gte r34 r36 into r37;\n    mul r1 102u64 into r38;\n    div r38 100u64 into r39;\n    lte r34 r39 into r40;\n    and r37 r40 into r41;\n    assert.eq r41 true;\n\n",
  "pondo_oracle.aleo": "import credits.aleo;\nprogram pondo_oracle.aleo;\n\nstruct committee_state:\n    is_open as boolean;\n    commission as u8;\n\nstruct bond_state:\n    validator as address;\n    microcredits as u64;\n\n\nstruct validator_datum:\n    delegator as address;\n    validator as address;\n    block_height as u32;\n    bonded_microcredits as u64;\n    microcredits_yield_per_epoch as u128;\n    commission as u8;\n    boost as u128;\n\nstruct validator_boost:\n    epoch as u32;\n    boost_amount as u64;\n\n\nmapping delegator_to_validator:\n\tkey as address.public;\n\tvalue as address.public;\n\n\nmapping validator_data:\n\tkey as address.public;\n\tvalue as validator_datum.public;\n\n\nmapping top_validators:\n\tkey as u8.public;\n\tvalue as [address; 10u32].public;\n\n\nmapping banned_validators:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nmapping pondo_tvl:\n\tkey as u8.public;\n\tvalue as u64.public;\n\n\nmapping validator_boosting:\n\tkey as address.public;\n\tvalue as validator_boost.public;\n\n\nmapping control_addresses:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nmapping delegator_allocation:\n\tkey as u8.public;\n\tvalue as [u128; 10u32].public;\n\n\nfunction initialize:\n    async initialize into r0;\n    output r0 as pondo_oracle.aleo/initialize.future;\n\nfinalize initialize:\n    set true into control_addresses[aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0];\n    set false into control_addresses[pondo_delegator1.aleo];\n    set false into control_addresses[pondo_delegator2.aleo];\n    set false into control_addresses[pondo_delegator3.aleo];\n    set false into control_addresses[pondo_delegator4.aleo];\n    set false into control_addresses[pondo_delegator5.aleo];\n    cast  3700u128 2600u128 1600u128 1200u128 900u128 900u128 900u128 900u128 900u128 900u128 into r0 as [u128; 10u32];\n    set r0 into delegator_allocation[0u8];\n\n\n\n\nfunction add_control_address:\n    input r0 as address.public;\n    async add_control_address r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/add_control_address.future;\n\nfinalize add_control_address:\n    input r0 as address.public;\n    input r1 as address.public;\n    get control_addresses[r1] into r2;\n    assert.eq r2 true;\n    set false into control_addresses[r0];\n\n\n\n\nfunction remove_control_address:\n    input r0 as address.public;\n    async remove_control_address r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/remove_control_address.future;\n\nfinalize remove_control_address:\n    input r0 as address.public;\n    input r1 as address.public;\n    get control_addresses[r1] into r2;\n    assert.eq r2 true;\n    remove control_addresses[r0];\n\n\n\n\nfunction update_admin:\n    input r0 as address.public;\n    async update_admin r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/update_admin.future;\n\nfinalize update_admin:\n    input r0 as address.public;\n    input r1 as address.public;\n    get control_addresses[r1] into r2;\n    assert.eq r2 true;\n    set true into control_addresses[r0];\n    remove control_addresses[r1];\n\n\n\n\nfunction update_delegator_allocations:\n    input r0 as [u128; 10u32].public;\n    async update_delegator_allocations r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/update_delegator_allocations.future;\n\nfinalize update_delegator_allocations:\n    input r0 as [u128; 10u32].public;\n    input r1 as address.public;\n    get control_addresses[r1] into r2;\n    assert.eq r2 true;\n    set r0 into delegator_allocation[0u8];\n\n\n\n\nfunction propose_delegator:\n    input r0 as address.public;\n    assert.neq self.caller self.signer;\n    async propose_delegator self.caller r0 into r1;\n    output r1 as pondo_oracle.aleo/propose_delegator.future;\n\nfinalize propose_delegator:\n    input r0 as address.public;\n    input r1 as address.public;\n    contains banned_validators[r1] into r2;\n    assert.eq r2 false;\n    contains delegator_to_validator[r0] into r3;\n    assert.eq r3 false;\n    set r1 into delegator_to_validator[r0];\n\n\n\n\nfunction add_delegator:\n    input r0 as address.public;\n    async add_delegator r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/add_delegator.future;\n\nfinalize add_delegator:\n    input r0 as address.public;\n    input r1 as address.public;\n    get control_addresses[r1] into r2;\n    assert.eq r2 true;\n    contains delegator_to_validator[r0] into r3;\n    assert.eq r3 true;\n    get credits.aleo/withdraw[r0] into r4;\n    assert.eq r4 r0;\n    get delegator_to_validator[r0] into r5;\n    get credits.aleo/bonded[r0] into r6;\n    assert.eq r6.validator r5;\n    contains banned_validators[r5] into r7;\n    assert.eq r7 false;\n    contains validator_data[r5] into r8;\n    assert.eq r8 false;\n    get credits.aleo/committee[r5] into r9;\n    assert.eq r9.is_open true;\n    lt r9.commission 50u8 into r10;\n    assert.eq r10 true;\n    cast r0 r5 block.height r6.microcredits 0u128 r9.commission 0u128 into r11 as validator_datum;\n    set r11 into validator_data[r0];\n\n\n\n\n\n\nfunction update_data:\n    input r0 as address.public;\n    async update_data r0 into r1;\n    output r1 as pondo_oracle.aleo/update_data.future;\n\nfinalize update_data:\n    input r0 as address.public;\n    get validator_data[r0] into r1;\n    contains banned_validators[r1.validator] into r2;\n    assert.eq r2 false;\n    rem block.height 120_960u32 into r3;\n    gte r3 103_680u32 into r4;\n    assert.eq r4 true;\n    sub block.height r1.block_height into r5;\n    gt r5 103_680u32 into r6;\n    assert.eq r6 true;\n    get credits.aleo/committee[r1.validator] into r7;\n    lt r7.commission 50u8 into r8;\n    assert.eq r8 true;\n    assert.eq r7.is_open true;\n    get credits.aleo/bonded[r0] into r9;\n    div block.height 120_960u32 into r10;\n    cast r9.microcredits into r11 as u128;\n    cast r1.bonded_microcredits into r12 as u128;\n    sub r11 r12 into r13;\n    mul r13 10_000_000_000u128 into r14;\n    cast r1.bonded_microcredits into r15 as u128;\n    div r14 r15 into r16;\n    cast 120_960u32 into r17 as u128;\n    mul r16 r17 into r18;\n    cast r5 into r19 as u128;\n    div r18 r19 into r20;\n    cast 0u32 0u64 into r21 as validator_boost;\n    get.or_use validator_boosting[r1.validator] r21 into r22;\n    is.eq r22.epoch r10 into r23;\n    cast r22.boost_amount into r24 as u128;\n    ternary r23 r24 0u128 into r25;\n    get.or_use pondo_tvl[0u8] 10_000_000_000_000_000u64 into r26;\n    cast r26 into r27 as u128;\n    mul r25 10_000_000_000u128 into r28;\n    cast r27 into r29 as u128;\n    div r28 r29 into r30;\n    div r1.block_height 120_960u32 into r31;\n    add r31 1u32 into r32;\n    is.eq r32 r10 into r33;\n    add r20 r30 into r34;\n    ternary r33 r34 0u128 into r35;\n    cast r0 r1.validator block.height r9.microcredits r35 r7.commission r25 into r36 as validator_datum;\n    set r36 into validator_data[r0];\n    cast  aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r37 as [address; 10u32];\n    get.or_use top_validators[0u8] r37 into r38;\n    cast aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc 0u32 0u64 0u128 0u8 0u128 into r39 as validator_datum;\n    get.or_use validator_data[r38[0u32]] r39 into r40;\n    get.or_use validator_data[r38[1u32]] r39 into r41;\n    get.or_use validator_data[r38[2u32]] r39 into r42;\n    get.or_use validator_data[r38[3u32]] r39 into r43;\n    get.or_use validator_data[r38[4u32]] r39 into r44;\n    get.or_use validator_data[r38[5u32]] r39 into r45;\n    get.or_use validator_data[r38[6u32]] r39 into r46;\n    get.or_use validator_data[r38[7u32]] r39 into r47;\n    get.or_use validator_data[r38[8u32]] r39 into r48;\n    get.or_use validator_data[r38[9u32]] r39 into r49;\n    mul r10 120_960u32 into r50;\n    get delegator_allocation[0u8] into r51;\n    is.eq r36.delegator r40.delegator into r52;\n    is.eq r36.validator r40.validator into r53;\n    lt r40.block_height r50 into r54;\n    lt r36.block_height r50 into r55;\n    is.eq r40.microcredits_yield_per_epoch 0u128 into r56;\n    is.eq r36.microcredits_yield_per_epoch 0u128 into r57;\n    mul r36.boost 10_000u128 into r58;\n    div r58 r51[0u32] into r59;\n    add r36.microcredits_yield_per_epoch r59 into r60;\n    mul r40.boost 10_000u128 into r61;\n    div r61 r51[0u32] into r62;\n    add r40.microcredits_yield_per_epoch r62 into r63;\n    gt r60 r63 into r64;\n    lt r60 r63 into r65;\n    ternary r53 r64 r65 into r66;\n    ternary r66 r40.delegator r36.delegator into r67;\n    ternary r66 r40.validator r36.validator into r68;\n    ternary r66 r40.block_height r36.block_height into r69;\n    ternary r66 r40.bonded_microcredits r36.bonded_microcredits into r70;\n    ternary r66 r40.microcredits_yield_per_epoch r36.microcredits_yield_per_epoch into r71;\n    ternary r66 r40.commission r36.commission into r72;\n    ternary r66 r40.boost r36.boost into r73;\n    cast r67 r68 r69 r70 r71 r72 r73 into r74 as validator_datum;\n    ternary r66 r36.delegator r40.delegator into r75;\n    ternary r66 r36.validator r40.validator into r76;\n    ternary r66 r36.block_height r40.block_height into r77;\n    ternary r66 r36.bonded_microcredits r40.bonded_microcredits into r78;\n    ternary r66 r36.microcredits_yield_per_epoch r40.microcredits_yield_per_epoch into r79;\n    ternary r66 r36.commission r40.commission into r80;\n    ternary r66 r36.boost r40.boost into r81;\n    cast r75 r76 r77 r78 r79 r80 r81 into r82 as validator_datum;\n    ternary r66 r53 r53 into r83;\n    ternary r57 r40.delegator r74.delegator into r84;\n    ternary r57 r40.validator r74.validator into r85;\n    ternary r57 r40.block_height r74.block_height into r86;\n    ternary r57 r40.bonded_microcredits r74.bonded_microcredits into r87;\n    ternary r57 r40.microcredits_yield_per_epoch r74.microcredits_yield_per_epoch into r88;\n    ternary r57 r40.commission r74.commission into r89;\n    ternary r57 r40.boost r74.boost into r90;\n    cast r84 r85 r86 r87 r88 r89 r90 into r91 as validator_datum;\n    ternary r57 r36.delegator r82.delegator into r92;\n    ternary r57 r36.validator r82.validator into r93;\n    ternary r57 r36.block_height r82.block_height into r94;\n    ternary r57 r36.bonded_microcredits r82.bonded_microcredits into r95;\n    ternary r57 r36.microcredits_yield_per_epoch r82.microcredits_yield_per_epoch into r96;\n    ternary r57 r36.commission r82.commission into r97;\n    ternary r57 r36.boost r82.boost into r98;\n    cast r92 r93 r94 r95 r96 r97 r98 into r99 as validator_datum;\n    ternary r57 r53 r83 into r100;\n    ternary r56 r36.delegator r91.delegator into r101;\n    ternary r56 r36.validator r91.validator into r102;\n    ternary r56 r36.block_height r91.block_height into r103;\n    ternary r56 r36.bonded_microcredits r91.bonded_microcredits into r104;\n    ternary r56 r36.microcredits_yield_per_epoch r91.microcredits_yield_per_epoch into r105;\n    ternary r56 r36.commission r91.commission into r106;\n    ternary r56 r36.boost r91.boost into r107;\n    cast r101 r102 r103 r104 r105 r106 r107 into r108 as validator_datum;\n    ternary r56 r40.delegator r99.delegator into r109;\n    ternary r56 r40.validator r99.validator into r110;\n    ternary r56 r40.block_height r99.block_height into r111;\n    ternary r56 r40.bonded_microcredits r99.bonded_microcredits into r112;\n    ternary r56 r40.microcredits_yield_per_epoch r99.microcredits_yield_per_epoch into r113;\n    ternary r56 r40.commission r99.commission into r114;\n    ternary r56 r40.boost r99.boost into r115;\n    cast r109 r110 r111 r112 r113 r114 r115 into r116 as validator_datum;\n    ternary r56 r53 r100 into r117;\n    ternary r55 r40.delegator r108.delegator into r118;\n    ternary r55 r40.validator r108.validator into r119;\n    ternary r55 r40.block_height r108.block_height into r120;\n    ternary r55 r40.bonded_microcredits r108.bonded_microcredits into r121;\n    ternary r55 r40.microcredits_yield_per_epoch r108.microcredits_yield_per_epoch into r122;\n    ternary r55 r40.commission r108.commission into r123;\n    ternary r55 r40.boost r108.boost into r124;\n    cast r118 r119 r120 r121 r122 r123 r124 into r125 as validator_datum;\n    ternary r55 r36.delegator r116.delegator into r126;\n    ternary r55 r36.validator r116.validator into r127;\n    ternary r55 r36.block_height r116.block_height into r128;\n    ternary r55 r36.bonded_microcredits r116.bonded_microcredits into r129;\n    ternary r55 r36.microcredits_yield_per_epoch r116.microcredits_yield_per_epoch into r130;\n    ternary r55 r36.commission r116.commission into r131;\n    ternary r55 r36.boost r116.boost into r132;\n    cast r126 r127 r128 r129 r130 r131 r132 into r133 as validator_datum;\n    ternary r55 r53 r117 into r134;\n    ternary r54 r36.delegator r125.delegator into r135;\n    ternary r54 r36.validator r125.validator into r136;\n    ternary r54 r36.block_height r125.block_height into r137;\n    ternary r54 r36.bonded_microcredits r125.bonded_microcredits into r138;\n    ternary r54 r36.microcredits_yield_per_epoch r125.microcredits_yield_per_epoch into r139;\n    ternary r54 r36.commission r125.commission into r140;\n    ternary r54 r36.boost r125.boost into r141;\n    cast r135 r136 r137 r138 r139 r140 r141 into r142 as validator_datum;\n    ternary r54 r40.delegator r133.delegator into r143;\n    ternary r54 r40.validator r133.validator into r144;\n    ternary r54 r40.block_height r133.block_height into r145;\n    ternary r54 r40.bonded_microcredits r133.bonded_microcredits into r146;\n    ternary r54 r40.microcredits_yield_per_epoch r133.microcredits_yield_per_epoch into r147;\n    ternary r54 r40.commission r133.commission into r148;\n    ternary r54 r40.boost r133.boost into r149;\n    cast r143 r144 r145 r146 r147 r148 r149 into r150 as validator_datum;\n    ternary r54 r53 r134 into r151;\n    ternary r52 r36.delegator r142.delegator into r152;\n    ternary r52 r36.validator r142.validator into r153;\n    ternary r52 r36.block_height r142.block_height into r154;\n    ternary r52 r36.bonded_microcredits r142.bonded_microcredits into r155;\n    ternary r52 r36.microcredits_yield_per_epoch r142.microcredits_yield_per_epoch into r156;\n    ternary r52 r36.commission r142.commission into r157;\n    ternary r52 r36.boost r142.boost into r158;\n    cast r152 r153 r154 r155 r156 r157 r158 into r159 as validator_datum;\n    ternary r52 r40.delegator r150.delegator into r160;\n    ternary r52 r40.validator r150.validator into r161;\n    ternary r52 r40.block_height r150.block_height into r162;\n    ternary r52 r40.bonded_microcredits r150.bonded_microcredits into r163;\n    ternary r52 r40.microcredits_yield_per_epoch r150.microcredits_yield_per_epoch into r164;\n    ternary r52 r40.commission r150.commission into r165;\n    ternary r52 r40.boost r150.boost into r166;\n    cast r160 r161 r162 r163 r164 r165 r166 into r167 as validator_datum;\n    ternary r52 true r151 into r168;\n    ternary false r40.delegator r159.delegator into r169;\n    ternary false r40.validator r159.validator into r170;\n    ternary false r40.block_height r159.block_height into r171;\n    ternary false r40.bonded_microcredits r159.bonded_microcredits into r172;\n    ternary false r40.microcredits_yield_per_epoch r159.microcredits_yield_per_epoch into r173;\n    ternary false r40.commission r159.commission into r174;\n    ternary false r40.boost r159.boost into r175;\n    cast r169 r170 r171 r172 r173 r174 r175 into r176 as validator_datum;\n    ternary false r36.delegator r167.delegator into r177;\n    ternary false r36.validator r167.validator into r178;\n    ternary false r36.block_height r167.block_height into r179;\n    ternary false r36.bonded_microcredits r167.bonded_microcredits into r180;\n    ternary false r36.microcredits_yield_per_epoch r167.microcredits_yield_per_epoch into r181;\n    ternary false r36.commission r167.commission into r182;\n    ternary false r36.boost r167.boost into r183;\n    cast r177 r178 r179 r180 r181 r182 r183 into r184 as validator_datum;\n    ternary false true r168 into r185;\n    is.eq r184.delegator r41.delegator into r186;\n    is.eq r184.validator r41.validator into r187;\n    lt r41.block_height r50 into r188;\n    lt r184.block_height r50 into r189;\n    is.eq r41.microcredits_yield_per_epoch 0u128 into r190;\n    is.eq r184.microcredits_yield_per_epoch 0u128 into r191;\n    mul r184.boost 10_000u128 into r192;\n    div r192 r51[1u32] into r193;\n    add r184.microcredits_yield_per_epoch r193 into r194;\n    mul r41.boost 10_000u128 into r195;\n    div r195 r51[1u32] into r196;\n    add r41.microcredits_yield_per_epoch r196 into r197;\n    gt r194 r197 into r198;\n    lt r194 r197 into r199;\n    ternary r187 r198 r199 into r200;\n    ternary r200 r41.delegator r184.delegator into r201;\n    ternary r200 r41.validator r184.validator into r202;\n    ternary r200 r41.block_height r184.block_height into r203;\n    ternary r200 r41.bonded_microcredits r184.bonded_microcredits into r204;\n    ternary r200 r41.microcredits_yield_per_epoch r184.microcredits_yield_per_epoch into r205;\n    ternary r200 r41.commission r184.commission into r206;\n    ternary r200 r41.boost r184.boost into r207;\n    cast r201 r202 r203 r204 r205 r206 r207 into r208 as validator_datum;\n    ternary r200 r184.delegator r41.delegator into r209;\n    ternary r200 r184.validator r41.validator into r210;\n    ternary r200 r184.block_height r41.block_height into r211;\n    ternary r200 r184.bonded_microcredits r41.bonded_microcredits into r212;\n    ternary r200 r184.microcredits_yield_per_epoch r41.microcredits_yield_per_epoch into r213;\n    ternary r200 r184.commission r41.commission into r214;\n    ternary r200 r184.boost r41.boost into r215;\n    cast r209 r210 r211 r212 r213 r214 r215 into r216 as validator_datum;\n    ternary r200 r187 r187 into r217;\n    ternary r191 r41.delegator r208.delegator into r218;\n    ternary r191 r41.validator r208.validator into r219;\n    ternary r191 r41.block_height r208.block_height into r220;\n    ternary r191 r41.bonded_microcredits r208.bonded_microcredits into r221;\n    ternary r191 r41.microcredits_yield_per_epoch r208.microcredits_yield_per_epoch into r222;\n    ternary r191 r41.commission r208.commission into r223;\n    ternary r191 r41.boost r208.boost into r224;\n    cast r218 r219 r220 r221 r222 r223 r224 into r225 as validator_datum;\n    ternary r191 r184.delegator r216.delegator into r226;\n    ternary r191 r184.validator r216.validator into r227;\n    ternary r191 r184.block_height r216.block_height into r228;\n    ternary r191 r184.bonded_microcredits r216.bonded_microcredits into r229;\n    ternary r191 r184.microcredits_yield_per_epoch r216.microcredits_yield_per_epoch into r230;\n    ternary r191 r184.commission r216.commission into r231;\n    ternary r191 r184.boost r216.boost into r232;\n    cast r226 r227 r228 r229 r230 r231 r232 into r233 as validator_datum;\n    ternary r191 r187 r217 into r234;\n    ternary r190 r184.delegator r225.delegator into r235;\n    ternary r190 r184.validator r225.validator into r236;\n    ternary r190 r184.block_height r225.block_height into r237;\n    ternary r190 r184.bonded_microcredits r225.bonded_microcredits into r238;\n    ternary r190 r184.microcredits_yield_per_epoch r225.microcredits_yield_per_epoch into r239;\n    ternary r190 r184.commission r225.commission into r240;\n    ternary r190 r184.boost r225.boost into r241;\n    cast r235 r236 r237 r238 r239 r240 r241 into r242 as validator_datum;\n    ternary r190 r41.delegator r233.delegator into r243;\n    ternary r190 r41.validator r233.validator into r244;\n    ternary r190 r41.block_height r233.block_height into r245;\n    ternary r190 r41.bonded_microcredits r233.bonded_microcredits into r246;\n    ternary r190 r41.microcredits_yield_per_epoch r233.microcredits_yield_per_epoch into r247;\n    ternary r190 r41.commission r233.commission into r248;\n    ternary r190 r41.boost r233.boost into r249;\n    cast r243 r244 r245 r246 r247 r248 r249 into r250 as validator_datum;\n    ternary r190 r187 r234 into r251;\n    ternary r189 r41.delegator r242.delegator into r252;\n    ternary r189 r41.validator r242.validator into r253;\n    ternary r189 r41.block_height r242.block_height into r254;\n    ternary r189 r41.bonded_microcredits r242.bonded_microcredits into r255;\n    ternary r189 r41.microcredits_yield_per_epoch r242.microcredits_yield_per_epoch into r256;\n    ternary r189 r41.commission r242.commission into r257;\n    ternary r189 r41.boost r242.boost into r258;\n    cast r252 r253 r254 r255 r256 r257 r258 into r259 as validator_datum;\n    ternary r189 r184.delegator r250.delegator into r260;\n    ternary r189 r184.validator r250.validator into r261;\n    ternary r189 r184.block_height r250.block_height into r262;\n    ternary r189 r184.bonded_microcredits r250.bonded_microcredits into r263;\n    ternary r189 r184.microcredits_yield_per_epoch r250.microcredits_yield_per_epoch into r264;\n    ternary r189 r184.commission r250.commission into r265;\n    ternary r189 r184.boost r250.boost into r266;\n    cast r260 r261 r262 r263 r264 r265 r266 into r267 as validator_datum;\n    ternary r189 r187 r251 into r268;\n    ternary r188 r184.delegator r259.delegator into r269;\n    ternary r188 r184.validator r259.validator into r270;\n    ternary r188 r184.block_height r259.block_height into r271;\n    ternary r188 r184.bonded_microcredits r259.bonded_microcredits into r272;\n    ternary r188 r184.microcredits_yield_per_epoch r259.microcredits_yield_per_epoch into r273;\n    ternary r188 r184.commission r259.commission into r274;\n    ternary r188 r184.boost r259.boost into r275;\n    cast r269 r270 r271 r272 r273 r274 r275 into r276 as validator_datum;\n    ternary r188 r41.delegator r267.delegator into r277;\n    ternary r188 r41.validator r267.validator into r278;\n    ternary r188 r41.block_height r267.block_height into r279;\n    ternary r188 r41.bonded_microcredits r267.bonded_microcredits into r280;\n    ternary r188 r41.microcredits_yield_per_epoch r267.microcredits_yield_per_epoch into r281;\n    ternary r188 r41.commission r267.commission into r282;\n    ternary r188 r41.boost r267.boost into r283;\n    cast r277 r278 r279 r280 r281 r282 r283 into r284 as validator_datum;\n    ternary r188 r187 r268 into r285;\n    ternary r186 r184.delegator r276.delegator into r286;\n    ternary r186 r184.validator r276.validator into r287;\n    ternary r186 r184.block_height r276.block_height into r288;\n    ternary r186 r184.bonded_microcredits r276.bonded_microcredits into r289;\n    ternary r186 r184.microcredits_yield_per_epoch r276.microcredits_yield_per_epoch into r290;\n    ternary r186 r184.commission r276.commission into r291;\n    ternary r186 r184.boost r276.boost into r292;\n    cast r286 r287 r288 r289 r290 r291 r292 into r293 as validator_datum;\n    ternary r186 r41.delegator r284.delegator into r294;\n    ternary r186 r41.validator r284.validator into r295;\n    ternary r186 r41.block_height r284.block_height into r296;\n    ternary r186 r41.bonded_microcredits r284.bonded_microcredits into r297;\n    ternary r186 r41.microcredits_yield_per_epoch r284.microcredits_yield_per_epoch into r298;\n    ternary r186 r41.commission r284.commission into r299;\n    ternary r186 r41.boost r284.boost into r300;\n    cast r294 r295 r296 r297 r298 r299 r300 into r301 as validator_datum;\n    ternary r186 true r285 into r302;\n    ternary r185 r41.delegator r293.delegator into r303;\n    ternary r185 r41.validator r293.validator into r304;\n    ternary r185 r41.block_height r293.block_height into r305;\n    ternary r185 r41.bonded_microcredits r293.bonded_microcredits into r306;\n    ternary r185 r41.microcredits_yield_per_epoch r293.microcredits_yield_per_epoch into r307;\n    ternary r185 r41.commission r293.commission into r308;\n    ternary r185 r41.boost r293.boost into r309;\n    cast r303 r304 r305 r306 r307 r308 r309 into r310 as validator_datum;\n    ternary r185 r184.delegator r301.delegator into r311;\n    ternary r185 r184.validator r301.validator into r312;\n    ternary r185 r184.block_height r301.block_height into r313;\n    ternary r185 r184.bonded_microcredits r301.bonded_microcredits into r314;\n    ternary r185 r184.microcredits_yield_per_epoch r301.microcredits_yield_per_epoch into r315;\n    ternary r185 r184.commission r301.commission into r316;\n    ternary r185 r184.boost r301.boost into r317;\n    cast r311 r312 r313 r314 r315 r316 r317 into r318 as validator_datum;\n    ternary r185 true r302 into r319;\n    is.eq r318.delegator r42.delegator into r320;\n    is.eq r318.validator r42.validator into r321;\n    lt r42.block_height r50 into r322;\n    lt r318.block_height r50 into r323;\n    is.eq r42.microcredits_yield_per_epoch 0u128 into r324;\n    is.eq r318.microcredits_yield_per_epoch 0u128 into r325;\n    mul r318.boost 10_000u128 into r326;\n    div r326 r51[2u32] into r327;\n    add r318.microcredits_yield_per_epoch r327 into r328;\n    mul r42.boost 10_000u128 into r329;\n    div r329 r51[2u32] into r330;\n    add r42.microcredits_yield_per_epoch r330 into r331;\n    gt r328 r331 into r332;\n    lt r328 r331 into r333;\n    ternary r321 r332 r333 into r334;\n    ternary r334 r42.delegator r318.delegator into r335;\n    ternary r334 r42.validator r318.validator into r336;\n    ternary r334 r42.block_height r318.block_height into r337;\n    ternary r334 r42.bonded_microcredits r318.bonded_microcredits into r338;\n    ternary r334 r42.microcredits_yield_per_epoch r318.microcredits_yield_per_epoch into r339;\n    ternary r334 r42.commission r318.commission into r340;\n    ternary r334 r42.boost r318.boost into r341;\n    cast r335 r336 r337 r338 r339 r340 r341 into r342 as validator_datum;\n    ternary r334 r318.delegator r42.delegator into r343;\n    ternary r334 r318.validator r42.validator into r344;\n    ternary r334 r318.block_height r42.block_height into r345;\n    ternary r334 r318.bonded_microcredits r42.bonded_microcredits into r346;\n    ternary r334 r318.microcredits_yield_per_epoch r42.microcredits_yield_per_epoch into r347;\n    ternary r334 r318.commission r42.commission into r348;\n    ternary r334 r318.boost r42.boost into r349;\n    cast r343 r344 r345 r346 r347 r348 r349 into r350 as validator_datum;\n    ternary r334 r321 r321 into r351;\n    ternary r325 r42.delegator r342.delegator into r352;\n    ternary r325 r42.validator r342.validator into r353;\n    ternary r325 r42.block_height r342.block_height into r354;\n    ternary r325 r42.bonded_microcredits r342.bonded_microcredits into r355;\n    ternary r325 r42.microcredits_yield_per_epoch r342.microcredits_yield_per_epoch into r356;\n    ternary r325 r42.commission r342.commission into r357;\n    ternary r325 r42.boost r342.boost into r358;\n    cast r352 r353 r354 r355 r356 r357 r358 into r359 as validator_datum;\n    ternary r325 r318.delegator r350.delegator into r360;\n    ternary r325 r318.validator r350.validator into r361;\n    ternary r325 r318.block_height r350.block_height into r362;\n    ternary r325 r318.bonded_microcredits r350.bonded_microcredits into r363;\n    ternary r325 r318.microcredits_yield_per_epoch r350.microcredits_yield_per_epoch into r364;\n    ternary r325 r318.commission r350.commission into r365;\n    ternary r325 r318.boost r350.boost into r366;\n    cast r360 r361 r362 r363 r364 r365 r366 into r367 as validator_datum;\n    ternary r325 r321 r351 into r368;\n    ternary r324 r318.delegator r359.delegator into r369;\n    ternary r324 r318.validator r359.validator into r370;\n    ternary r324 r318.block_height r359.block_height into r371;\n    ternary r324 r318.bonded_microcredits r359.bonded_microcredits into r372;\n    ternary r324 r318.microcredits_yield_per_epoch r359.microcredits_yield_per_epoch into r373;\n    ternary r324 r318.commission r359.commission into r374;\n    ternary r324 r318.boost r359.boost into r375;\n    cast r369 r370 r371 r372 r373 r374 r375 into r376 as validator_datum;\n    ternary r324 r42.delegator r367.delegator into r377;\n    ternary r324 r42.validator r367.validator into r378;\n    ternary r324 r42.block_height r367.block_height into r379;\n    ternary r324 r42.bonded_microcredits r367.bonded_microcredits into r380;\n    ternary r324 r42.microcredits_yield_per_epoch r367.microcredits_yield_per_epoch into r381;\n    ternary r324 r42.commission r367.commission into r382;\n    ternary r324 r42.boost r367.boost into r383;\n    cast r377 r378 r379 r380 r381 r382 r383 into r384 as validator_datum;\n    ternary r324 r321 r368 into r385;\n    ternary r323 r42.delegator r376.delegator into r386;\n    ternary r323 r42.validator r376.validator into r387;\n    ternary r323 r42.block_height r376.block_height into r388;\n    ternary r323 r42.bonded_microcredits r376.bonded_microcredits into r389;\n    ternary r323 r42.microcredits_yield_per_epoch r376.microcredits_yield_per_epoch into r390;\n    ternary r323 r42.commission r376.commission into r391;\n    ternary r323 r42.boost r376.boost into r392;\n    cast r386 r387 r388 r389 r390 r391 r392 into r393 as validator_datum;\n    ternary r323 r318.delegator r384.delegator into r394;\n    ternary r323 r318.validator r384.validator into r395;\n    ternary r323 r318.block_height r384.block_height into r396;\n    ternary r323 r318.bonded_microcredits r384.bonded_microcredits into r397;\n    ternary r323 r318.microcredits_yield_per_epoch r384.microcredits_yield_per_epoch into r398;\n    ternary r323 r318.commission r384.commission into r399;\n    ternary r323 r318.boost r384.boost into r400;\n    cast r394 r395 r396 r397 r398 r399 r400 into r401 as validator_datum;\n    ternary r323 r321 r385 into r402;\n    ternary r322 r318.delegator r393.delegator into r403;\n    ternary r322 r318.validator r393.validator into r404;\n    ternary r322 r318.block_height r393.block_height into r405;\n    ternary r322 r318.bonded_microcredits r393.bonded_microcredits into r406;\n    ternary r322 r318.microcredits_yield_per_epoch r393.microcredits_yield_per_epoch into r407;\n    ternary r322 r318.commission r393.commission into r408;\n    ternary r322 r318.boost r393.boost into r409;\n    cast r403 r404 r405 r406 r407 r408 r409 into r410 as validator_datum;\n    ternary r322 r42.delegator r401.delegator into r411;\n    ternary r322 r42.validator r401.validator into r412;\n    ternary r322 r42.block_height r401.block_height into r413;\n    ternary r322 r42.bonded_microcredits r401.bonded_microcredits into r414;\n    ternary r322 r42.microcredits_yield_per_epoch r401.microcredits_yield_per_epoch into r415;\n    ternary r322 r42.commission r401.commission into r416;\n    ternary r322 r42.boost r401.boost into r417;\n    cast r411 r412 r413 r414 r415 r416 r417 into r418 as validator_datum;\n    ternary r322 r321 r402 into r419;\n    ternary r320 r318.delegator r410.delegator into r420;\n    ternary r320 r318.validator r410.validator into r421;\n    ternary r320 r318.block_height r410.block_height into r422;\n    ternary r320 r318.bonded_microcredits r410.bonded_microcredits into r423;\n    ternary r320 r318.microcredits_yield_per_epoch r410.microcredits_yield_per_epoch into r424;\n    ternary r320 r318.commission r410.commission into r425;\n    ternary r320 r318.boost r410.boost into r426;\n    cast r420 r421 r422 r423 r424 r425 r426 into r427 as validator_datum;\n    ternary r320 r42.delegator r418.delegator into r428;\n    ternary r320 r42.validator r418.validator into r429;\n    ternary r320 r42.block_height r418.block_height into r430;\n    ternary r320 r42.bonded_microcredits r418.bonded_microcredits into r431;\n    ternary r320 r42.microcredits_yield_per_epoch r418.microcredits_yield_per_epoch into r432;\n    ternary r320 r42.commission r418.commission into r433;\n    ternary r320 r42.boost r418.boost into r434;\n    cast r428 r429 r430 r431 r432 r433 r434 into r435 as validator_datum;\n    ternary r320 true r419 into r436;\n    ternary r319 r42.delegator r427.delegator into r437;\n    ternary r319 r42.validator r427.validator into r438;\n    ternary r319 r42.block_height r427.block_height into r439;\n    ternary r319 r42.bonded_microcredits r427.bonded_microcredits into r440;\n    ternary r319 r42.microcredits_yield_per_epoch r427.microcredits_yield_per_epoch into r441;\n    ternary r319 r42.commission r427.commission into r442;\n    ternary r319 r42.boost r427.boost into r443;\n    cast r437 r438 r439 r440 r441 r442 r443 into r444 as validator_datum;\n    ternary r319 r318.delegator r435.delegator into r445;\n    ternary r319 r318.validator r435.validator into r446;\n    ternary r319 r318.block_height r435.block_height into r447;\n    ternary r319 r318.bonded_microcredits r435.bonded_microcredits into r448;\n    ternary r319 r318.microcredits_yield_per_epoch r435.microcredits_yield_per_epoch into r449;\n    ternary r319 r318.commission r435.commission into r450;\n    ternary r319 r318.boost r435.boost into r451;\n    cast r445 r446 r447 r448 r449 r450 r451 into r452 as validator_datum;\n    ternary r319 true r436 into r453;\n    is.eq r452.delegator r43.delegator into r454;\n    is.eq r452.validator r43.validator into r455;\n    lt r43.block_height r50 into r456;\n    lt r452.block_height r50 into r457;\n    is.eq r43.microcredits_yield_per_epoch 0u128 into r458;\n    is.eq r452.microcredits_yield_per_epoch 0u128 into r459;\n    mul r452.boost 10_000u128 into r460;\n    div r460 r51[3u32] into r461;\n    add r452.microcredits_yield_per_epoch r461 into r462;\n    mul r43.boost 10_000u128 into r463;\n    div r463 r51[3u32] into r464;\n    add r43.microcredits_yield_per_epoch r464 into r465;\n    gt r462 r465 into r466;\n    lt r462 r465 into r467;\n    ternary r455 r466 r467 into r468;\n    ternary r468 r43.delegator r452.delegator into r469;\n    ternary r468 r43.validator r452.validator into r470;\n    ternary r468 r43.block_height r452.block_height into r471;\n    ternary r468 r43.bonded_microcredits r452.bonded_microcredits into r472;\n    ternary r468 r43.microcredits_yield_per_epoch r452.microcredits_yield_per_epoch into r473;\n    ternary r468 r43.commission r452.commission into r474;\n    ternary r468 r43.boost r452.boost into r475;\n    cast r469 r470 r471 r472 r473 r474 r475 into r476 as validator_datum;\n    ternary r468 r452.delegator r43.delegator into r477;\n    ternary r468 r452.validator r43.validator into r478;\n    ternary r468 r452.block_height r43.block_height into r479;\n    ternary r468 r452.bonded_microcredits r43.bonded_microcredits into r480;\n    ternary r468 r452.microcredits_yield_per_epoch r43.microcredits_yield_per_epoch into r481;\n    ternary r468 r452.commission r43.commission into r482;\n    ternary r468 r452.boost r43.boost into r483;\n    cast r477 r478 r479 r480 r481 r482 r483 into r484 as validator_datum;\n    ternary r468 r455 r455 into r485;\n    ternary r459 r43.delegator r476.delegator into r486;\n    ternary r459 r43.validator r476.validator into r487;\n    ternary r459 r43.block_height r476.block_height into r488;\n    ternary r459 r43.bonded_microcredits r476.bonded_microcredits into r489;\n    ternary r459 r43.microcredits_yield_per_epoch r476.microcredits_yield_per_epoch into r490;\n    ternary r459 r43.commission r476.commission into r491;\n    ternary r459 r43.boost r476.boost into r492;\n    cast r486 r487 r488 r489 r490 r491 r492 into r493 as validator_datum;\n    ternary r459 r452.delegator r484.delegator into r494;\n    ternary r459 r452.validator r484.validator into r495;\n    ternary r459 r452.block_height r484.block_height into r496;\n    ternary r459 r452.bonded_microcredits r484.bonded_microcredits into r497;\n    ternary r459 r452.microcredits_yield_per_epoch r484.microcredits_yield_per_epoch into r498;\n    ternary r459 r452.commission r484.commission into r499;\n    ternary r459 r452.boost r484.boost into r500;\n    cast r494 r495 r496 r497 r498 r499 r500 into r501 as validator_datum;\n    ternary r459 r455 r485 into r502;\n    ternary r458 r452.delegator r493.delegator into r503;\n    ternary r458 r452.validator r493.validator into r504;\n    ternary r458 r452.block_height r493.block_height into r505;\n    ternary r458 r452.bonded_microcredits r493.bonded_microcredits into r506;\n    ternary r458 r452.microcredits_yield_per_epoch r493.microcredits_yield_per_epoch into r507;\n    ternary r458 r452.commission r493.commission into r508;\n    ternary r458 r452.boost r493.boost into r509;\n    cast r503 r504 r505 r506 r507 r508 r509 into r510 as validator_datum;\n    ternary r458 r43.delegator r501.delegator into r511;\n    ternary r458 r43.validator r501.validator into r512;\n    ternary r458 r43.block_height r501.block_height into r513;\n    ternary r458 r43.bonded_microcredits r501.bonded_microcredits into r514;\n    ternary r458 r43.microcredits_yield_per_epoch r501.microcredits_yield_per_epoch into r515;\n    ternary r458 r43.commission r501.commission into r516;\n    ternary r458 r43.boost r501.boost into r517;\n    cast r511 r512 r513 r514 r515 r516 r517 into r518 as validator_datum;\n    ternary r458 r455 r502 into r519;\n    ternary r457 r43.delegator r510.delegator into r520;\n    ternary r457 r43.validator r510.validator into r521;\n    ternary r457 r43.block_height r510.block_height into r522;\n    ternary r457 r43.bonded_microcredits r510.bonded_microcredits into r523;\n    ternary r457 r43.microcredits_yield_per_epoch r510.microcredits_yield_per_epoch into r524;\n    ternary r457 r43.commission r510.commission into r525;\n    ternary r457 r43.boost r510.boost into r526;\n    cast r520 r521 r522 r523 r524 r525 r526 into r527 as validator_datum;\n    ternary r457 r452.delegator r518.delegator into r528;\n    ternary r457 r452.validator r518.validator into r529;\n    ternary r457 r452.block_height r518.block_height into r530;\n    ternary r457 r452.bonded_microcredits r518.bonded_microcredits into r531;\n    ternary r457 r452.microcredits_yield_per_epoch r518.microcredits_yield_per_epoch into r532;\n    ternary r457 r452.commission r518.commission into r533;\n    ternary r457 r452.boost r518.boost into r534;\n    cast r528 r529 r530 r531 r532 r533 r534 into r535 as validator_datum;\n    ternary r457 r455 r519 into r536;\n    ternary r456 r452.delegator r527.delegator into r537;\n    ternary r456 r452.validator r527.validator into r538;\n    ternary r456 r452.block_height r527.block_height into r539;\n    ternary r456 r452.bonded_microcredits r527.bonded_microcredits into r540;\n    ternary r456 r452.microcredits_yield_per_epoch r527.microcredits_yield_per_epoch into r541;\n    ternary r456 r452.commission r527.commission into r542;\n    ternary r456 r452.boost r527.boost into r543;\n    cast r537 r538 r539 r540 r541 r542 r543 into r544 as validator_datum;\n    ternary r456 r43.delegator r535.delegator into r545;\n    ternary r456 r43.validator r535.validator into r546;\n    ternary r456 r43.block_height r535.block_height into r547;\n    ternary r456 r43.bonded_microcredits r535.bonded_microcredits into r548;\n    ternary r456 r43.microcredits_yield_per_epoch r535.microcredits_yield_per_epoch into r549;\n    ternary r456 r43.commission r535.commission into r550;\n    ternary r456 r43.boost r535.boost into r551;\n    cast r545 r546 r547 r548 r549 r550 r551 into r552 as validator_datum;\n    ternary r456 r455 r536 into r553;\n    ternary r454 r452.delegator r544.delegator into r554;\n    ternary r454 r452.validator r544.validator into r555;\n    ternary r454 r452.block_height r544.block_height into r556;\n    ternary r454 r452.bonded_microcredits r544.bonded_microcredits into r557;\n    ternary r454 r452.microcredits_yield_per_epoch r544.microcredits_yield_per_epoch into r558;\n    ternary r454 r452.commission r544.commission into r559;\n    ternary r454 r452.boost r544.boost into r560;\n    cast r554 r555 r556 r557 r558 r559 r560 into r561 as validator_datum;\n    ternary r454 r43.delegator r552.delegator into r562;\n    ternary r454 r43.validator r552.validator into r563;\n    ternary r454 r43.block_height r552.block_height into r564;\n    ternary r454 r43.bonded_microcredits r552.bonded_microcredits into r565;\n    ternary r454 r43.microcredits_yield_per_epoch r552.microcredits_yield_per_epoch into r566;\n    ternary r454 r43.commission r552.commission into r567;\n    ternary r454 r43.boost r552.boost into r568;\n    cast r562 r563 r564 r565 r566 r567 r568 into r569 as validator_datum;\n    ternary r454 true r553 into r570;\n    ternary r453 r43.delegator r561.delegator into r571;\n    ternary r453 r43.validator r561.validator into r572;\n    ternary r453 r43.block_height r561.block_height into r573;\n    ternary r453 r43.bonded_microcredits r561.bonded_microcredits into r574;\n    ternary r453 r43.microcredits_yield_per_epoch r561.microcredits_yield_per_epoch into r575;\n    ternary r453 r43.commission r561.commission into r576;\n    ternary r453 r43.boost r561.boost into r577;\n    cast r571 r572 r573 r574 r575 r576 r577 into r578 as validator_datum;\n    ternary r453 r452.delegator r569.delegator into r579;\n    ternary r453 r452.validator r569.validator into r580;\n    ternary r453 r452.block_height r569.block_height into r581;\n    ternary r453 r452.bonded_microcredits r569.bonded_microcredits into r582;\n    ternary r453 r452.microcredits_yield_per_epoch r569.microcredits_yield_per_epoch into r583;\n    ternary r453 r452.commission r569.commission into r584;\n    ternary r453 r452.boost r569.boost into r585;\n    cast r579 r580 r581 r582 r583 r584 r585 into r586 as validator_datum;\n    ternary r453 true r570 into r587;\n    is.eq r586.delegator r44.delegator into r588;\n    is.eq r586.validator r44.validator into r589;\n    lt r44.block_height r50 into r590;\n    lt r586.block_height r50 into r591;\n    is.eq r44.microcredits_yield_per_epoch 0u128 into r592;\n    is.eq r586.microcredits_yield_per_epoch 0u128 into r593;\n    mul r586.boost 10_000u128 into r594;\n    div r594 r51[4u32] into r595;\n    add r586.microcredits_yield_per_epoch r595 into r596;\n    mul r44.boost 10_000u128 into r597;\n    div r597 r51[4u32] into r598;\n    add r44.microcredits_yield_per_epoch r598 into r599;\n    gt r596 r599 into r600;\n    lt r596 r599 into r601;\n    ternary r589 r600 r601 into r602;\n    ternary r602 r44.delegator r586.delegator into r603;\n    ternary r602 r44.validator r586.validator into r604;\n    ternary r602 r44.block_height r586.block_height into r605;\n    ternary r602 r44.bonded_microcredits r586.bonded_microcredits into r606;\n    ternary r602 r44.microcredits_yield_per_epoch r586.microcredits_yield_per_epoch into r607;\n    ternary r602 r44.commission r586.commission into r608;\n    ternary r602 r44.boost r586.boost into r609;\n    cast r603 r604 r605 r606 r607 r608 r609 into r610 as validator_datum;\n    ternary r602 r586.delegator r44.delegator into r611;\n    ternary r602 r586.validator r44.validator into r612;\n    ternary r602 r586.block_height r44.block_height into r613;\n    ternary r602 r586.bonded_microcredits r44.bonded_microcredits into r614;\n    ternary r602 r586.microcredits_yield_per_epoch r44.microcredits_yield_per_epoch into r615;\n    ternary r602 r586.commission r44.commission into r616;\n    ternary r602 r586.boost r44.boost into r617;\n    cast r611 r612 r613 r614 r615 r616 r617 into r618 as validator_datum;\n    ternary r602 r589 r589 into r619;\n    ternary r593 r44.delegator r610.delegator into r620;\n    ternary r593 r44.validator r610.validator into r621;\n    ternary r593 r44.block_height r610.block_height into r622;\n    ternary r593 r44.bonded_microcredits r610.bonded_microcredits into r623;\n    ternary r593 r44.microcredits_yield_per_epoch r610.microcredits_yield_per_epoch into r624;\n    ternary r593 r44.commission r610.commission into r625;\n    ternary r593 r44.boost r610.boost into r626;\n    cast r620 r621 r622 r623 r624 r625 r626 into r627 as validator_datum;\n    ternary r593 r586.delegator r618.delegator into r628;\n    ternary r593 r586.validator r618.validator into r629;\n    ternary r593 r586.block_height r618.block_height into r630;\n    ternary r593 r586.bonded_microcredits r618.bonded_microcredits into r631;\n    ternary r593 r586.microcredits_yield_per_epoch r618.microcredits_yield_per_epoch into r632;\n    ternary r593 r586.commission r618.commission into r633;\n    ternary r593 r586.boost r618.boost into r634;\n    cast r628 r629 r630 r631 r632 r633 r634 into r635 as validator_datum;\n    ternary r593 r589 r619 into r636;\n    ternary r592 r586.delegator r627.delegator into r637;\n    ternary r592 r586.validator r627.validator into r638;\n    ternary r592 r586.block_height r627.block_height into r639;\n    ternary r592 r586.bonded_microcredits r627.bonded_microcredits into r640;\n    ternary r592 r586.microcredits_yield_per_epoch r627.microcredits_yield_per_epoch into r641;\n    ternary r592 r586.commission r627.commission into r642;\n    ternary r592 r586.boost r627.boost into r643;\n    cast r637 r638 r639 r640 r641 r642 r643 into r644 as validator_datum;\n    ternary r592 r44.delegator r635.delegator into r645;\n    ternary r592 r44.validator r635.validator into r646;\n    ternary r592 r44.block_height r635.block_height into r647;\n    ternary r592 r44.bonded_microcredits r635.bonded_microcredits into r648;\n    ternary r592 r44.microcredits_yield_per_epoch r635.microcredits_yield_per_epoch into r649;\n    ternary r592 r44.commission r635.commission into r650;\n    ternary r592 r44.boost r635.boost into r651;\n    cast r645 r646 r647 r648 r649 r650 r651 into r652 as validator_datum;\n    ternary r592 r589 r636 into r653;\n    ternary r591 r44.delegator r644.delegator into r654;\n    ternary r591 r44.validator r644.validator into r655;\n    ternary r591 r44.block_height r644.block_height into r656;\n    ternary r591 r44.bonded_microcredits r644.bonded_microcredits into r657;\n    ternary r591 r44.microcredits_yield_per_epoch r644.microcredits_yield_per_epoch into r658;\n    ternary r591 r44.commission r644.commission into r659;\n    ternary r591 r44.boost r644.boost into r660;\n    cast r654 r655 r656 r657 r658 r659 r660 into r661 as validator_datum;\n    ternary r591 r586.delegator r652.delegator into r662;\n    ternary r591 r586.validator r652.validator into r663;\n    ternary r591 r586.block_height r652.block_height into r664;\n    ternary r591 r586.bonded_microcredits r652.bonded_microcredits into r665;\n    ternary r591 r586.microcredits_yield_per_epoch r652.microcredits_yield_per_epoch into r666;\n    ternary r591 r586.commission r652.commission into r667;\n    ternary r591 r586.boost r652.boost into r668;\n    cast r662 r663 r664 r665 r666 r667 r668 into r669 as validator_datum;\n    ternary r591 r589 r653 into r670;\n    ternary r590 r586.delegator r661.delegator into r671;\n    ternary r590 r586.validator r661.validator into r672;\n    ternary r590 r586.block_height r661.block_height into r673;\n    ternary r590 r586.bonded_microcredits r661.bonded_microcredits into r674;\n    ternary r590 r586.microcredits_yield_per_epoch r661.microcredits_yield_per_epoch into r675;\n    ternary r590 r586.commission r661.commission into r676;\n    ternary r590 r586.boost r661.boost into r677;\n    cast r671 r672 r673 r674 r675 r676 r677 into r678 as validator_datum;\n    ternary r590 r44.delegator r669.delegator into r679;\n    ternary r590 r44.validator r669.validator into r680;\n    ternary r590 r44.block_height r669.block_height into r681;\n    ternary r590 r44.bonded_microcredits r669.bonded_microcredits into r682;\n    ternary r590 r44.microcredits_yield_per_epoch r669.microcredits_yield_per_epoch into r683;\n    ternary r590 r44.commission r669.commission into r684;\n    ternary r590 r44.boost r669.boost into r685;\n    cast r679 r680 r681 r682 r683 r684 r685 into r686 as validator_datum;\n    ternary r590 r589 r670 into r687;\n    ternary r588 r586.delegator r678.delegator into r688;\n    ternary r588 r586.validator r678.validator into r689;\n    ternary r588 r586.block_height r678.block_height into r690;\n    ternary r588 r586.bonded_microcredits r678.bonded_microcredits into r691;\n    ternary r588 r586.microcredits_yield_per_epoch r678.microcredits_yield_per_epoch into r692;\n    ternary r588 r586.commission r678.commission into r693;\n    ternary r588 r586.boost r678.boost into r694;\n    cast r688 r689 r690 r691 r692 r693 r694 into r695 as validator_datum;\n    ternary r588 r44.delegator r686.delegator into r696;\n    ternary r588 r44.validator r686.validator into r697;\n    ternary r588 r44.block_height r686.block_height into r698;\n    ternary r588 r44.bonded_microcredits r686.bonded_microcredits into r699;\n    ternary r588 r44.microcredits_yield_per_epoch r686.microcredits_yield_per_epoch into r700;\n    ternary r588 r44.commission r686.commission into r701;\n    ternary r588 r44.boost r686.boost into r702;\n    cast r696 r697 r698 r699 r700 r701 r702 into r703 as validator_datum;\n    ternary r588 true r687 into r704;\n    ternary r587 r44.delegator r695.delegator into r705;\n    ternary r587 r44.validator r695.validator into r706;\n    ternary r587 r44.block_height r695.block_height into r707;\n    ternary r587 r44.bonded_microcredits r695.bonded_microcredits into r708;\n    ternary r587 r44.microcredits_yield_per_epoch r695.microcredits_yield_per_epoch into r709;\n    ternary r587 r44.commission r695.commission into r710;\n    ternary r587 r44.boost r695.boost into r711;\n    cast r705 r706 r707 r708 r709 r710 r711 into r712 as validator_datum;\n    ternary r587 r586.delegator r703.delegator into r713;\n    ternary r587 r586.validator r703.validator into r714;\n    ternary r587 r586.block_height r703.block_height into r715;\n    ternary r587 r586.bonded_microcredits r703.bonded_microcredits into r716;\n    ternary r587 r586.microcredits_yield_per_epoch r703.microcredits_yield_per_epoch into r717;\n    ternary r587 r586.commission r703.commission into r718;\n    ternary r587 r586.boost r703.boost into r719;\n    cast r713 r714 r715 r716 r717 r718 r719 into r720 as validator_datum;\n    ternary r587 true r704 into r721;\n    is.eq r720.delegator r45.delegator into r722;\n    is.eq r720.validator r45.validator into r723;\n    lt r45.block_height r50 into r724;\n    lt r720.block_height r50 into r725;\n    is.eq r45.microcredits_yield_per_epoch 0u128 into r726;\n    is.eq r720.microcredits_yield_per_epoch 0u128 into r727;\n    mul r720.boost 10_000u128 into r728;\n    div r728 r51[5u32] into r729;\n    add r720.microcredits_yield_per_epoch r729 into r730;\n    mul r45.boost 10_000u128 into r731;\n    div r731 r51[5u32] into r732;\n    add r45.microcredits_yield_per_epoch r732 into r733;\n    gt r730 r733 into r734;\n    lt r730 r733 into r735;\n    ternary r723 r734 r735 into r736;\n    ternary r736 r45.delegator r720.delegator into r737;\n    ternary r736 r45.validator r720.validator into r738;\n    ternary r736 r45.block_height r720.block_height into r739;\n    ternary r736 r45.bonded_microcredits r720.bonded_microcredits into r740;\n    ternary r736 r45.microcredits_yield_per_epoch r720.microcredits_yield_per_epoch into r741;\n    ternary r736 r45.commission r720.commission into r742;\n    ternary r736 r45.boost r720.boost into r743;\n    cast r737 r738 r739 r740 r741 r742 r743 into r744 as validator_datum;\n    ternary r736 r720.delegator r45.delegator into r745;\n    ternary r736 r720.validator r45.validator into r746;\n    ternary r736 r720.block_height r45.block_height into r747;\n    ternary r736 r720.bonded_microcredits r45.bonded_microcredits into r748;\n    ternary r736 r720.microcredits_yield_per_epoch r45.microcredits_yield_per_epoch into r749;\n    ternary r736 r720.commission r45.commission into r750;\n    ternary r736 r720.boost r45.boost into r751;\n    cast r745 r746 r747 r748 r749 r750 r751 into r752 as validator_datum;\n    ternary r736 r723 r723 into r753;\n    ternary r727 r45.delegator r744.delegator into r754;\n    ternary r727 r45.validator r744.validator into r755;\n    ternary r727 r45.block_height r744.block_height into r756;\n    ternary r727 r45.bonded_microcredits r744.bonded_microcredits into r757;\n    ternary r727 r45.microcredits_yield_per_epoch r744.microcredits_yield_per_epoch into r758;\n    ternary r727 r45.commission r744.commission into r759;\n    ternary r727 r45.boost r744.boost into r760;\n    cast r754 r755 r756 r757 r758 r759 r760 into r761 as validator_datum;\n    ternary r727 r720.delegator r752.delegator into r762;\n    ternary r727 r720.validator r752.validator into r763;\n    ternary r727 r720.block_height r752.block_height into r764;\n    ternary r727 r720.bonded_microcredits r752.bonded_microcredits into r765;\n    ternary r727 r720.microcredits_yield_per_epoch r752.microcredits_yield_per_epoch into r766;\n    ternary r727 r720.commission r752.commission into r767;\n    ternary r727 r720.boost r752.boost into r768;\n    cast r762 r763 r764 r765 r766 r767 r768 into r769 as validator_datum;\n    ternary r727 r723 r753 into r770;\n    ternary r726 r720.delegator r761.delegator into r771;\n    ternary r726 r720.validator r761.validator into r772;\n    ternary r726 r720.block_height r761.block_height into r773;\n    ternary r726 r720.bonded_microcredits r761.bonded_microcredits into r774;\n    ternary r726 r720.microcredits_yield_per_epoch r761.microcredits_yield_per_epoch into r775;\n    ternary r726 r720.commission r761.commission into r776;\n    ternary r726 r720.boost r761.boost into r777;\n    cast r771 r772 r773 r774 r775 r776 r777 into r778 as validator_datum;\n    ternary r726 r45.delegator r769.delegator into r779;\n    ternary r726 r45.validator r769.validator into r780;\n    ternary r726 r45.block_height r769.block_height into r781;\n    ternary r726 r45.bonded_microcredits r769.bonded_microcredits into r782;\n    ternary r726 r45.microcredits_yield_per_epoch r769.microcredits_yield_per_epoch into r783;\n    ternary r726 r45.commission r769.commission into r784;\n    ternary r726 r45.boost r769.boost into r785;\n    cast r779 r780 r781 r782 r783 r784 r785 into r786 as validator_datum;\n    ternary r726 r723 r770 into r787;\n    ternary r725 r45.delegator r778.delegator into r788;\n    ternary r725 r45.validator r778.validator into r789;\n    ternary r725 r45.block_height r778.block_height into r790;\n    ternary r725 r45.bonded_microcredits r778.bonded_microcredits into r791;\n    ternary r725 r45.microcredits_yield_per_epoch r778.microcredits_yield_per_epoch into r792;\n    ternary r725 r45.commission r778.commission into r793;\n    ternary r725 r45.boost r778.boost into r794;\n    cast r788 r789 r790 r791 r792 r793 r794 into r795 as validator_datum;\n    ternary r725 r720.delegator r786.delegator into r796;\n    ternary r725 r720.validator r786.validator into r797;\n    ternary r725 r720.block_height r786.block_height into r798;\n    ternary r725 r720.bonded_microcredits r786.bonded_microcredits into r799;\n    ternary r725 r720.microcredits_yield_per_epoch r786.microcredits_yield_per_epoch into r800;\n    ternary r725 r720.commission r786.commission into r801;\n    ternary r725 r720.boost r786.boost into r802;\n    cast r796 r797 r798 r799 r800 r801 r802 into r803 as validator_datum;\n    ternary r725 r723 r787 into r804;\n    ternary r724 r720.delegator r795.delegator into r805;\n    ternary r724 r720.validator r795.validator into r806;\n    ternary r724 r720.block_height r795.block_height into r807;\n    ternary r724 r720.bonded_microcredits r795.bonded_microcredits into r808;\n    ternary r724 r720.microcredits_yield_per_epoch r795.microcredits_yield_per_epoch into r809;\n    ternary r724 r720.commission r795.commission into r810;\n    ternary r724 r720.boost r795.boost into r811;\n    cast r805 r806 r807 r808 r809 r810 r811 into r812 as validator_datum;\n    ternary r724 r45.delegator r803.delegator into r813;\n    ternary r724 r45.validator r803.validator into r814;\n    ternary r724 r45.block_height r803.block_height into r815;\n    ternary r724 r45.bonded_microcredits r803.bonded_microcredits into r816;\n    ternary r724 r45.microcredits_yield_per_epoch r803.microcredits_yield_per_epoch into r817;\n    ternary r724 r45.commission r803.commission into r818;\n    ternary r724 r45.boost r803.boost into r819;\n    cast r813 r814 r815 r816 r817 r818 r819 into r820 as validator_datum;\n    ternary r724 r723 r804 into r821;\n    ternary r722 r720.delegator r812.delegator into r822;\n    ternary r722 r720.validator r812.validator into r823;\n    ternary r722 r720.block_height r812.block_height into r824;\n    ternary r722 r720.bonded_microcredits r812.bonded_microcredits into r825;\n    ternary r722 r720.microcredits_yield_per_epoch r812.microcredits_yield_per_epoch into r826;\n    ternary r722 r720.commission r812.commission into r827;\n    ternary r722 r720.boost r812.boost into r828;\n    cast r822 r823 r824 r825 r826 r827 r828 into r829 as validator_datum;\n    ternary r722 r45.delegator r820.delegator into r830;\n    ternary r722 r45.validator r820.validator into r831;\n    ternary r722 r45.block_height r820.block_height into r832;\n    ternary r722 r45.bonded_microcredits r820.bonded_microcredits into r833;\n    ternary r722 r45.microcredits_yield_per_epoch r820.microcredits_yield_per_epoch into r834;\n    ternary r722 r45.commission r820.commission into r835;\n    ternary r722 r45.boost r820.boost into r836;\n    cast r830 r831 r832 r833 r834 r835 r836 into r837 as validator_datum;\n    ternary r722 true r821 into r838;\n    ternary r721 r45.delegator r829.delegator into r839;\n    ternary r721 r45.validator r829.validator into r840;\n    ternary r721 r45.block_height r829.block_height into r841;\n    ternary r721 r45.bonded_microcredits r829.bonded_microcredits into r842;\n    ternary r721 r45.microcredits_yield_per_epoch r829.microcredits_yield_per_epoch into r843;\n    ternary r721 r45.commission r829.commission into r844;\n    ternary r721 r45.boost r829.boost into r845;\n    cast r839 r840 r841 r842 r843 r844 r845 into r846 as validator_datum;\n    ternary r721 r720.delegator r837.delegator into r847;\n    ternary r721 r720.validator r837.validator into r848;\n    ternary r721 r720.block_height r837.block_height into r849;\n    ternary r721 r720.bonded_microcredits r837.bonded_microcredits into r850;\n    ternary r721 r720.microcredits_yield_per_epoch r837.microcredits_yield_per_epoch into r851;\n    ternary r721 r720.commission r837.commission into r852;\n    ternary r721 r720.boost r837.boost into r853;\n    cast r847 r848 r849 r850 r851 r852 r853 into r854 as validator_datum;\n    ternary r721 true r838 into r855;\n    is.eq r854.delegator r46.delegator into r856;\n    is.eq r854.validator r46.validator into r857;\n    lt r46.block_height r50 into r858;\n    lt r854.block_height r50 into r859;\n    is.eq r46.microcredits_yield_per_epoch 0u128 into r860;\n    is.eq r854.microcredits_yield_per_epoch 0u128 into r861;\n    mul r854.boost 10_000u128 into r862;\n    div r862 r51[6u32] into r863;\n    add r854.microcredits_yield_per_epoch r863 into r864;\n    mul r46.boost 10_000u128 into r865;\n    div r865 r51[6u32] into r866;\n    add r46.microcredits_yield_per_epoch r866 into r867;\n    gt r864 r867 into r868;\n    lt r864 r867 into r869;\n    ternary r857 r868 r869 into r870;\n    ternary r870 r46.delegator r854.delegator into r871;\n    ternary r870 r46.validator r854.validator into r872;\n    ternary r870 r46.block_height r854.block_height into r873;\n    ternary r870 r46.bonded_microcredits r854.bonded_microcredits into r874;\n    ternary r870 r46.microcredits_yield_per_epoch r854.microcredits_yield_per_epoch into r875;\n    ternary r870 r46.commission r854.commission into r876;\n    ternary r870 r46.boost r854.boost into r877;\n    cast r871 r872 r873 r874 r875 r876 r877 into r878 as validator_datum;\n    ternary r870 r854.delegator r46.delegator into r879;\n    ternary r870 r854.validator r46.validator into r880;\n    ternary r870 r854.block_height r46.block_height into r881;\n    ternary r870 r854.bonded_microcredits r46.bonded_microcredits into r882;\n    ternary r870 r854.microcredits_yield_per_epoch r46.microcredits_yield_per_epoch into r883;\n    ternary r870 r854.commission r46.commission into r884;\n    ternary r870 r854.boost r46.boost into r885;\n    cast r879 r880 r881 r882 r883 r884 r885 into r886 as validator_datum;\n    ternary r870 r857 r857 into r887;\n    ternary r861 r46.delegator r878.delegator into r888;\n    ternary r861 r46.validator r878.validator into r889;\n    ternary r861 r46.block_height r878.block_height into r890;\n    ternary r861 r46.bonded_microcredits r878.bonded_microcredits into r891;\n    ternary r861 r46.microcredits_yield_per_epoch r878.microcredits_yield_per_epoch into r892;\n    ternary r861 r46.commission r878.commission into r893;\n    ternary r861 r46.boost r878.boost into r894;\n    cast r888 r889 r890 r891 r892 r893 r894 into r895 as validator_datum;\n    ternary r861 r854.delegator r886.delegator into r896;\n    ternary r861 r854.validator r886.validator into r897;\n    ternary r861 r854.block_height r886.block_height into r898;\n    ternary r861 r854.bonded_microcredits r886.bonded_microcredits into r899;\n    ternary r861 r854.microcredits_yield_per_epoch r886.microcredits_yield_per_epoch into r900;\n    ternary r861 r854.commission r886.commission into r901;\n    ternary r861 r854.boost r886.boost into r902;\n    cast r896 r897 r898 r899 r900 r901 r902 into r903 as validator_datum;\n    ternary r861 r857 r887 into r904;\n    ternary r860 r854.delegator r895.delegator into r905;\n    ternary r860 r854.validator r895.validator into r906;\n    ternary r860 r854.block_height r895.block_height into r907;\n    ternary r860 r854.bonded_microcredits r895.bonded_microcredits into r908;\n    ternary r860 r854.microcredits_yield_per_epoch r895.microcredits_yield_per_epoch into r909;\n    ternary r860 r854.commission r895.commission into r910;\n    ternary r860 r854.boost r895.boost into r911;\n    cast r905 r906 r907 r908 r909 r910 r911 into r912 as validator_datum;\n    ternary r860 r46.delegator r903.delegator into r913;\n    ternary r860 r46.validator r903.validator into r914;\n    ternary r860 r46.block_height r903.block_height into r915;\n    ternary r860 r46.bonded_microcredits r903.bonded_microcredits into r916;\n    ternary r860 r46.microcredits_yield_per_epoch r903.microcredits_yield_per_epoch into r917;\n    ternary r860 r46.commission r903.commission into r918;\n    ternary r860 r46.boost r903.boost into r919;\n    cast r913 r914 r915 r916 r917 r918 r919 into r920 as validator_datum;\n    ternary r860 r857 r904 into r921;\n    ternary r859 r46.delegator r912.delegator into r922;\n    ternary r859 r46.validator r912.validator into r923;\n    ternary r859 r46.block_height r912.block_height into r924;\n    ternary r859 r46.bonded_microcredits r912.bonded_microcredits into r925;\n    ternary r859 r46.microcredits_yield_per_epoch r912.microcredits_yield_per_epoch into r926;\n    ternary r859 r46.commission r912.commission into r927;\n    ternary r859 r46.boost r912.boost into r928;\n    cast r922 r923 r924 r925 r926 r927 r928 into r929 as validator_datum;\n    ternary r859 r854.delegator r920.delegator into r930;\n    ternary r859 r854.validator r920.validator into r931;\n    ternary r859 r854.block_height r920.block_height into r932;\n    ternary r859 r854.bonded_microcredits r920.bonded_microcredits into r933;\n    ternary r859 r854.microcredits_yield_per_epoch r920.microcredits_yield_per_epoch into r934;\n    ternary r859 r854.commission r920.commission into r935;\n    ternary r859 r854.boost r920.boost into r936;\n    cast r930 r931 r932 r933 r934 r935 r936 into r937 as validator_datum;\n    ternary r859 r857 r921 into r938;\n    ternary r858 r854.delegator r929.delegator into r939;\n    ternary r858 r854.validator r929.validator into r940;\n    ternary r858 r854.block_height r929.block_height into r941;\n    ternary r858 r854.bonded_microcredits r929.bonded_microcredits into r942;\n    ternary r858 r854.microcredits_yield_per_epoch r929.microcredits_yield_per_epoch into r943;\n    ternary r858 r854.commission r929.commission into r944;\n    ternary r858 r854.boost r929.boost into r945;\n    cast r939 r940 r941 r942 r943 r944 r945 into r946 as validator_datum;\n    ternary r858 r46.delegator r937.delegator into r947;\n    ternary r858 r46.validator r937.validator into r948;\n    ternary r858 r46.block_height r937.block_height into r949;\n    ternary r858 r46.bonded_microcredits r937.bonded_microcredits into r950;\n    ternary r858 r46.microcredits_yield_per_epoch r937.microcredits_yield_per_epoch into r951;\n    ternary r858 r46.commission r937.commission into r952;\n    ternary r858 r46.boost r937.boost into r953;\n    cast r947 r948 r949 r950 r951 r952 r953 into r954 as validator_datum;\n    ternary r858 r857 r938 into r955;\n    ternary r856 r854.delegator r946.delegator into r956;\n    ternary r856 r854.validator r946.validator into r957;\n    ternary r856 r854.block_height r946.block_height into r958;\n    ternary r856 r854.bonded_microcredits r946.bonded_microcredits into r959;\n    ternary r856 r854.microcredits_yield_per_epoch r946.microcredits_yield_per_epoch into r960;\n    ternary r856 r854.commission r946.commission into r961;\n    ternary r856 r854.boost r946.boost into r962;\n    cast r956 r957 r958 r959 r960 r961 r962 into r963 as validator_datum;\n    ternary r856 r46.delegator r954.delegator into r964;\n    ternary r856 r46.validator r954.validator into r965;\n    ternary r856 r46.block_height r954.block_height into r966;\n    ternary r856 r46.bonded_microcredits r954.bonded_microcredits into r967;\n    ternary r856 r46.microcredits_yield_per_epoch r954.microcredits_yield_per_epoch into r968;\n    ternary r856 r46.commission r954.commission into r969;\n    ternary r856 r46.boost r954.boost into r970;\n    cast r964 r965 r966 r967 r968 r969 r970 into r971 as validator_datum;\n    ternary r856 true r955 into r972;\n    ternary r855 r46.delegator r963.delegator into r973;\n    ternary r855 r46.validator r963.validator into r974;\n    ternary r855 r46.block_height r963.block_height into r975;\n    ternary r855 r46.bonded_microcredits r963.bonded_microcredits into r976;\n    ternary r855 r46.microcredits_yield_per_epoch r963.microcredits_yield_per_epoch into r977;\n    ternary r855 r46.commission r963.commission into r978;\n    ternary r855 r46.boost r963.boost into r979;\n    cast r973 r974 r975 r976 r977 r978 r979 into r980 as validator_datum;\n    ternary r855 r854.delegator r971.delegator into r981;\n    ternary r855 r854.validator r971.validator into r982;\n    ternary r855 r854.block_height r971.block_height into r983;\n    ternary r855 r854.bonded_microcredits r971.bonded_microcredits into r984;\n    ternary r855 r854.microcredits_yield_per_epoch r971.microcredits_yield_per_epoch into r985;\n    ternary r855 r854.commission r971.commission into r986;\n    ternary r855 r854.boost r971.boost into r987;\n    cast r981 r982 r983 r984 r985 r986 r987 into r988 as validator_datum;\n    ternary r855 true r972 into r989;\n    is.eq r988.delegator r47.delegator into r990;\n    is.eq r988.validator r47.validator into r991;\n    lt r47.block_height r50 into r992;\n    lt r988.block_height r50 into r993;\n    is.eq r47.microcredits_yield_per_epoch 0u128 into r994;\n    is.eq r988.microcredits_yield_per_epoch 0u128 into r995;\n    mul r988.boost 10_000u128 into r996;\n    div r996 r51[7u32] into r997;\n    add r988.microcredits_yield_per_epoch r997 into r998;\n    mul r47.boost 10_000u128 into r999;\n    div r999 r51[7u32] into r1000;\n    add r47.microcredits_yield_per_epoch r1000 into r1001;\n    gt r998 r1001 into r1002;\n    lt r998 r1001 into r1003;\n    ternary r991 r1002 r1003 into r1004;\n    ternary r1004 r47.delegator r988.delegator into r1005;\n    ternary r1004 r47.validator r988.validator into r1006;\n    ternary r1004 r47.block_height r988.block_height into r1007;\n    ternary r1004 r47.bonded_microcredits r988.bonded_microcredits into r1008;\n    ternary r1004 r47.microcredits_yield_per_epoch r988.microcredits_yield_per_epoch into r1009;\n    ternary r1004 r47.commission r988.commission into r1010;\n    ternary r1004 r47.boost r988.boost into r1011;\n    cast r1005 r1006 r1007 r1008 r1009 r1010 r1011 into r1012 as validator_datum;\n    ternary r1004 r988.delegator r47.delegator into r1013;\n    ternary r1004 r988.validator r47.validator into r1014;\n    ternary r1004 r988.block_height r47.block_height into r1015;\n    ternary r1004 r988.bonded_microcredits r47.bonded_microcredits into r1016;\n    ternary r1004 r988.microcredits_yield_per_epoch r47.microcredits_yield_per_epoch into r1017;\n    ternary r1004 r988.commission r47.commission into r1018;\n    ternary r1004 r988.boost r47.boost into r1019;\n    cast r1013 r1014 r1015 r1016 r1017 r1018 r1019 into r1020 as validator_datum;\n    ternary r1004 r991 r991 into r1021;\n    ternary r995 r47.delegator r1012.delegator into r1022;\n    ternary r995 r47.validator r1012.validator into r1023;\n    ternary r995 r47.block_height r1012.block_height into r1024;\n    ternary r995 r47.bonded_microcredits r1012.bonded_microcredits into r1025;\n    ternary r995 r47.microcredits_yield_per_epoch r1012.microcredits_yield_per_epoch into r1026;\n    ternary r995 r47.commission r1012.commission into r1027;\n    ternary r995 r47.boost r1012.boost into r1028;\n    cast r1022 r1023 r1024 r1025 r1026 r1027 r1028 into r1029 as validator_datum;\n    ternary r995 r988.delegator r1020.delegator into r1030;\n    ternary r995 r988.validator r1020.validator into r1031;\n    ternary r995 r988.block_height r1020.block_height into r1032;\n    ternary r995 r988.bonded_microcredits r1020.bonded_microcredits into r1033;\n    ternary r995 r988.microcredits_yield_per_epoch r1020.microcredits_yield_per_epoch into r1034;\n    ternary r995 r988.commission r1020.commission into r1035;\n    ternary r995 r988.boost r1020.boost into r1036;\n    cast r1030 r1031 r1032 r1033 r1034 r1035 r1036 into r1037 as validator_datum;\n    ternary r995 r991 r1021 into r1038;\n    ternary r994 r988.delegator r1029.delegator into r1039;\n    ternary r994 r988.validator r1029.validator into r1040;\n    ternary r994 r988.block_height r1029.block_height into r1041;\n    ternary r994 r988.bonded_microcredits r1029.bonded_microcredits into r1042;\n    ternary r994 r988.microcredits_yield_per_epoch r1029.microcredits_yield_per_epoch into r1043;\n    ternary r994 r988.commission r1029.commission into r1044;\n    ternary r994 r988.boost r1029.boost into r1045;\n    cast r1039 r1040 r1041 r1042 r1043 r1044 r1045 into r1046 as validator_datum;\n    ternary r994 r47.delegator r1037.delegator into r1047;\n    ternary r994 r47.validator r1037.validator into r1048;\n    ternary r994 r47.block_height r1037.block_height into r1049;\n    ternary r994 r47.bonded_microcredits r1037.bonded_microcredits into r1050;\n    ternary r994 r47.microcredits_yield_per_epoch r1037.microcredits_yield_per_epoch into r1051;\n    ternary r994 r47.commission r1037.commission into r1052;\n    ternary r994 r47.boost r1037.boost into r1053;\n    cast r1047 r1048 r1049 r1050 r1051 r1052 r1053 into r1054 as validator_datum;\n    ternary r994 r991 r1038 into r1055;\n    ternary r993 r47.delegator r1046.delegator into r1056;\n    ternary r993 r47.validator r1046.validator into r1057;\n    ternary r993 r47.block_height r1046.block_height into r1058;\n    ternary r993 r47.bonded_microcredits r1046.bonded_microcredits into r1059;\n    ternary r993 r47.microcredits_yield_per_epoch r1046.microcredits_yield_per_epoch into r1060;\n    ternary r993 r47.commission r1046.commission into r1061;\n    ternary r993 r47.boost r1046.boost into r1062;\n    cast r1056 r1057 r1058 r1059 r1060 r1061 r1062 into r1063 as validator_datum;\n    ternary r993 r988.delegator r1054.delegator into r1064;\n    ternary r993 r988.validator r1054.validator into r1065;\n    ternary r993 r988.block_height r1054.block_height into r1066;\n    ternary r993 r988.bonded_microcredits r1054.bonded_microcredits into r1067;\n    ternary r993 r988.microcredits_yield_per_epoch r1054.microcredits_yield_per_epoch into r1068;\n    ternary r993 r988.commission r1054.commission into r1069;\n    ternary r993 r988.boost r1054.boost into r1070;\n    cast r1064 r1065 r1066 r1067 r1068 r1069 r1070 into r1071 as validator_datum;\n    ternary r993 r991 r1055 into r1072;\n    ternary r992 r988.delegator r1063.delegator into r1073;\n    ternary r992 r988.validator r1063.validator into r1074;\n    ternary r992 r988.block_height r1063.block_height into r1075;\n    ternary r992 r988.bonded_microcredits r1063.bonded_microcredits into r1076;\n    ternary r992 r988.microcredits_yield_per_epoch r1063.microcredits_yield_per_epoch into r1077;\n    ternary r992 r988.commission r1063.commission into r1078;\n    ternary r992 r988.boost r1063.boost into r1079;\n    cast r1073 r1074 r1075 r1076 r1077 r1078 r1079 into r1080 as validator_datum;\n    ternary r992 r47.delegator r1071.delegator into r1081;\n    ternary r992 r47.validator r1071.validator into r1082;\n    ternary r992 r47.block_height r1071.block_height into r1083;\n    ternary r992 r47.bonded_microcredits r1071.bonded_microcredits into r1084;\n    ternary r992 r47.microcredits_yield_per_epoch r1071.microcredits_yield_per_epoch into r1085;\n    ternary r992 r47.commission r1071.commission into r1086;\n    ternary r992 r47.boost r1071.boost into r1087;\n    cast r1081 r1082 r1083 r1084 r1085 r1086 r1087 into r1088 as validator_datum;\n    ternary r992 r991 r1072 into r1089;\n    ternary r990 r988.delegator r1080.delegator into r1090;\n    ternary r990 r988.validator r1080.validator into r1091;\n    ternary r990 r988.block_height r1080.block_height into r1092;\n    ternary r990 r988.bonded_microcredits r1080.bonded_microcredits into r1093;\n    ternary r990 r988.microcredits_yield_per_epoch r1080.microcredits_yield_per_epoch into r1094;\n    ternary r990 r988.commission r1080.commission into r1095;\n    ternary r990 r988.boost r1080.boost into r1096;\n    cast r1090 r1091 r1092 r1093 r1094 r1095 r1096 into r1097 as validator_datum;\n    ternary r990 r47.delegator r1088.delegator into r1098;\n    ternary r990 r47.validator r1088.validator into r1099;\n    ternary r990 r47.block_height r1088.block_height into r1100;\n    ternary r990 r47.bonded_microcredits r1088.bonded_microcredits into r1101;\n    ternary r990 r47.microcredits_yield_per_epoch r1088.microcredits_yield_per_epoch into r1102;\n    ternary r990 r47.commission r1088.commission into r1103;\n    ternary r990 r47.boost r1088.boost into r1104;\n    cast r1098 r1099 r1100 r1101 r1102 r1103 r1104 into r1105 as validator_datum;\n    ternary r990 true r1089 into r1106;\n    ternary r989 r47.delegator r1097.delegator into r1107;\n    ternary r989 r47.validator r1097.validator into r1108;\n    ternary r989 r47.block_height r1097.block_height into r1109;\n    ternary r989 r47.bonded_microcredits r1097.bonded_microcredits into r1110;\n    ternary r989 r47.microcredits_yield_per_epoch r1097.microcredits_yield_per_epoch into r1111;\n    ternary r989 r47.commission r1097.commission into r1112;\n    ternary r989 r47.boost r1097.boost into r1113;\n    cast r1107 r1108 r1109 r1110 r1111 r1112 r1113 into r1114 as validator_datum;\n    ternary r989 r988.delegator r1105.delegator into r1115;\n    ternary r989 r988.validator r1105.validator into r1116;\n    ternary r989 r988.block_height r1105.block_height into r1117;\n    ternary r989 r988.bonded_microcredits r1105.bonded_microcredits into r1118;\n    ternary r989 r988.microcredits_yield_per_epoch r1105.microcredits_yield_per_epoch into r1119;\n    ternary r989 r988.commission r1105.commission into r1120;\n    ternary r989 r988.boost r1105.boost into r1121;\n    cast r1115 r1116 r1117 r1118 r1119 r1120 r1121 into r1122 as validator_datum;\n    ternary r989 true r1106 into r1123;\n    is.eq r1122.delegator r48.delegator into r1124;\n    is.eq r1122.validator r48.validator into r1125;\n    lt r48.block_height r50 into r1126;\n    lt r1122.block_height r50 into r1127;\n    is.eq r48.microcredits_yield_per_epoch 0u128 into r1128;\n    is.eq r1122.microcredits_yield_per_epoch 0u128 into r1129;\n    mul r1122.boost 10_000u128 into r1130;\n    div r1130 r51[8u32] into r1131;\n    add r1122.microcredits_yield_per_epoch r1131 into r1132;\n    mul r48.boost 10_000u128 into r1133;\n    div r1133 r51[8u32] into r1134;\n    add r48.microcredits_yield_per_epoch r1134 into r1135;\n    gt r1132 r1135 into r1136;\n    lt r1132 r1135 into r1137;\n    ternary r1125 r1136 r1137 into r1138;\n    ternary r1138 r48.delegator r1122.delegator into r1139;\n    ternary r1138 r48.validator r1122.validator into r1140;\n    ternary r1138 r48.block_height r1122.block_height into r1141;\n    ternary r1138 r48.bonded_microcredits r1122.bonded_microcredits into r1142;\n    ternary r1138 r48.microcredits_yield_per_epoch r1122.microcredits_yield_per_epoch into r1143;\n    ternary r1138 r48.commission r1122.commission into r1144;\n    ternary r1138 r48.boost r1122.boost into r1145;\n    cast r1139 r1140 r1141 r1142 r1143 r1144 r1145 into r1146 as validator_datum;\n    ternary r1138 r1122.delegator r48.delegator into r1147;\n    ternary r1138 r1122.validator r48.validator into r1148;\n    ternary r1138 r1122.block_height r48.block_height into r1149;\n    ternary r1138 r1122.bonded_microcredits r48.bonded_microcredits into r1150;\n    ternary r1138 r1122.microcredits_yield_per_epoch r48.microcredits_yield_per_epoch into r1151;\n    ternary r1138 r1122.commission r48.commission into r1152;\n    ternary r1138 r1122.boost r48.boost into r1153;\n    cast r1147 r1148 r1149 r1150 r1151 r1152 r1153 into r1154 as validator_datum;\n    ternary r1138 r1125 r1125 into r1155;\n    ternary r1129 r48.delegator r1146.delegator into r1156;\n    ternary r1129 r48.validator r1146.validator into r1157;\n    ternary r1129 r48.block_height r1146.block_height into r1158;\n    ternary r1129 r48.bonded_microcredits r1146.bonded_microcredits into r1159;\n    ternary r1129 r48.microcredits_yield_per_epoch r1146.microcredits_yield_per_epoch into r1160;\n    ternary r1129 r48.commission r1146.commission into r1161;\n    ternary r1129 r48.boost r1146.boost into r1162;\n    cast r1156 r1157 r1158 r1159 r1160 r1161 r1162 into r1163 as validator_datum;\n    ternary r1129 r1122.delegator r1154.delegator into r1164;\n    ternary r1129 r1122.validator r1154.validator into r1165;\n    ternary r1129 r1122.block_height r1154.block_height into r1166;\n    ternary r1129 r1122.bonded_microcredits r1154.bonded_microcredits into r1167;\n    ternary r1129 r1122.microcredits_yield_per_epoch r1154.microcredits_yield_per_epoch into r1168;\n    ternary r1129 r1122.commission r1154.commission into r1169;\n    ternary r1129 r1122.boost r1154.boost into r1170;\n    cast r1164 r1165 r1166 r1167 r1168 r1169 r1170 into r1171 as validator_datum;\n    ternary r1129 r1125 r1155 into r1172;\n    ternary r1128 r1122.delegator r1163.delegator into r1173;\n    ternary r1128 r1122.validator r1163.validator into r1174;\n    ternary r1128 r1122.block_height r1163.block_height into r1175;\n    ternary r1128 r1122.bonded_microcredits r1163.bonded_microcredits into r1176;\n    ternary r1128 r1122.microcredits_yield_per_epoch r1163.microcredits_yield_per_epoch into r1177;\n    ternary r1128 r1122.commission r1163.commission into r1178;\n    ternary r1128 r1122.boost r1163.boost into r1179;\n    cast r1173 r1174 r1175 r1176 r1177 r1178 r1179 into r1180 as validator_datum;\n    ternary r1128 r48.delegator r1171.delegator into r1181;\n    ternary r1128 r48.validator r1171.validator into r1182;\n    ternary r1128 r48.block_height r1171.block_height into r1183;\n    ternary r1128 r48.bonded_microcredits r1171.bonded_microcredits into r1184;\n    ternary r1128 r48.microcredits_yield_per_epoch r1171.microcredits_yield_per_epoch into r1185;\n    ternary r1128 r48.commission r1171.commission into r1186;\n    ternary r1128 r48.boost r1171.boost into r1187;\n    cast r1181 r1182 r1183 r1184 r1185 r1186 r1187 into r1188 as validator_datum;\n    ternary r1128 r1125 r1172 into r1189;\n    ternary r1127 r48.delegator r1180.delegator into r1190;\n    ternary r1127 r48.validator r1180.validator into r1191;\n    ternary r1127 r48.block_height r1180.block_height into r1192;\n    ternary r1127 r48.bonded_microcredits r1180.bonded_microcredits into r1193;\n    ternary r1127 r48.microcredits_yield_per_epoch r1180.microcredits_yield_per_epoch into r1194;\n    ternary r1127 r48.commission r1180.commission into r1195;\n    ternary r1127 r48.boost r1180.boost into r1196;\n    cast r1190 r1191 r1192 r1193 r1194 r1195 r1196 into r1197 as validator_datum;\n    ternary r1127 r1122.delegator r1188.delegator into r1198;\n    ternary r1127 r1122.validator r1188.validator into r1199;\n    ternary r1127 r1122.block_height r1188.block_height into r1200;\n    ternary r1127 r1122.bonded_microcredits r1188.bonded_microcredits into r1201;\n    ternary r1127 r1122.microcredits_yield_per_epoch r1188.microcredits_yield_per_epoch into r1202;\n    ternary r1127 r1122.commission r1188.commission into r1203;\n    ternary r1127 r1122.boost r1188.boost into r1204;\n    cast r1198 r1199 r1200 r1201 r1202 r1203 r1204 into r1205 as validator_datum;\n    ternary r1127 r1125 r1189 into r1206;\n    ternary r1126 r1122.delegator r1197.delegator into r1207;\n    ternary r1126 r1122.validator r1197.validator into r1208;\n    ternary r1126 r1122.block_height r1197.block_height into r1209;\n    ternary r1126 r1122.bonded_microcredits r1197.bonded_microcredits into r1210;\n    ternary r1126 r1122.microcredits_yield_per_epoch r1197.microcredits_yield_per_epoch into r1211;\n    ternary r1126 r1122.commission r1197.commission into r1212;\n    ternary r1126 r1122.boost r1197.boost into r1213;\n    cast r1207 r1208 r1209 r1210 r1211 r1212 r1213 into r1214 as validator_datum;\n    ternary r1126 r48.delegator r1205.delegator into r1215;\n    ternary r1126 r48.validator r1205.validator into r1216;\n    ternary r1126 r48.block_height r1205.block_height into r1217;\n    ternary r1126 r48.bonded_microcredits r1205.bonded_microcredits into r1218;\n    ternary r1126 r48.microcredits_yield_per_epoch r1205.microcredits_yield_per_epoch into r1219;\n    ternary r1126 r48.commission r1205.commission into r1220;\n    ternary r1126 r48.boost r1205.boost into r1221;\n    cast r1215 r1216 r1217 r1218 r1219 r1220 r1221 into r1222 as validator_datum;\n    ternary r1126 r1125 r1206 into r1223;\n    ternary r1124 r1122.delegator r1214.delegator into r1224;\n    ternary r1124 r1122.validator r1214.validator into r1225;\n    ternary r1124 r1122.block_height r1214.block_height into r1226;\n    ternary r1124 r1122.bonded_microcredits r1214.bonded_microcredits into r1227;\n    ternary r1124 r1122.microcredits_yield_per_epoch r1214.microcredits_yield_per_epoch into r1228;\n    ternary r1124 r1122.commission r1214.commission into r1229;\n    ternary r1124 r1122.boost r1214.boost into r1230;\n    cast r1224 r1225 r1226 r1227 r1228 r1229 r1230 into r1231 as validator_datum;\n    ternary r1124 r48.delegator r1222.delegator into r1232;\n    ternary r1124 r48.validator r1222.validator into r1233;\n    ternary r1124 r48.block_height r1222.block_height into r1234;\n    ternary r1124 r48.bonded_microcredits r1222.bonded_microcredits into r1235;\n    ternary r1124 r48.microcredits_yield_per_epoch r1222.microcredits_yield_per_epoch into r1236;\n    ternary r1124 r48.commission r1222.commission into r1237;\n    ternary r1124 r48.boost r1222.boost into r1238;\n    cast r1232 r1233 r1234 r1235 r1236 r1237 r1238 into r1239 as validator_datum;\n    ternary r1124 true r1223 into r1240;\n    ternary r1123 r48.delegator r1231.delegator into r1241;\n    ternary r1123 r48.validator r1231.validator into r1242;\n    ternary r1123 r48.block_height r1231.block_height into r1243;\n    ternary r1123 r48.bonded_microcredits r1231.bonded_microcredits into r1244;\n    ternary r1123 r48.microcredits_yield_per_epoch r1231.microcredits_yield_per_epoch into r1245;\n    ternary r1123 r48.commission r1231.commission into r1246;\n    ternary r1123 r48.boost r1231.boost into r1247;\n    cast r1241 r1242 r1243 r1244 r1245 r1246 r1247 into r1248 as validator_datum;\n    ternary r1123 r1122.delegator r1239.delegator into r1249;\n    ternary r1123 r1122.validator r1239.validator into r1250;\n    ternary r1123 r1122.block_height r1239.block_height into r1251;\n    ternary r1123 r1122.bonded_microcredits r1239.bonded_microcredits into r1252;\n    ternary r1123 r1122.microcredits_yield_per_epoch r1239.microcredits_yield_per_epoch into r1253;\n    ternary r1123 r1122.commission r1239.commission into r1254;\n    ternary r1123 r1122.boost r1239.boost into r1255;\n    cast r1249 r1250 r1251 r1252 r1253 r1254 r1255 into r1256 as validator_datum;\n    ternary r1123 true r1240 into r1257;\n    is.eq r1256.delegator r49.delegator into r1258;\n    is.eq r1256.validator r49.validator into r1259;\n    lt r49.block_height r50 into r1260;\n    lt r1256.block_height r50 into r1261;\n    is.eq r49.microcredits_yield_per_epoch 0u128 into r1262;\n    is.eq r1256.microcredits_yield_per_epoch 0u128 into r1263;\n    mul r1256.boost 10_000u128 into r1264;\n    div r1264 r51[9u32] into r1265;\n    add r1256.microcredits_yield_per_epoch r1265 into r1266;\n    mul r49.boost 10_000u128 into r1267;\n    div r1267 r51[9u32] into r1268;\n    add r49.microcredits_yield_per_epoch r1268 into r1269;\n    gt r1266 r1269 into r1270;\n    lt r1266 r1269 into r1271;\n    ternary r1259 r1270 r1271 into r1272;\n    ternary r1272 r49.delegator r1256.delegator into r1273;\n    ternary r1272 r49.validator r1256.validator into r1274;\n    ternary r1272 r49.block_height r1256.block_height into r1275;\n    ternary r1272 r49.bonded_microcredits r1256.bonded_microcredits into r1276;\n    ternary r1272 r49.microcredits_yield_per_epoch r1256.microcredits_yield_per_epoch into r1277;\n    ternary r1272 r49.commission r1256.commission into r1278;\n    ternary r1272 r49.boost r1256.boost into r1279;\n    cast r1273 r1274 r1275 r1276 r1277 r1278 r1279 into r1280 as validator_datum;\n    ternary r1272 r1256.delegator r49.delegator into r1281;\n    ternary r1272 r1256.validator r49.validator into r1282;\n    ternary r1272 r1256.block_height r49.block_height into r1283;\n    ternary r1272 r1256.bonded_microcredits r49.bonded_microcredits into r1284;\n    ternary r1272 r1256.microcredits_yield_per_epoch r49.microcredits_yield_per_epoch into r1285;\n    ternary r1272 r1256.commission r49.commission into r1286;\n    ternary r1272 r1256.boost r49.boost into r1287;\n    cast r1281 r1282 r1283 r1284 r1285 r1286 r1287 into r1288 as validator_datum;\n    ternary r1272 r1259 r1259 into r1289;\n    ternary r1263 r49.delegator r1280.delegator into r1290;\n    ternary r1263 r49.validator r1280.validator into r1291;\n    ternary r1263 r49.block_height r1280.block_height into r1292;\n    ternary r1263 r49.bonded_microcredits r1280.bonded_microcredits into r1293;\n    ternary r1263 r49.microcredits_yield_per_epoch r1280.microcredits_yield_per_epoch into r1294;\n    ternary r1263 r49.commission r1280.commission into r1295;\n    ternary r1263 r49.boost r1280.boost into r1296;\n    cast r1290 r1291 r1292 r1293 r1294 r1295 r1296 into r1297 as validator_datum;\n    ternary r1263 r1256.delegator r1288.delegator into r1298;\n    ternary r1263 r1256.validator r1288.validator into r1299;\n    ternary r1263 r1256.block_height r1288.block_height into r1300;\n    ternary r1263 r1256.bonded_microcredits r1288.bonded_microcredits into r1301;\n    ternary r1263 r1256.microcredits_yield_per_epoch r1288.microcredits_yield_per_epoch into r1302;\n    ternary r1263 r1256.commission r1288.commission into r1303;\n    ternary r1263 r1256.boost r1288.boost into r1304;\n    cast r1298 r1299 r1300 r1301 r1302 r1303 r1304 into r1305 as validator_datum;\n    ternary r1263 r1259 r1289 into r1306;\n    ternary r1262 r1256.delegator r1297.delegator into r1307;\n    ternary r1262 r1256.validator r1297.validator into r1308;\n    ternary r1262 r1256.block_height r1297.block_height into r1309;\n    ternary r1262 r1256.bonded_microcredits r1297.bonded_microcredits into r1310;\n    ternary r1262 r1256.microcredits_yield_per_epoch r1297.microcredits_yield_per_epoch into r1311;\n    ternary r1262 r1256.commission r1297.commission into r1312;\n    ternary r1262 r1256.boost r1297.boost into r1313;\n    cast r1307 r1308 r1309 r1310 r1311 r1312 r1313 into r1314 as validator_datum;\n    ternary r1262 r49.delegator r1305.delegator into r1315;\n    ternary r1262 r49.validator r1305.validator into r1316;\n    ternary r1262 r49.block_height r1305.block_height into r1317;\n    ternary r1262 r49.bonded_microcredits r1305.bonded_microcredits into r1318;\n    ternary r1262 r49.microcredits_yield_per_epoch r1305.microcredits_yield_per_epoch into r1319;\n    ternary r1262 r49.commission r1305.commission into r1320;\n    ternary r1262 r49.boost r1305.boost into r1321;\n    cast r1315 r1316 r1317 r1318 r1319 r1320 r1321 into r1322 as validator_datum;\n    ternary r1262 r1259 r1306 into r1323;\n    ternary r1261 r49.delegator r1314.delegator into r1324;\n    ternary r1261 r49.validator r1314.validator into r1325;\n    ternary r1261 r49.block_height r1314.block_height into r1326;\n    ternary r1261 r49.bonded_microcredits r1314.bonded_microcredits into r1327;\n    ternary r1261 r49.microcredits_yield_per_epoch r1314.microcredits_yield_per_epoch into r1328;\n    ternary r1261 r49.commission r1314.commission into r1329;\n    ternary r1261 r49.boost r1314.boost into r1330;\n    cast r1324 r1325 r1326 r1327 r1328 r1329 r1330 into r1331 as validator_datum;\n    ternary r1261 r1256.delegator r1322.delegator into r1332;\n    ternary r1261 r1256.validator r1322.validator into r1333;\n    ternary r1261 r1256.block_height r1322.block_height into r1334;\n    ternary r1261 r1256.bonded_microcredits r1322.bonded_microcredits into r1335;\n    ternary r1261 r1256.microcredits_yield_per_epoch r1322.microcredits_yield_per_epoch into r1336;\n    ternary r1261 r1256.commission r1322.commission into r1337;\n    ternary r1261 r1256.boost r1322.boost into r1338;\n    cast r1332 r1333 r1334 r1335 r1336 r1337 r1338 into r1339 as validator_datum;\n    ternary r1261 r1259 r1323 into r1340;\n    ternary r1260 r1256.delegator r1331.delegator into r1341;\n    ternary r1260 r1256.validator r1331.validator into r1342;\n    ternary r1260 r1256.block_height r1331.block_height into r1343;\n    ternary r1260 r1256.bonded_microcredits r1331.bonded_microcredits into r1344;\n    ternary r1260 r1256.microcredits_yield_per_epoch r1331.microcredits_yield_per_epoch into r1345;\n    ternary r1260 r1256.commission r1331.commission into r1346;\n    ternary r1260 r1256.boost r1331.boost into r1347;\n    cast r1341 r1342 r1343 r1344 r1345 r1346 r1347 into r1348 as validator_datum;\n    ternary r1260 r49.delegator r1339.delegator into r1349;\n    ternary r1260 r49.validator r1339.validator into r1350;\n    ternary r1260 r49.block_height r1339.block_height into r1351;\n    ternary r1260 r49.bonded_microcredits r1339.bonded_microcredits into r1352;\n    ternary r1260 r49.microcredits_yield_per_epoch r1339.microcredits_yield_per_epoch into r1353;\n    ternary r1260 r49.commission r1339.commission into r1354;\n    ternary r1260 r49.boost r1339.boost into r1355;\n    cast r1349 r1350 r1351 r1352 r1353 r1354 r1355 into r1356 as validator_datum;\n    ternary r1260 r1259 r1340 into r1357;\n    ternary r1258 r1256.delegator r1348.delegator into r1358;\n    ternary r1258 r1256.validator r1348.validator into r1359;\n    ternary r1258 r1256.block_height r1348.block_height into r1360;\n    ternary r1258 r1256.bonded_microcredits r1348.bonded_microcredits into r1361;\n    ternary r1258 r1256.microcredits_yield_per_epoch r1348.microcredits_yield_per_epoch into r1362;\n    ternary r1258 r1256.commission r1348.commission into r1363;\n    ternary r1258 r1256.boost r1348.boost into r1364;\n    cast r1358 r1359 r1360 r1361 r1362 r1363 r1364 into r1365 as validator_datum;\n    ternary r1258 r49.delegator r1356.delegator into r1366;\n    ternary r1258 r49.validator r1356.validator into r1367;\n    ternary r1258 r49.block_height r1356.block_height into r1368;\n    ternary r1258 r49.bonded_microcredits r1356.bonded_microcredits into r1369;\n    ternary r1258 r49.microcredits_yield_per_epoch r1356.microcredits_yield_per_epoch into r1370;\n    ternary r1258 r49.commission r1356.commission into r1371;\n    ternary r1258 r49.boost r1356.boost into r1372;\n    cast r1366 r1367 r1368 r1369 r1370 r1371 r1372 into r1373 as validator_datum;\n    ternary r1258 true r1357 into r1374;\n    ternary r1257 r49.delegator r1365.delegator into r1375;\n    ternary r1257 r49.validator r1365.validator into r1376;\n    ternary r1257 r49.block_height r1365.block_height into r1377;\n    ternary r1257 r49.bonded_microcredits r1365.bonded_microcredits into r1378;\n    ternary r1257 r49.microcredits_yield_per_epoch r1365.microcredits_yield_per_epoch into r1379;\n    ternary r1257 r49.commission r1365.commission into r1380;\n    ternary r1257 r49.boost r1365.boost into r1381;\n    cast r1375 r1376 r1377 r1378 r1379 r1380 r1381 into r1382 as validator_datum;\n    ternary r1257 r1256.delegator r1373.delegator into r1383;\n    ternary r1257 r1256.validator r1373.validator into r1384;\n    ternary r1257 r1256.block_height r1373.block_height into r1385;\n    ternary r1257 r1256.bonded_microcredits r1373.bonded_microcredits into r1386;\n    ternary r1257 r1256.microcredits_yield_per_epoch r1373.microcredits_yield_per_epoch into r1387;\n    ternary r1257 r1256.commission r1373.commission into r1388;\n    ternary r1257 r1256.boost r1373.boost into r1389;\n    cast r1383 r1384 r1385 r1386 r1387 r1388 r1389 into r1390 as validator_datum;\n    ternary r1257 true r1374 into r1391;\n    cast  r176.delegator r310.delegator r444.delegator r578.delegator r712.delegator r846.delegator r980.delegator r1114.delegator r1248.delegator r1382.delegator into r1392 as [address; 10u32];\n    set r1392 into top_validators[0u8];\n\n\n\n\n\n\nfunction remove_delegator:\n    async remove_delegator self.caller into r0;\n    output r0 as pondo_oracle.aleo/remove_delegator.future;\n\nfinalize remove_delegator:\n    input r0 as address.public;\n    rem block.height 120_960u32 into r1;\n    lt r1 103_680u32 into r2;\n    assert.eq r2 true;\n    contains delegator_to_validator[r0] into r3;\n    branch.eq r3 false to end_then_0_0;\n    remove delegator_to_validator[r0];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    position end_otherwise_0_1;\n    contains validator_data[r0] into r4;\n    branch.eq r4 false to end_then_0_2;\n    remove validator_data[r0];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    position end_otherwise_0_3;\n    get top_validators[0u8] into r5;\n    is.eq r5[0u32] r0 into r6;\n    ternary r6 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[0u32] into r7;\n    is.eq r5[1u32] r0 into r8;\n    ternary r8 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[1u32] into r9;\n    is.eq r5[2u32] r0 into r10;\n    ternary r10 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[2u32] into r11;\n    is.eq r5[3u32] r0 into r12;\n    ternary r12 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[3u32] into r13;\n    is.eq r5[4u32] r0 into r14;\n    ternary r14 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[4u32] into r15;\n    is.eq r5[5u32] r0 into r16;\n    ternary r16 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[5u32] into r17;\n    is.eq r5[6u32] r0 into r18;\n    ternary r18 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[6u32] into r19;\n    is.eq r5[7u32] r0 into r20;\n    ternary r20 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[7u32] into r21;\n    is.eq r5[8u32] r0 into r22;\n    ternary r22 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[8u32] into r23;\n    is.eq r5[9u32] r0 into r24;\n    ternary r24 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc r5[9u32] into r25;\n    is.eq r7 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r26;\n    ternary r26 r9 r7 into r27;\n    ternary r26 r7 r9 into r28;\n    is.eq r28 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r29;\n    ternary r29 r11 r28 into r30;\n    ternary r29 r28 r11 into r31;\n    is.eq r31 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r32;\n    ternary r32 r13 r31 into r33;\n    ternary r32 r31 r13 into r34;\n    is.eq r34 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r35;\n    ternary r35 r15 r34 into r36;\n    ternary r35 r34 r15 into r37;\n    is.eq r37 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r38;\n    ternary r38 r17 r37 into r39;\n    ternary r38 r37 r17 into r40;\n    is.eq r40 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r41;\n    ternary r41 r19 r40 into r42;\n    ternary r41 r40 r19 into r43;\n    is.eq r43 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r44;\n    ternary r44 r21 r43 into r45;\n    ternary r44 r43 r21 into r46;\n    is.eq r46 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r47;\n    ternary r47 r23 r46 into r48;\n    ternary r47 r46 r23 into r49;\n    is.eq r49 aleo1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq3ljyzc into r50;\n    ternary r50 r25 r49 into r51;\n    ternary r50 r49 r25 into r52;\n    cast  r27 r30 r33 r36 r39 r42 r45 r48 r51 r52 into r53 as [address; 10u32];\n    set r53 into top_validators[0u8];\n\n\n\n\nfunction pondo_ban_validator:\n    input r0 as address.public;\n    async pondo_ban_validator r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/pondo_ban_validator.future;\n\nfinalize pondo_ban_validator:\n    input r0 as address.public;\n    input r1 as address.public;\n    contains control_addresses[r1] into r2;\n    assert.eq r2 true;\n    set true into banned_validators[r0];\n\n\n\n\nfunction ban_validator:\n    input r0 as address.public;\n    async ban_validator r0 into r1;\n    output r1 as pondo_oracle.aleo/ban_validator.future;\n\nfinalize ban_validator:\n    input r0 as address.public;\n    get delegator_to_validator[r0] into r1;\n    rem block.height 120_960u32 into r2;\n    gte r2 103_680u32 into r3;\n    assert.eq r3 true;\n    add 50u8 1u8 into r4;\n    cast false r4 into r5 as committee_state;\n    get.or_use credits.aleo/committee[r1] r5 into r6;\n    not r6.is_open into r7;\n    gt r6.commission 50u8 into r8;\n    or r7 r8 into r9;\n    assert.eq r9 true;\n    set true into banned_validators[r1];\n\n\n\n\nfunction set_pondo_tvl:\n    input r0 as u64.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_pondo_tvl r0 into r1;\n    output r1 as pondo_oracle.aleo/set_pondo_tvl.future;\n\nfinalize set_pondo_tvl:\n    input r0 as u64.public;\n    set r0 into pondo_tvl[0u8];\n\n\n\n\nfunction ban_self:\n    input r0 as address.private;\n    async ban_self r0 self.caller into r1;\n    output r1 as pondo_oracle.aleo/ban_self.future;\n\nfinalize ban_self:\n    input r0 as address.public;\n    input r1 as address.public;\n    get credits.aleo/withdraw[r0] into r2;\n    assert.eq r2 r1;\n    contains credits.aleo/committee[r0] into r3;\n    assert.eq r3 true;\n    set true into banned_validators[r0];\n\n\n\n\nfunction boost_validator:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/transfer_public_as_signer pondo_core_protocol.aleo r1 into r2;\n    async boost_validator r2 r0 r1 into r3;\n    output r3 as pondo_oracle.aleo/boost_validator.future;\n\nfinalize boost_validator:\n    input r0 as credits.aleo/transfer_public_as_signer.future;\n    input r1 as address.public;\n    input r2 as u64.public;\n    await r0;\n    div block.height 120_960u32 into r3;\n    rem block.height 120_960u32 into r4;\n    gte r4 103_680u32 into r5;\n    not r5 into r6;\n    assert.eq r6 true;\n    cast 0u32 0u64 into r7 as validator_boost;\n    get.or_use validator_boosting[r1] r7 into r8;\n    is.eq r8.epoch r3 into r9;\n    add r8.boost_amount r2 into r10;\n    ternary r9 r10 r2 into r11;\n    cast r3 r11 into r12 as validator_boost;\n    set r12 into validator_boosting[r1];\n\n",
  "pondo_staked_aleo_token.aleo": "import credits.aleo;\nimport multi_token_support_program_v1.aleo;\nprogram pondo_staked_aleo_token.aleo;\n\n\nstruct TokenMetadata:\n    token_id as field;\n    name as u128;\n    symbol as u128;\n    decimals as u8;\n    supply as u128;\n    max_supply as u128;\n    admin as address;\n    external_authorization_required as boolean;\n    external_authorization_party as address;\n\nstruct TokenOwner:\n    account as address;\n    token_id as field;\n\n\n\n\nfunction register_token:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call multi_token_support_program_v1.aleo/register_token 1751493913335802797273486270793650302076377624243810059080883537084141842600field 1631421259099656974472467909989204u128 482131854671u128 6u8 1_000_000_000_000_000u128 false pondo_staked_aleo_token.aleo into r0;\n    async register_token r0 into r1;\n    output r1 as pondo_staked_aleo_token.aleo/register_token.future;\n\nfinalize register_token:\n    input r0 as multi_token_support_program_v1.aleo/register_token.future;\n    await r0;\n\n\n\n\nfunction mint_public:\n    input r0 as u64.public;\n    input r1 as address.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    cast r0 into r2 as u128;\n    call multi_token_support_program_v1.aleo/mint_public 1751493913335802797273486270793650302076377624243810059080883537084141842600field r1 r2 4294967295u32 into r3;\n    async mint_public r3 into r4;\n    output r4 as pondo_staked_aleo_token.aleo/mint_public.future;\n\nfinalize mint_public:\n    input r0 as multi_token_support_program_v1.aleo/mint_public.future;\n    await r0;\n\n\n\n\nfunction burn_public:\n    input r0 as u64.public;\n    input r1 as address.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    cast r0 into r2 as u128;\n    call multi_token_support_program_v1.aleo/burn_public 1751493913335802797273486270793650302076377624243810059080883537084141842600field r1 r2 into r3;\n    async burn_public r3 into r4;\n    output r4 as pondo_staked_aleo_token.aleo/burn_public.future;\n\nfinalize burn_public:\n    input r0 as multi_token_support_program_v1.aleo/burn_public.future;\n    await r0;\n\n",
  "pondo_token.aleo": "import credits.aleo;\nimport multi_token_support_program_v1.aleo;\nprogram pondo_token.aleo;\n\n\nstruct TokenMetadata:\n    token_id as field;\n    name as u128;\n    symbol as u128;\n    decimals as u8;\n    supply as u128;\n    max_supply as u128;\n    admin as address;\n    external_authorization_required as boolean;\n    external_authorization_party as address;\n\nstruct TokenOwner:\n    account as address;\n    token_id as field;\n\nstruct Balance:\n    token_id as field;\n    account as address;\n    balance as u128;\n    authorized_until as u32;\n\n\n\n\nfunction burn_public:\n    input r0 as address.public;\n    input r1 as u128.public;\n    input r2 as u128.public;\n    gt r1 0u128 into r3;\n    assert.eq r3 true;\n    gt r2 0u128 into r4;\n    assert.eq r4 true;\n    is.eq self.signer r0 into r5;\n    is.eq self.caller r0 into r6;\n    or r5 r6 into r7;\n    assert.eq r7 true;\n    call multi_token_support_program_v1.aleo/burn_public 1751493913335802797273486270793650302076377624243810059080883537084141842601field r0 r1 into r8;\n    call multi_token_support_program_v1.aleo/transfer_public 1751493913335802797273486270793650302076377624243810059080883537084141842600field r0 r2 into r9;\n    async burn_public r8 r9 r1 r2 into r10;\n    output r10 as pondo_token.aleo/burn_public.future;\n\nfinalize burn_public:\n    input r0 as multi_token_support_program_v1.aleo/burn_public.future;\n    input r1 as multi_token_support_program_v1.aleo/transfer_public.future;\n    input r2 as u128.public;\n    input r3 as u128.public;\n    await r0;\n    await r1;\n    get multi_token_support_program_v1.aleo/registered_tokens[1751493913335802797273486270793650302076377624243810059080883537084141842601field] into r4;\n    cast pondo_token.aleo 1751493913335802797273486270793650302076377624243810059080883537084141842600field into r5 as TokenOwner;\n    hash.bhp256 r5 into r6 as field;\n    get multi_token_support_program_v1.aleo/authorized_balances[r6] into r7;\n    mul r4.supply 1_000_000u128 into r8;\n    div r8 r7.balance into r9;\n    mul r2 1_000_000u128 into r10;\n    div r10 r3 into r11;\n    gte r9 r11 into r12;\n    assert.eq r12 true;\n\n\n\n\nfunction initialize_token:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call multi_token_support_program_v1.aleo/register_token 1751493913335802797273486270793650302076377624243810059080883537084141842601field 97240284627655645872219502u128 1347306575u128 6u8 1_000_000_000_000_000u128 false pondo_token.aleo into r0;\n    call multi_token_support_program_v1.aleo/mint_public 1751493913335802797273486270793650302076377624243810059080883537084141842601field aleo1hmrpe0ts2khluprhex3y46cqqy44pme7lwc40ls9nexftx0xhu8sxxpnd0 1_000_000_000_000_000u128 4294967295u32 into r1;\n    async initialize_token r0 r1 into r2;\n    output r2 as pondo_token.aleo/initialize_token.future;\n\nfinalize initialize_token:\n    input r0 as multi_token_support_program_v1.aleo/register_token.future;\n    input r1 as multi_token_support_program_v1.aleo/mint_public.future;\n    await r0;\n    await r1;\n\n",
  "reference_delegator.aleo": "import credits.aleo;\nimport pondo_oracle.aleo;\nprogram reference_delegator.aleo;\n\n\n\nmapping initialized:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nfunction initialize:\n    assert.eq self.caller aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0;\n    call credits.aleo/transfer_public_as_signer reference_delegator.aleo 10_000_000_000u64 into r0;\n    call credits.aleo/bond_public aleo1j0zju7f0fpgv98gulyywtkxk6jca99l6425uqhnd5kccu4jc2grstjx0mt reference_delegator.aleo 10_000_000_000u64 into r1;\n    call pondo_oracle.aleo/propose_delegator aleo1j0zju7f0fpgv98gulyywtkxk6jca99l6425uqhnd5kccu4jc2grstjx0mt into r2;\n    async initialize r0 r1 r2 into r3;\n    output r3 as reference_delegator.aleo/initialize.future;\n\nfinalize initialize:\n    input r0 as credits.aleo/transfer_public_as_signer.future;\n    input r1 as credits.aleo/bond_public.future;\n    input r2 as pondo_oracle.aleo/propose_delegator.future;\n    await r0;\n    await r1;\n    await r2;\n    contains initialized[0u8] into r3;\n    assert.eq r3 false;\n    set 8u8 into initialized[0u8];\n\n\n\n\nfunction remove:\n    input r0 as u64.public;\n    assert.eq self.caller aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0;\n    call credits.aleo/unbond_public reference_delegator.aleo r0 into r1;\n    call pondo_oracle.aleo/remove_delegator into r2;\n    async remove r1 r2 into r3;\n    output r3 as reference_delegator.aleo/remove.future;\n\nfinalize remove:\n    input r0 as credits.aleo/unbond_public.future;\n    input r1 as pondo_oracle.aleo/remove_delegator.future;\n    await r0;\n    await r1;\n    contains credits.aleo/bonded[reference_delegator.aleo] into r2;\n    assert.eq r2 false;\n\n\n\n\nfunction withdraw:\n    input r0 as u64.private;\n    call credits.aleo/transfer_public aleo12shtwnmf49t5atmad2jnk3e58ahtp749d9trctt9z3wryxyzt5pspp0nd0 r0 into r1;\n    async withdraw r1 into r2;\n    output r2 as reference_delegator.aleo/withdraw.future;\n\nfinalize withdraw:\n    input r0 as credits.aleo/transfer_public.future;\n    await r0;\n    get.or_use credits.aleo/account[reference_delegator.aleo] 0u64 into r1;\n    assert.eq r1 0u64;\n\n",
  "pondo_delegator1.aleo": "import credits.aleo;\nimport pondo_oracle.aleo;\nprogram pondo_delegator1.aleo;\n\nstruct committee_state:\n    is_open as boolean;\n    commission as u8;\n\n\nstruct validator_state:\n    validator as address;\n    commission as u8;\n\n\nmapping state_mapping:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nmapping validator_mapping:\n\tkey as u8.public;\n\tvalue as validator_state.public;\n\n\nmapping banned_validators:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nfunction initialize:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async initialize into r0;\n    output r0 as pondo_delegator1.aleo/initialize.future;\n\nfinalize initialize:\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction ban_validator:\n    input r0 as address.public;\n    call pondo_oracle.aleo/pondo_ban_validator r0 into r1;\n    async ban_validator r0 r1 into r2;\n    output r2 as pondo_delegator1.aleo/ban_validator.future;\n\nfinalize ban_validator:\n    input r0 as address.public;\n    input r1 as pondo_oracle.aleo/pondo_ban_validator.future;\n    await r1;\n    contains banned_validators[r0] into r2;\n    assert.eq r2 true;\n\n\n\n\nfunction set_state:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_state into r0;\n    output r0 as pondo_delegator1.aleo/set_state.future;\n\nfinalize set_state:\n    get state_mapping[0u8] into r0;\n    is.eq r0 4u8 into r1;\n    ternary r1 4u8 2u8 into r2;\n    set r2 into state_mapping[0u8];\n\n\n\n\nfunction set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_validator r0 r1 into r2;\n    output r2 as pondo_delegator1.aleo/set_validator.future;\n\nfinalize set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    cast r0 r1 into r2 as validator_state;\n    set r2 into validator_mapping[0u8];\n    get state_mapping[0u8] into r3;\n    is.eq r3 4u8 into r4;\n    assert.eq r4 true;\n    set 0u8 into state_mapping[0u8];\n\n\n\n\nfunction bond:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/bond_public r0 pondo_delegator1.aleo r1 into r2;\n    async bond r0 r2 into r3;\n    output r3 as pondo_delegator1.aleo/bond.future;\n\nfinalize bond:\n    input r0 as address.public;\n    input r1 as credits.aleo/bond_public.future;\n    await r1;\n    get validator_mapping[0u8] into r2;\n    assert.eq r0 r2.validator;\n    get credits.aleo/account[pondo_delegator1.aleo] into r3;\n    assert.eq r3 0u64;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    is.eq r4 1u8 into r6;\n    or r5 r6 into r7;\n    assert.eq r7 true;\n    set 1u8 into state_mapping[0u8];\n\n\n\n\nfunction unbond:\n    input r0 as u64.public;\n    call credits.aleo/unbond_public pondo_delegator1.aleo r0 into r1;\n    async unbond r1 into r2;\n    output r2 as pondo_delegator1.aleo/unbond.future;\n\nfinalize unbond:\n    input r0 as credits.aleo/unbond_public.future;\n    await r0;\n    contains credits.aleo/bonded[pondo_delegator1.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    cast true 0u8 into r3 as committee_state;\n    get.or_use credits.aleo/committee[r2.validator] r3 into r4;\n    add r4.commission 10u8 into r5;\n    gt r2.commission r5 into r6;\n    gt r2.commission 50u8 into r7;\n    or r6 r7 into r8;\n    branch.eq r8 false to end_then_0_0;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    get state_mapping[0u8] into r9;\n    assert.eq r9 2u8;\n    position end_otherwise_0_1;\n    set 3u8 into state_mapping[0u8];\n\n\n\n\nfunction terminal_state:\n    async terminal_state into r0;\n    output r0 as pondo_delegator1.aleo/terminal_state.future;\n\nfinalize terminal_state:\n    contains credits.aleo/bonded[pondo_delegator1.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator1.aleo] into r1;\n    assert.eq r1 false;\n    get state_mapping[0u8] into r2;\n    is.neq r2 0u8 into r3;\n    assert.eq r3 true;\n    is.eq r2 1u8 into r4;\n    branch.eq r4 false to end_then_0_2;\n    get validator_mapping[0u8] into r5;\n    set true into banned_validators[r5.validator];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    position end_otherwise_0_3;\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction transfer_to_core_protocol:\n    input r0 as u64.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call credits.aleo/transfer_public pondo_core_protocol.aleo r0 into r1;\n    async transfer_to_core_protocol r1 into r2;\n    output r2 as pondo_delegator1.aleo/transfer_to_core_protocol.future;\n\nfinalize transfer_to_core_protocol:\n    input r0 as credits.aleo/transfer_public.future;\n    await r0;\n    get credits.aleo/account[pondo_delegator1.aleo] into r1;\n    assert.eq r1 0u64;\n    get state_mapping[0u8] into r2;\n    assert.eq r2 4u8;\n\n\n\n\nfunction bond_failed:\n    async bond_failed into r0;\n    output r0 as pondo_delegator1.aleo/bond_failed.future;\n\nfinalize bond_failed:\n    contains credits.aleo/bonded[pondo_delegator1.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator1.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    get credits.aleo/committee[r2.validator] into r3;\n    contains credits.aleo/unbonding[r2.validator] into r4;\n    is.eq r3.is_open false into r5;\n    or r5 r4 into r6;\n    assert.eq r6 true;\n    get state_mapping[0u8] into r7;\n    is.eq r7 0u8 into r8;\n    assert.eq r8 true;\n    set 4u8 into state_mapping[0u8];\n    is.eq r3.is_open false into r9;\n    branch.eq r9 false to end_then_0_4;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_5;\n    position end_then_0_4;\n    position end_otherwise_0_5;\n\n\n\n\nfunction insufficient_balance:\n    async insufficient_balance into r0;\n    output r0 as pondo_delegator1.aleo/insufficient_balance.future;\n\nfinalize insufficient_balance:\n    contains credits.aleo/bonded[pondo_delegator1.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator1.aleo] into r1;\n    assert.eq r1 false;\n    get credits.aleo/account[pondo_delegator1.aleo] into r2;\n    lt r2 10_000_000_000u64 into r3;\n    assert.eq r3 true;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    assert.eq r5 true;\n    set 4u8 into state_mapping[0u8];\n\n",
  "pondo_delegator2.aleo": "import credits.aleo;\nimport pondo_oracle.aleo;\nprogram pondo_delegator2.aleo;\n\nstruct committee_state:\n    is_open as boolean;\n    commission as u8;\n\n\nstruct validator_state:\n    validator as address;\n    commission as u8;\n\n\nmapping state_mapping:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nmapping validator_mapping:\n\tkey as u8.public;\n\tvalue as validator_state.public;\n\n\nmapping banned_validators:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nfunction initialize:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async initialize into r0;\n    output r0 as pondo_delegator2.aleo/initialize.future;\n\nfinalize initialize:\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction ban_validator:\n    input r0 as address.public;\n    call pondo_oracle.aleo/pondo_ban_validator r0 into r1;\n    async ban_validator r0 r1 into r2;\n    output r2 as pondo_delegator2.aleo/ban_validator.future;\n\nfinalize ban_validator:\n    input r0 as address.public;\n    input r1 as pondo_oracle.aleo/pondo_ban_validator.future;\n    await r1;\n    contains banned_validators[r0] into r2;\n    assert.eq r2 true;\n\n\n\n\nfunction set_state:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_state into r0;\n    output r0 as pondo_delegator2.aleo/set_state.future;\n\nfinalize set_state:\n    get state_mapping[0u8] into r0;\n    is.eq r0 4u8 into r1;\n    ternary r1 4u8 2u8 into r2;\n    set r2 into state_mapping[0u8];\n\n\n\n\nfunction set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_validator r0 r1 into r2;\n    output r2 as pondo_delegator2.aleo/set_validator.future;\n\nfinalize set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    cast r0 r1 into r2 as validator_state;\n    set r2 into validator_mapping[0u8];\n    get state_mapping[0u8] into r3;\n    is.eq r3 4u8 into r4;\n    assert.eq r4 true;\n    set 0u8 into state_mapping[0u8];\n\n\n\n\nfunction bond:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/bond_public r0 pondo_delegator2.aleo r1 into r2;\n    async bond r0 r2 into r3;\n    output r3 as pondo_delegator2.aleo/bond.future;\n\nfinalize bond:\n    input r0 as address.public;\n    input r1 as credits.aleo/bond_public.future;\n    await r1;\n    get validator_mapping[0u8] into r2;\n    assert.eq r0 r2.validator;\n    get credits.aleo/account[pondo_delegator2.aleo] into r3;\n    assert.eq r3 0u64;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    is.eq r4 1u8 into r6;\n    or r5 r6 into r7;\n    assert.eq r7 true;\n    set 1u8 into state_mapping[0u8];\n\n\n\n\nfunction unbond:\n    input r0 as u64.public;\n    call credits.aleo/unbond_public pondo_delegator2.aleo r0 into r1;\n    async unbond r1 into r2;\n    output r2 as pondo_delegator2.aleo/unbond.future;\n\nfinalize unbond:\n    input r0 as credits.aleo/unbond_public.future;\n    await r0;\n    contains credits.aleo/bonded[pondo_delegator2.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    cast true 0u8 into r3 as committee_state;\n    get.or_use credits.aleo/committee[r2.validator] r3 into r4;\n    add r4.commission 10u8 into r5;\n    gt r2.commission r5 into r6;\n    gt r2.commission 50u8 into r7;\n    or r6 r7 into r8;\n    branch.eq r8 false to end_then_0_0;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    get state_mapping[0u8] into r9;\n    assert.eq r9 2u8;\n    position end_otherwise_0_1;\n    set 3u8 into state_mapping[0u8];\n\n\n\n\nfunction terminal_state:\n    async terminal_state into r0;\n    output r0 as pondo_delegator2.aleo/terminal_state.future;\n\nfinalize terminal_state:\n    contains credits.aleo/bonded[pondo_delegator2.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator2.aleo] into r1;\n    assert.eq r1 false;\n    get state_mapping[0u8] into r2;\n    is.neq r2 0u8 into r3;\n    assert.eq r3 true;\n    is.eq r2 1u8 into r4;\n    branch.eq r4 false to end_then_0_2;\n    get validator_mapping[0u8] into r5;\n    set true into banned_validators[r5.validator];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    position end_otherwise_0_3;\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction transfer_to_core_protocol:\n    input r0 as u64.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call credits.aleo/transfer_public pondo_core_protocol.aleo r0 into r1;\n    async transfer_to_core_protocol r1 into r2;\n    output r2 as pondo_delegator2.aleo/transfer_to_core_protocol.future;\n\nfinalize transfer_to_core_protocol:\n    input r0 as credits.aleo/transfer_public.future;\n    await r0;\n    get credits.aleo/account[pondo_delegator2.aleo] into r1;\n    assert.eq r1 0u64;\n    get state_mapping[0u8] into r2;\n    assert.eq r2 4u8;\n\n\n\n\nfunction bond_failed:\n    async bond_failed into r0;\n    output r0 as pondo_delegator2.aleo/bond_failed.future;\n\nfinalize bond_failed:\n    contains credits.aleo/bonded[pondo_delegator2.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator2.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    get credits.aleo/committee[r2.validator] into r3;\n    contains credits.aleo/unbonding[r2.validator] into r4;\n    is.eq r3.is_open false into r5;\n    or r5 r4 into r6;\n    assert.eq r6 true;\n    get state_mapping[0u8] into r7;\n    is.eq r7 0u8 into r8;\n    assert.eq r8 true;\n    set 4u8 into state_mapping[0u8];\n    is.eq r3.is_open false into r9;\n    branch.eq r9 false to end_then_0_4;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_5;\n    position end_then_0_4;\n    position end_otherwise_0_5;\n\n\n\n\nfunction insufficient_balance:\n    async insufficient_balance into r0;\n    output r0 as pondo_delegator2.aleo/insufficient_balance.future;\n\nfinalize insufficient_balance:\n    contains credits.aleo/bonded[pondo_delegator2.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator2.aleo] into r1;\n    assert.eq r1 false;\n    get credits.aleo/account[pondo_delegator2.aleo] into r2;\n    lt r2 10_000_000_000u64 into r3;\n    assert.eq r3 true;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    assert.eq r5 true;\n    set 4u8 into state_mapping[0u8];\n\n",
  "pondo_delegator3.aleo": "import credits.aleo;\nimport pondo_oracle.aleo;\nprogram pondo_delegator3.aleo;\n\nstruct committee_state:\n    is_open as boolean;\n    commission as u8;\n\n\nstruct validator_state:\n    validator as address;\n    commission as u8;\n\n\nmapping state_mapping:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nmapping validator_mapping:\n\tkey as u8.public;\n\tvalue as validator_state.public;\n\n\nmapping banned_validators:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nfunction initialize:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async initialize into r0;\n    output r0 as pondo_delegator3.aleo/initialize.future;\n\nfinalize initialize:\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction ban_validator:\n    input r0 as address.public;\n    call pondo_oracle.aleo/pondo_ban_validator r0 into r1;\n    async ban_validator r0 r1 into r2;\n    output r2 as pondo_delegator3.aleo/ban_validator.future;\n\nfinalize ban_validator:\n    input r0 as address.public;\n    input r1 as pondo_oracle.aleo/pondo_ban_validator.future;\n    await r1;\n    contains banned_validators[r0] into r2;\n    assert.eq r2 true;\n\n\n\n\nfunction set_state:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_state into r0;\n    output r0 as pondo_delegator3.aleo/set_state.future;\n\nfinalize set_state:\n    get state_mapping[0u8] into r0;\n    is.eq r0 4u8 into r1;\n    ternary r1 4u8 2u8 into r2;\n    set r2 into state_mapping[0u8];\n\n\n\n\nfunction set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_validator r0 r1 into r2;\n    output r2 as pondo_delegator3.aleo/set_validator.future;\n\nfinalize set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    cast r0 r1 into r2 as validator_state;\n    set r2 into validator_mapping[0u8];\n    get state_mapping[0u8] into r3;\n    is.eq r3 4u8 into r4;\n    assert.eq r4 true;\n    set 0u8 into state_mapping[0u8];\n\n\n\n\nfunction bond:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/bond_public r0 pondo_delegator3.aleo r1 into r2;\n    async bond r0 r2 into r3;\n    output r3 as pondo_delegator3.aleo/bond.future;\n\nfinalize bond:\n    input r0 as address.public;\n    input r1 as credits.aleo/bond_public.future;\n    await r1;\n    get validator_mapping[0u8] into r2;\n    assert.eq r0 r2.validator;\n    get credits.aleo/account[pondo_delegator3.aleo] into r3;\n    assert.eq r3 0u64;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    is.eq r4 1u8 into r6;\n    or r5 r6 into r7;\n    assert.eq r7 true;\n    set 1u8 into state_mapping[0u8];\n\n\n\n\nfunction unbond:\n    input r0 as u64.public;\n    call credits.aleo/unbond_public pondo_delegator3.aleo r0 into r1;\n    async unbond r1 into r2;\n    output r2 as pondo_delegator3.aleo/unbond.future;\n\nfinalize unbond:\n    input r0 as credits.aleo/unbond_public.future;\n    await r0;\n    contains credits.aleo/bonded[pondo_delegator3.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    cast true 0u8 into r3 as committee_state;\n    get.or_use credits.aleo/committee[r2.validator] r3 into r4;\n    add r4.commission 10u8 into r5;\n    gt r2.commission r5 into r6;\n    gt r2.commission 50u8 into r7;\n    or r6 r7 into r8;\n    branch.eq r8 false to end_then_0_0;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    get state_mapping[0u8] into r9;\n    assert.eq r9 2u8;\n    position end_otherwise_0_1;\n    set 3u8 into state_mapping[0u8];\n\n\n\n\nfunction terminal_state:\n    async terminal_state into r0;\n    output r0 as pondo_delegator3.aleo/terminal_state.future;\n\nfinalize terminal_state:\n    contains credits.aleo/bonded[pondo_delegator3.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator3.aleo] into r1;\n    assert.eq r1 false;\n    get state_mapping[0u8] into r2;\n    is.neq r2 0u8 into r3;\n    assert.eq r3 true;\n    is.eq r2 1u8 into r4;\n    branch.eq r4 false to end_then_0_2;\n    get validator_mapping[0u8] into r5;\n    set true into banned_validators[r5.validator];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    position end_otherwise_0_3;\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction transfer_to_core_protocol:\n    input r0 as u64.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call credits.aleo/transfer_public pondo_core_protocol.aleo r0 into r1;\n    async transfer_to_core_protocol r1 into r2;\n    output r2 as pondo_delegator3.aleo/transfer_to_core_protocol.future;\n\nfinalize transfer_to_core_protocol:\n    input r0 as credits.aleo/transfer_public.future;\n    await r0;\n    get credits.aleo/account[pondo_delegator3.aleo] into r1;\n    assert.eq r1 0u64;\n    get state_mapping[0u8] into r2;\n    assert.eq r2 4u8;\n\n\n\n\nfunction bond_failed:\n    async bond_failed into r0;\n    output r0 as pondo_delegator3.aleo/bond_failed.future;\n\nfinalize bond_failed:\n    contains credits.aleo/bonded[pondo_delegator3.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator3.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    get credits.aleo/committee[r2.validator] into r3;\n    contains credits.aleo/unbonding[r2.validator] into r4;\n    is.eq r3.is_open false into r5;\n    or r5 r4 into r6;\n    assert.eq r6 true;\n    get state_mapping[0u8] into r7;\n    is.eq r7 0u8 into r8;\n    assert.eq r8 true;\n    set 4u8 into state_mapping[0u8];\n    is.eq r3.is_open false into r9;\n    branch.eq r9 false to end_then_0_4;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_5;\n    position end_then_0_4;\n    position end_otherwise_0_5;\n\n\n\n\nfunction insufficient_balance:\n    async insufficient_balance into r0;\n    output r0 as pondo_delegator3.aleo/insufficient_balance.future;\n\nfinalize insufficient_balance:\n    contains credits.aleo/bonded[pondo_delegator3.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator3.aleo] into r1;\n    assert.eq r1 false;\n    get credits.aleo/account[pondo_delegator3.aleo] into r2;\n    lt r2 10_000_000_000u64 into r3;\n    assert.eq r3 true;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    assert.eq r5 true;\n    set 4u8 into state_mapping[0u8];\n\n",
  "pondo_delegator4.aleo": "import credits.aleo;\nimport pondo_oracle.aleo;\nprogram pondo_delegator4.aleo;\n\nstruct committee_state:\n    is_open as boolean;\n    commission as u8;\n\n\nstruct validator_state:\n    validator as address;\n    commission as u8;\n\n\nmapping state_mapping:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nmapping validator_mapping:\n\tkey as u8.public;\n\tvalue as validator_state.public;\n\n\nmapping banned_validators:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nfunction initialize:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async initialize into r0;\n    output r0 as pondo_delegator4.aleo/initialize.future;\n\nfinalize initialize:\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction ban_validator:\n    input r0 as address.public;\n    call pondo_oracle.aleo/pondo_ban_validator r0 into r1;\n    async ban_validator r0 r1 into r2;\n    output r2 as pondo_delegator4.aleo/ban_validator.future;\n\nfinalize ban_validator:\n    input r0 as address.public;\n    input r1 as pondo_oracle.aleo/pondo_ban_validator.future;\n    await r1;\n    contains banned_validators[r0] into r2;\n    assert.eq r2 true;\n\n\n\n\nfunction set_state:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_state into r0;\n    output r0 as pondo_delegator4.aleo/set_state.future;\n\nfinalize set_state:\n    get state_mapping[0u8] into r0;\n    is.eq r0 4u8 into r1;\n    ternary r1 4u8 2u8 into r2;\n    set r2 into state_mapping[0u8];\n\n\n\n\nfunction set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_validator r0 r1 into r2;\n    output r2 as pondo_delegator4.aleo/set_validator.future;\n\nfinalize set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    cast r0 r1 into r2 as validator_state;\n    set r2 into validator_mapping[0u8];\n    get state_mapping[0u8] into r3;\n    is.eq r3 4u8 into r4;\n    assert.eq r4 true;\n    set 0u8 into state_mapping[0u8];\n\n\n\n\nfunction bond:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/bond_public r0 pondo_delegator4.aleo r1 into r2;\n    async bond r0 r2 into r3;\n    output r3 as pondo_delegator4.aleo/bond.future;\n\nfinalize bond:\n    input r0 as address.public;\n    input r1 as credits.aleo/bond_public.future;\n    await r1;\n    get validator_mapping[0u8] into r2;\n    assert.eq r0 r2.validator;\n    get credits.aleo/account[pondo_delegator4.aleo] into r3;\n    assert.eq r3 0u64;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    is.eq r4 1u8 into r6;\n    or r5 r6 into r7;\n    assert.eq r7 true;\n    set 1u8 into state_mapping[0u8];\n\n\n\n\nfunction unbond:\n    input r0 as u64.public;\n    call credits.aleo/unbond_public pondo_delegator4.aleo r0 into r1;\n    async unbond r1 into r2;\n    output r2 as pondo_delegator4.aleo/unbond.future;\n\nfinalize unbond:\n    input r0 as credits.aleo/unbond_public.future;\n    await r0;\n    contains credits.aleo/bonded[pondo_delegator4.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    cast true 0u8 into r3 as committee_state;\n    get.or_use credits.aleo/committee[r2.validator] r3 into r4;\n    add r4.commission 10u8 into r5;\n    gt r2.commission r5 into r6;\n    gt r2.commission 50u8 into r7;\n    or r6 r7 into r8;\n    branch.eq r8 false to end_then_0_0;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    get state_mapping[0u8] into r9;\n    assert.eq r9 2u8;\n    position end_otherwise_0_1;\n    set 3u8 into state_mapping[0u8];\n\n\n\n\nfunction terminal_state:\n    async terminal_state into r0;\n    output r0 as pondo_delegator4.aleo/terminal_state.future;\n\nfinalize terminal_state:\n    contains credits.aleo/bonded[pondo_delegator4.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator4.aleo] into r1;\n    assert.eq r1 false;\n    get state_mapping[0u8] into r2;\n    is.neq r2 0u8 into r3;\n    assert.eq r3 true;\n    is.eq r2 1u8 into r4;\n    branch.eq r4 false to end_then_0_2;\n    get validator_mapping[0u8] into r5;\n    set true into banned_validators[r5.validator];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    position end_otherwise_0_3;\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction transfer_to_core_protocol:\n    input r0 as u64.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call credits.aleo/transfer_public pondo_core_protocol.aleo r0 into r1;\n    async transfer_to_core_protocol r1 into r2;\n    output r2 as pondo_delegator4.aleo/transfer_to_core_protocol.future;\n\nfinalize transfer_to_core_protocol:\n    input r0 as credits.aleo/transfer_public.future;\n    await r0;\n    get credits.aleo/account[pondo_delegator4.aleo] into r1;\n    assert.eq r1 0u64;\n    get state_mapping[0u8] into r2;\n    assert.eq r2 4u8;\n\n\n\n\nfunction bond_failed:\n    async bond_failed into r0;\n    output r0 as pondo_delegator4.aleo/bond_failed.future;\n\nfinalize bond_failed:\n    contains credits.aleo/bonded[pondo_delegator4.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator4.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    get credits.aleo/committee[r2.validator] into r3;\n    contains credits.aleo/unbonding[r2.validator] into r4;\n    is.eq r3.is_open false into r5;\n    or r5 r4 into r6;\n    assert.eq r6 true;\n    get state_mapping[0u8] into r7;\n    is.eq r7 0u8 into r8;\n    assert.eq r8 true;\n    set 4u8 into state_mapping[0u8];\n    is.eq r3.is_open false into r9;\n    branch.eq r9 false to end_then_0_4;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_5;\n    position end_then_0_4;\n    position end_otherwise_0_5;\n\n\n\n\nfunction insufficient_balance:\n    async insufficient_balance into r0;\n    output r0 as pondo_delegator4.aleo/insufficient_balance.future;\n\nfinalize insufficient_balance:\n    contains credits.aleo/bonded[pondo_delegator4.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator4.aleo] into r1;\n    assert.eq r1 false;\n    get credits.aleo/account[pondo_delegator4.aleo] into r2;\n    lt r2 10_000_000_000u64 into r3;\n    assert.eq r3 true;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    assert.eq r5 true;\n    set 4u8 into state_mapping[0u8];\n\n",
  "pondo_delegator5.aleo": "import credits.aleo;\nimport pondo_oracle.aleo;\nprogram pondo_delegator5.aleo;\n\nstruct committee_state:\n    is_open as boolean;\n    commission as u8;\n\n\nstruct validator_state:\n    validator as address;\n    commission as u8;\n\n\nmapping state_mapping:\n\tkey as u8.public;\n\tvalue as u8.public;\n\n\nmapping validator_mapping:\n\tkey as u8.public;\n\tvalue as validator_state.public;\n\n\nmapping banned_validators:\n\tkey as address.public;\n\tvalue as boolean.public;\n\n\nfunction initialize:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async initialize into r0;\n    output r0 as pondo_delegator5.aleo/initialize.future;\n\nfinalize initialize:\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction ban_validator:\n    input r0 as address.public;\n    call pondo_oracle.aleo/pondo_ban_validator r0 into r1;\n    async ban_validator r0 r1 into r2;\n    output r2 as pondo_delegator5.aleo/ban_validator.future;\n\nfinalize ban_validator:\n    input r0 as address.public;\n    input r1 as pondo_oracle.aleo/pondo_ban_validator.future;\n    await r1;\n    contains banned_validators[r0] into r2;\n    assert.eq r2 true;\n\n\n\n\nfunction set_state:\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_state into r0;\n    output r0 as pondo_delegator5.aleo/set_state.future;\n\nfinalize set_state:\n    get state_mapping[0u8] into r0;\n    is.eq r0 4u8 into r1;\n    ternary r1 4u8 2u8 into r2;\n    set r2 into state_mapping[0u8];\n\n\n\n\nfunction set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    async set_validator r0 r1 into r2;\n    output r2 as pondo_delegator5.aleo/set_validator.future;\n\nfinalize set_validator:\n    input r0 as address.public;\n    input r1 as u8.public;\n    cast r0 r1 into r2 as validator_state;\n    set r2 into validator_mapping[0u8];\n    get state_mapping[0u8] into r3;\n    is.eq r3 4u8 into r4;\n    assert.eq r4 true;\n    set 0u8 into state_mapping[0u8];\n\n\n\n\nfunction bond:\n    input r0 as address.public;\n    input r1 as u64.public;\n    call credits.aleo/bond_public r0 pondo_delegator5.aleo r1 into r2;\n    async bond r0 r2 into r3;\n    output r3 as pondo_delegator5.aleo/bond.future;\n\nfinalize bond:\n    input r0 as address.public;\n    input r1 as credits.aleo/bond_public.future;\n    await r1;\n    get validator_mapping[0u8] into r2;\n    assert.eq r0 r2.validator;\n    get credits.aleo/account[pondo_delegator5.aleo] into r3;\n    assert.eq r3 0u64;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    is.eq r4 1u8 into r6;\n    or r5 r6 into r7;\n    assert.eq r7 true;\n    set 1u8 into state_mapping[0u8];\n\n\n\n\nfunction unbond:\n    input r0 as u64.public;\n    call credits.aleo/unbond_public pondo_delegator5.aleo r0 into r1;\n    async unbond r1 into r2;\n    output r2 as pondo_delegator5.aleo/unbond.future;\n\nfinalize unbond:\n    input r0 as credits.aleo/unbond_public.future;\n    await r0;\n    contains credits.aleo/bonded[pondo_delegator5.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    cast true 0u8 into r3 as committee_state;\n    get.or_use credits.aleo/committee[r2.validator] r3 into r4;\n    add r4.commission 10u8 into r5;\n    gt r2.commission r5 into r6;\n    gt r2.commission 50u8 into r7;\n    or r6 r7 into r8;\n    branch.eq r8 false to end_then_0_0;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_1;\n    position end_then_0_0;\n    get state_mapping[0u8] into r9;\n    assert.eq r9 2u8;\n    position end_otherwise_0_1;\n    set 3u8 into state_mapping[0u8];\n\n\n\n\nfunction terminal_state:\n    async terminal_state into r0;\n    output r0 as pondo_delegator5.aleo/terminal_state.future;\n\nfinalize terminal_state:\n    contains credits.aleo/bonded[pondo_delegator5.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator5.aleo] into r1;\n    assert.eq r1 false;\n    get state_mapping[0u8] into r2;\n    is.neq r2 0u8 into r3;\n    assert.eq r3 true;\n    is.eq r2 1u8 into r4;\n    branch.eq r4 false to end_then_0_2;\n    get validator_mapping[0u8] into r5;\n    set true into banned_validators[r5.validator];\n    branch.eq true true to end_otherwise_0_3;\n    position end_then_0_2;\n    position end_otherwise_0_3;\n    set 4u8 into state_mapping[0u8];\n\n\n\n\nfunction transfer_to_core_protocol:\n    input r0 as u64.public;\n    assert.eq self.caller pondo_core_protocol.aleo;\n    call credits.aleo/transfer_public pondo_core_protocol.aleo r0 into r1;\n    async transfer_to_core_protocol r1 into r2;\n    output r2 as pondo_delegator5.aleo/transfer_to_core_protocol.future;\n\nfinalize transfer_to_core_protocol:\n    input r0 as credits.aleo/transfer_public.future;\n    await r0;\n    get credits.aleo/account[pondo_delegator5.aleo] into r1;\n    assert.eq r1 0u64;\n    get state_mapping[0u8] into r2;\n    assert.eq r2 4u8;\n\n\n\n\nfunction bond_failed:\n    async bond_failed into r0;\n    output r0 as pondo_delegator5.aleo/bond_failed.future;\n\nfinalize bond_failed:\n    contains credits.aleo/bonded[pondo_delegator5.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator5.aleo] into r1;\n    assert.eq r1 false;\n    get validator_mapping[0u8] into r2;\n    get credits.aleo/committee[r2.validator] into r3;\n    contains credits.aleo/unbonding[r2.validator] into r4;\n    is.eq r3.is_open false into r5;\n    or r5 r4 into r6;\n    assert.eq r6 true;\n    get state_mapping[0u8] into r7;\n    is.eq r7 0u8 into r8;\n    assert.eq r8 true;\n    set 4u8 into state_mapping[0u8];\n    is.eq r3.is_open false into r9;\n    branch.eq r9 false to end_then_0_4;\n    set true into banned_validators[r2.validator];\n    branch.eq true true to end_otherwise_0_5;\n    position end_then_0_4;\n    position end_otherwise_0_5;\n\n\n\n\nfunction insufficient_balance:\n    async insufficient_balance into r0;\n    output r0 as pondo_delegator5.aleo/insufficient_balance.future;\n\nfinalize insufficient_balance:\n    contains credits.aleo/bonded[pondo_delegator5.aleo] into r0;\n    assert.eq r0 false;\n    contains credits.aleo/unbonding[pondo_delegator5.aleo] into r1;\n    assert.eq r1 false;\n    get credits.aleo/account[pondo_delegator5.aleo] into r2;\n    lt r2 10_000_000_000u64 into r3;\n    assert.eq r3 true;\n    get state_mapping[0u8] into r4;\n    is.eq r4 0u8 into r5;\n    assert.eq r5 true;\n    set 4u8 into state_mapping[0u8];\n\n"
};